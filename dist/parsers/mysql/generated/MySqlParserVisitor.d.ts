import { AbstractParseTreeVisitor } from "antlr4ng";
import { RootContext } from "./MySqlParser.js";
import { SqlStatementsContext } from "./MySqlParser.js";
import { SqlStatementContext } from "./MySqlParser.js";
import { EmptyStatement_Context } from "./MySqlParser.js";
import { DdlStatementContext } from "./MySqlParser.js";
import { DmlStatementContext } from "./MySqlParser.js";
import { TransactionStatementContext } from "./MySqlParser.js";
import { ReplicationStatementContext } from "./MySqlParser.js";
import { PreparedStatementContext } from "./MySqlParser.js";
import { CompoundStatementContext } from "./MySqlParser.js";
import { AdministrationStatementContext } from "./MySqlParser.js";
import { UtilityStatementContext } from "./MySqlParser.js";
import { CreateDatabaseContext } from "./MySqlParser.js";
import { CreateEventContext } from "./MySqlParser.js";
import { CreateIndexContext } from "./MySqlParser.js";
import { CreateLogfileGroupContext } from "./MySqlParser.js";
import { CreateProcedureContext } from "./MySqlParser.js";
import { CreateFunctionContext } from "./MySqlParser.js";
import { CreateRoleContext } from "./MySqlParser.js";
import { CreateServerContext } from "./MySqlParser.js";
import { CopyCreateTableContext } from "./MySqlParser.js";
import { QueryCreateTableContext } from "./MySqlParser.js";
import { ColumnCreateTableContext } from "./MySqlParser.js";
import { CreateTablespaceInnodbContext } from "./MySqlParser.js";
import { CreateTablespaceNdbContext } from "./MySqlParser.js";
import { CreateTriggerContext } from "./MySqlParser.js";
import { WithClauseContext } from "./MySqlParser.js";
import { CommonTableExpressionsContext } from "./MySqlParser.js";
import { CteNameContext } from "./MySqlParser.js";
import { CteColumnNameContext } from "./MySqlParser.js";
import { CreateViewContext } from "./MySqlParser.js";
import { CreateDatabaseOptionContext } from "./MySqlParser.js";
import { CharSetContext } from "./MySqlParser.js";
import { CurrentUserExpressionContext } from "./MySqlParser.js";
import { OwnerStatementContext } from "./MySqlParser.js";
import { PreciseScheduleContext } from "./MySqlParser.js";
import { IntervalScheduleContext } from "./MySqlParser.js";
import { TimestampValueContext } from "./MySqlParser.js";
import { IntervalExprContext } from "./MySqlParser.js";
import { IntervalTypeContext } from "./MySqlParser.js";
import { EnableTypeContext } from "./MySqlParser.js";
import { IndexTypeContext } from "./MySqlParser.js";
import { IndexOptionContext } from "./MySqlParser.js";
import { ProcedureParameterContext } from "./MySqlParser.js";
import { FunctionParameterContext } from "./MySqlParser.js";
import { RoutineCommentContext } from "./MySqlParser.js";
import { RoutineLanguageContext } from "./MySqlParser.js";
import { RoutineBehaviorContext } from "./MySqlParser.js";
import { RoutineDataContext } from "./MySqlParser.js";
import { RoutineSecurityContext } from "./MySqlParser.js";
import { ServerOptionContext } from "./MySqlParser.js";
import { CreateDefinitionsContext } from "./MySqlParser.js";
import { ColumnDeclarationContext } from "./MySqlParser.js";
import { ConstraintDeclarationContext } from "./MySqlParser.js";
import { IndexDeclarationContext } from "./MySqlParser.js";
import { ColumnDefinitionContext } from "./MySqlParser.js";
import { NullColumnConstraintContext } from "./MySqlParser.js";
import { DefaultColumnConstraintContext } from "./MySqlParser.js";
import { VisibilityColumnConstraintContext } from "./MySqlParser.js";
import { InvisibilityColumnConstraintContext } from "./MySqlParser.js";
import { AutoIncrementColumnConstraintContext } from "./MySqlParser.js";
import { PrimaryKeyColumnConstraintContext } from "./MySqlParser.js";
import { UniqueKeyColumnConstraintContext } from "./MySqlParser.js";
import { CommentColumnConstraintContext } from "./MySqlParser.js";
import { FormatColumnConstraintContext } from "./MySqlParser.js";
import { StorageColumnConstraintContext } from "./MySqlParser.js";
import { ReferenceColumnConstraintContext } from "./MySqlParser.js";
import { CollateColumnConstraintContext } from "./MySqlParser.js";
import { GeneratedColumnConstraintContext } from "./MySqlParser.js";
import { SerialDefaultColumnConstraintContext } from "./MySqlParser.js";
import { CheckColumnConstraintContext } from "./MySqlParser.js";
import { PrimaryKeyTableConstraintContext } from "./MySqlParser.js";
import { UniqueKeyTableConstraintContext } from "./MySqlParser.js";
import { ForeignKeyTableConstraintContext } from "./MySqlParser.js";
import { CheckTableConstraintContext } from "./MySqlParser.js";
import { ReferenceDefinitionContext } from "./MySqlParser.js";
import { ReferenceActionContext } from "./MySqlParser.js";
import { ReferenceControlTypeContext } from "./MySqlParser.js";
import { SimpleIndexDeclarationContext } from "./MySqlParser.js";
import { SpecialIndexDeclarationContext } from "./MySqlParser.js";
import { TableOptionEngineContext } from "./MySqlParser.js";
import { TableOptionEngineAttributeContext } from "./MySqlParser.js";
import { TableOptionAutoextendSizeContext } from "./MySqlParser.js";
import { TableOptionAutoIncrementContext } from "./MySqlParser.js";
import { TableOptionAverageContext } from "./MySqlParser.js";
import { TableOptionCharsetContext } from "./MySqlParser.js";
import { TableOptionChecksumContext } from "./MySqlParser.js";
import { TableOptionCollateContext } from "./MySqlParser.js";
import { TableOptionCommentContext } from "./MySqlParser.js";
import { TableOptionCompressionContext } from "./MySqlParser.js";
import { TableOptionConnectionContext } from "./MySqlParser.js";
import { TableOptionDataDirectoryContext } from "./MySqlParser.js";
import { TableOptionDelayContext } from "./MySqlParser.js";
import { TableOptionEncryptionContext } from "./MySqlParser.js";
import { TableOptionPageCompressedContext } from "./MySqlParser.js";
import { TableOptionPageCompressionLevelContext } from "./MySqlParser.js";
import { TableOptionEncryptionKeyIdContext } from "./MySqlParser.js";
import { TableOptionIndexDirectoryContext } from "./MySqlParser.js";
import { TableOptionInsertMethodContext } from "./MySqlParser.js";
import { TableOptionKeyBlockSizeContext } from "./MySqlParser.js";
import { TableOptionMaxRowsContext } from "./MySqlParser.js";
import { TableOptionMinRowsContext } from "./MySqlParser.js";
import { TableOptionPackKeysContext } from "./MySqlParser.js";
import { TableOptionPasswordContext } from "./MySqlParser.js";
import { TableOptionRowFormatContext } from "./MySqlParser.js";
import { TableOptionStartTransactionContext } from "./MySqlParser.js";
import { TableOptionSecondaryEngineAttributeContext } from "./MySqlParser.js";
import { TableOptionRecalculationContext } from "./MySqlParser.js";
import { TableOptionPersistentContext } from "./MySqlParser.js";
import { TableOptionSamplePageContext } from "./MySqlParser.js";
import { TableOptionTablespaceContext } from "./MySqlParser.js";
import { TableOptionTableTypeContext } from "./MySqlParser.js";
import { TableOptionTransactionalContext } from "./MySqlParser.js";
import { TableOptionUnionContext } from "./MySqlParser.js";
import { TableTypeContext } from "./MySqlParser.js";
import { TablespaceStorageContext } from "./MySqlParser.js";
import { PartitionDefinitionsContext } from "./MySqlParser.js";
import { PartitionFunctionHashContext } from "./MySqlParser.js";
import { PartitionFunctionKeyContext } from "./MySqlParser.js";
import { PartitionFunctionRangeContext } from "./MySqlParser.js";
import { PartitionFunctionListContext } from "./MySqlParser.js";
import { SubPartitionFunctionHashContext } from "./MySqlParser.js";
import { SubPartitionFunctionKeyContext } from "./MySqlParser.js";
import { PartitionComparisonContext } from "./MySqlParser.js";
import { PartitionListAtomContext } from "./MySqlParser.js";
import { PartitionListVectorContext } from "./MySqlParser.js";
import { PartitionSimpleContext } from "./MySqlParser.js";
import { PartitionDefinerAtomContext } from "./MySqlParser.js";
import { PartitionDefinerVectorContext } from "./MySqlParser.js";
import { SubpartitionDefinitionContext } from "./MySqlParser.js";
import { PartitionOptionEngineContext } from "./MySqlParser.js";
import { PartitionOptionCommentContext } from "./MySqlParser.js";
import { PartitionOptionDataDirectoryContext } from "./MySqlParser.js";
import { PartitionOptionIndexDirectoryContext } from "./MySqlParser.js";
import { PartitionOptionMaxRowsContext } from "./MySqlParser.js";
import { PartitionOptionMinRowsContext } from "./MySqlParser.js";
import { PartitionOptionTablespaceContext } from "./MySqlParser.js";
import { PartitionOptionNodeGroupContext } from "./MySqlParser.js";
import { AlterSimpleDatabaseContext } from "./MySqlParser.js";
import { AlterUpgradeNameContext } from "./MySqlParser.js";
import { AlterEventContext } from "./MySqlParser.js";
import { AlterFunctionContext } from "./MySqlParser.js";
import { AlterInstanceContext } from "./MySqlParser.js";
import { AlterLogfileGroupContext } from "./MySqlParser.js";
import { AlterProcedureContext } from "./MySqlParser.js";
import { AlterServerContext } from "./MySqlParser.js";
import { AlterTableContext } from "./MySqlParser.js";
import { AlterTablespaceContext } from "./MySqlParser.js";
import { AlterViewContext } from "./MySqlParser.js";
import { AlterByTableOptionContext } from "./MySqlParser.js";
import { AlterByAddColumnContext } from "./MySqlParser.js";
import { AlterByAddColumnsContext } from "./MySqlParser.js";
import { AlterByAddIndexContext } from "./MySqlParser.js";
import { AlterByAddPrimaryKeyContext } from "./MySqlParser.js";
import { AlterByAddUniqueKeyContext } from "./MySqlParser.js";
import { AlterByAddSpecialIndexContext } from "./MySqlParser.js";
import { AlterByAddForeignKeyContext } from "./MySqlParser.js";
import { AlterByAddCheckTableConstraintContext } from "./MySqlParser.js";
import { AlterByAlterCheckTableConstraintContext } from "./MySqlParser.js";
import { AlterBySetAlgorithmContext } from "./MySqlParser.js";
import { AlterByChangeDefaultContext } from "./MySqlParser.js";
import { AlterByChangeColumnContext } from "./MySqlParser.js";
import { AlterByRenameColumnContext } from "./MySqlParser.js";
import { AlterByLockContext } from "./MySqlParser.js";
import { AlterByModifyColumnContext } from "./MySqlParser.js";
import { AlterByDropColumnContext } from "./MySqlParser.js";
import { AlterByDropConstraintCheckContext } from "./MySqlParser.js";
import { AlterByDropPrimaryKeyContext } from "./MySqlParser.js";
import { AlterByDropIndexContext } from "./MySqlParser.js";
import { AlterByRenameIndexContext } from "./MySqlParser.js";
import { AlterByAlterColumnDefaultContext } from "./MySqlParser.js";
import { AlterByAlterIndexVisibilityContext } from "./MySqlParser.js";
import { AlterByDropForeignKeyContext } from "./MySqlParser.js";
import { AlterByDisableKeysContext } from "./MySqlParser.js";
import { AlterByEnableKeysContext } from "./MySqlParser.js";
import { AlterByRenameContext } from "./MySqlParser.js";
import { AlterByOrderContext } from "./MySqlParser.js";
import { AlterByConvertCharsetContext } from "./MySqlParser.js";
import { AlterByDefaultCharsetContext } from "./MySqlParser.js";
import { AlterByDiscardTablespaceContext } from "./MySqlParser.js";
import { AlterByImportTablespaceContext } from "./MySqlParser.js";
import { AlterByForceContext } from "./MySqlParser.js";
import { AlterByValidateContext } from "./MySqlParser.js";
import { AlterByAddDefinitionsContext } from "./MySqlParser.js";
import { AlterPartitionContext } from "./MySqlParser.js";
import { AlterByAddPartitionContext } from "./MySqlParser.js";
import { AlterByDropPartitionContext } from "./MySqlParser.js";
import { AlterByDiscardPartitionContext } from "./MySqlParser.js";
import { AlterByImportPartitionContext } from "./MySqlParser.js";
import { AlterByTruncatePartitionContext } from "./MySqlParser.js";
import { AlterByCoalescePartitionContext } from "./MySqlParser.js";
import { AlterByReorganizePartitionContext } from "./MySqlParser.js";
import { AlterByExchangePartitionContext } from "./MySqlParser.js";
import { AlterByAnalyzePartitionContext } from "./MySqlParser.js";
import { AlterByCheckPartitionContext } from "./MySqlParser.js";
import { AlterByOptimizePartitionContext } from "./MySqlParser.js";
import { AlterByRebuildPartitionContext } from "./MySqlParser.js";
import { AlterByRepairPartitionContext } from "./MySqlParser.js";
import { AlterByRemovePartitioningContext } from "./MySqlParser.js";
import { AlterByUpgradePartitioningContext } from "./MySqlParser.js";
import { DropDatabaseContext } from "./MySqlParser.js";
import { DropEventContext } from "./MySqlParser.js";
import { DropIndexContext } from "./MySqlParser.js";
import { DropLogfileGroupContext } from "./MySqlParser.js";
import { DropProcedureContext } from "./MySqlParser.js";
import { DropFunctionContext } from "./MySqlParser.js";
import { DropServerContext } from "./MySqlParser.js";
import { DropTableContext } from "./MySqlParser.js";
import { DropTablespaceContext } from "./MySqlParser.js";
import { DropTriggerContext } from "./MySqlParser.js";
import { DropViewContext } from "./MySqlParser.js";
import { DropRoleContext } from "./MySqlParser.js";
import { SetRoleContext } from "./MySqlParser.js";
import { RenameTableContext } from "./MySqlParser.js";
import { RenameTableClauseContext } from "./MySqlParser.js";
import { TruncateTableContext } from "./MySqlParser.js";
import { CallStatementContext } from "./MySqlParser.js";
import { DeleteStatementContext } from "./MySqlParser.js";
import { DoStatementContext } from "./MySqlParser.js";
import { HandlerStatementContext } from "./MySqlParser.js";
import { InsertStatementContext } from "./MySqlParser.js";
import { LoadDataStatementContext } from "./MySqlParser.js";
import { LoadXmlStatementContext } from "./MySqlParser.js";
import { ReplaceStatementContext } from "./MySqlParser.js";
import { SimpleSelectContext } from "./MySqlParser.js";
import { ParenthesisSelectContext } from "./MySqlParser.js";
import { UnionSelectContext } from "./MySqlParser.js";
import { UnionParenthesisSelectContext } from "./MySqlParser.js";
import { WithLateralStatementContext } from "./MySqlParser.js";
import { UpdateStatementContext } from "./MySqlParser.js";
import { ValuesStatementContext } from "./MySqlParser.js";
import { InsertStatementValueContext } from "./MySqlParser.js";
import { UpdatedElementContext } from "./MySqlParser.js";
import { AssignmentFieldContext } from "./MySqlParser.js";
import { LockClauseContext } from "./MySqlParser.js";
import { SingleDeleteStatementContext } from "./MySqlParser.js";
import { MultipleDeleteStatementContext } from "./MySqlParser.js";
import { HandlerOpenStatementContext } from "./MySqlParser.js";
import { HandlerReadIndexStatementContext } from "./MySqlParser.js";
import { HandlerReadStatementContext } from "./MySqlParser.js";
import { HandlerCloseStatementContext } from "./MySqlParser.js";
import { SingleUpdateStatementContext } from "./MySqlParser.js";
import { MultipleUpdateStatementContext } from "./MySqlParser.js";
import { OrderByClauseContext } from "./MySqlParser.js";
import { OrderByExpressionContext } from "./MySqlParser.js";
import { TableSourcesContext } from "./MySqlParser.js";
import { TableSourceBaseContext } from "./MySqlParser.js";
import { TableSourceNestedContext } from "./MySqlParser.js";
import { TableJsonContext } from "./MySqlParser.js";
import { AtomTableItemContext } from "./MySqlParser.js";
import { SubqueryTableItemContext } from "./MySqlParser.js";
import { TableSourcesItemContext } from "./MySqlParser.js";
import { IndexHintContext } from "./MySqlParser.js";
import { IndexHintTypeContext } from "./MySqlParser.js";
import { InnerJoinContext } from "./MySqlParser.js";
import { StraightJoinContext } from "./MySqlParser.js";
import { OuterJoinContext } from "./MySqlParser.js";
import { NaturalJoinContext } from "./MySqlParser.js";
import { JoinSpecContext } from "./MySqlParser.js";
import { QueryExpressionContext } from "./MySqlParser.js";
import { QueryExpressionNointoContext } from "./MySqlParser.js";
import { QuerySpecificationContext } from "./MySqlParser.js";
import { QuerySpecificationNointoContext } from "./MySqlParser.js";
import { UnionParenthesisContext } from "./MySqlParser.js";
import { UnionStatementContext } from "./MySqlParser.js";
import { LateralStatementContext } from "./MySqlParser.js";
import { JsonTableContext } from "./MySqlParser.js";
import { JsonColumnListContext } from "./MySqlParser.js";
import { JsonColumnContext } from "./MySqlParser.js";
import { JsonOnEmptyContext } from "./MySqlParser.js";
import { JsonOnErrorContext } from "./MySqlParser.js";
import { SelectSpecContext } from "./MySqlParser.js";
import { SelectElementsContext } from "./MySqlParser.js";
import { SelectStarElementContext } from "./MySqlParser.js";
import { SelectColumnElementContext } from "./MySqlParser.js";
import { SelectFunctionElementContext } from "./MySqlParser.js";
import { SelectExpressionElementContext } from "./MySqlParser.js";
import { SelectIntoVariablesContext } from "./MySqlParser.js";
import { SelectIntoDumpFileContext } from "./MySqlParser.js";
import { SelectIntoTextFileContext } from "./MySqlParser.js";
import { SelectFieldsIntoContext } from "./MySqlParser.js";
import { SelectLinesIntoContext } from "./MySqlParser.js";
import { FromClauseContext } from "./MySqlParser.js";
import { GroupByClauseContext } from "./MySqlParser.js";
import { HavingClauseContext } from "./MySqlParser.js";
import { WindowClauseContext } from "./MySqlParser.js";
import { GroupByItemContext } from "./MySqlParser.js";
import { LimitClauseContext } from "./MySqlParser.js";
import { LimitClauseAtomContext } from "./MySqlParser.js";
import { StartTransactionContext } from "./MySqlParser.js";
import { BeginWorkContext } from "./MySqlParser.js";
import { CommitWorkContext } from "./MySqlParser.js";
import { RollbackWorkContext } from "./MySqlParser.js";
import { SavepointStatementContext } from "./MySqlParser.js";
import { RollbackStatementContext } from "./MySqlParser.js";
import { ReleaseStatementContext } from "./MySqlParser.js";
import { LockTablesContext } from "./MySqlParser.js";
import { UnlockTablesContext } from "./MySqlParser.js";
import { SetAutocommitStatementContext } from "./MySqlParser.js";
import { SetTransactionStatementContext } from "./MySqlParser.js";
import { TransactionModeContext } from "./MySqlParser.js";
import { LockTableElementContext } from "./MySqlParser.js";
import { LockActionContext } from "./MySqlParser.js";
import { TransactionOptionContext } from "./MySqlParser.js";
import { TransactionLevelContext } from "./MySqlParser.js";
import { ChangeMasterContext } from "./MySqlParser.js";
import { ChangeReplicationFilterContext } from "./MySqlParser.js";
import { PurgeBinaryLogsContext } from "./MySqlParser.js";
import { ResetMasterContext } from "./MySqlParser.js";
import { ResetSlaveContext } from "./MySqlParser.js";
import { StartSlaveContext } from "./MySqlParser.js";
import { StopSlaveContext } from "./MySqlParser.js";
import { StartGroupReplicationContext } from "./MySqlParser.js";
import { StopGroupReplicationContext } from "./MySqlParser.js";
import { MasterStringOptionContext } from "./MySqlParser.js";
import { MasterDecimalOptionContext } from "./MySqlParser.js";
import { MasterBoolOptionContext } from "./MySqlParser.js";
import { MasterRealOptionContext } from "./MySqlParser.js";
import { MasterUidListOptionContext } from "./MySqlParser.js";
import { StringMasterOptionContext } from "./MySqlParser.js";
import { DecimalMasterOptionContext } from "./MySqlParser.js";
import { BoolMasterOptionContext } from "./MySqlParser.js";
import { ChannelOptionContext } from "./MySqlParser.js";
import { DoDbReplicationContext } from "./MySqlParser.js";
import { IgnoreDbReplicationContext } from "./MySqlParser.js";
import { DoTableReplicationContext } from "./MySqlParser.js";
import { IgnoreTableReplicationContext } from "./MySqlParser.js";
import { WildDoTableReplicationContext } from "./MySqlParser.js";
import { WildIgnoreTableReplicationContext } from "./MySqlParser.js";
import { RewriteDbReplicationContext } from "./MySqlParser.js";
import { TablePairContext } from "./MySqlParser.js";
import { ThreadTypeContext } from "./MySqlParser.js";
import { GtidsUntilOptionContext } from "./MySqlParser.js";
import { MasterLogUntilOptionContext } from "./MySqlParser.js";
import { RelayLogUntilOptionContext } from "./MySqlParser.js";
import { SqlGapsUntilOptionContext } from "./MySqlParser.js";
import { UserConnectionOptionContext } from "./MySqlParser.js";
import { PasswordConnectionOptionContext } from "./MySqlParser.js";
import { DefaultAuthConnectionOptionContext } from "./MySqlParser.js";
import { PluginDirConnectionOptionContext } from "./MySqlParser.js";
import { GtuidSetContext } from "./MySqlParser.js";
import { XaStartTransactionContext } from "./MySqlParser.js";
import { XaEndTransactionContext } from "./MySqlParser.js";
import { XaPrepareStatementContext } from "./MySqlParser.js";
import { XaCommitWorkContext } from "./MySqlParser.js";
import { XaRollbackWorkContext } from "./MySqlParser.js";
import { XaRecoverWorkContext } from "./MySqlParser.js";
import { PrepareStatementContext } from "./MySqlParser.js";
import { ExecuteStatementContext } from "./MySqlParser.js";
import { DeallocatePrepareContext } from "./MySqlParser.js";
import { RoutineBodyContext } from "./MySqlParser.js";
import { BlockStatementContext } from "./MySqlParser.js";
import { CaseStatementContext } from "./MySqlParser.js";
import { IfStatementContext } from "./MySqlParser.js";
import { IterateStatementContext } from "./MySqlParser.js";
import { LeaveStatementContext } from "./MySqlParser.js";
import { LoopStatementContext } from "./MySqlParser.js";
import { RepeatStatementContext } from "./MySqlParser.js";
import { ReturnStatementContext } from "./MySqlParser.js";
import { WhileStatementContext } from "./MySqlParser.js";
import { CloseCursorContext } from "./MySqlParser.js";
import { FetchCursorContext } from "./MySqlParser.js";
import { OpenCursorContext } from "./MySqlParser.js";
import { DeclareVariableContext } from "./MySqlParser.js";
import { DeclareConditionContext } from "./MySqlParser.js";
import { DeclareCursorContext } from "./MySqlParser.js";
import { DeclareHandlerContext } from "./MySqlParser.js";
import { HandlerConditionCodeContext } from "./MySqlParser.js";
import { HandlerConditionStateContext } from "./MySqlParser.js";
import { HandlerConditionNameContext } from "./MySqlParser.js";
import { HandlerConditionWarningContext } from "./MySqlParser.js";
import { HandlerConditionNotfoundContext } from "./MySqlParser.js";
import { HandlerConditionExceptionContext } from "./MySqlParser.js";
import { ProcedureSqlStatementContext } from "./MySqlParser.js";
import { CaseAlternativeContext } from "./MySqlParser.js";
import { ElifAlternativeContext } from "./MySqlParser.js";
import { AlterUserMysqlV56Context } from "./MySqlParser.js";
import { AlterUserMysqlV80Context } from "./MySqlParser.js";
import { CreateUserMysqlV56Context } from "./MySqlParser.js";
import { CreateUserMysqlV80Context } from "./MySqlParser.js";
import { DropUserContext } from "./MySqlParser.js";
import { GrantStatementContext } from "./MySqlParser.js";
import { RoleOptionContext } from "./MySqlParser.js";
import { GrantProxyContext } from "./MySqlParser.js";
import { RenameUserContext } from "./MySqlParser.js";
import { DetailRevokeContext } from "./MySqlParser.js";
import { ShortRevokeContext } from "./MySqlParser.js";
import { RoleRevokeContext } from "./MySqlParser.js";
import { RevokeProxyContext } from "./MySqlParser.js";
import { SetPasswordStatementContext } from "./MySqlParser.js";
import { UserSpecificationContext } from "./MySqlParser.js";
import { HashAuthOptionContext } from "./MySqlParser.js";
import { RandomAuthOptionContext } from "./MySqlParser.js";
import { StringAuthOptionContext } from "./MySqlParser.js";
import { ModuleAuthOptionContext } from "./MySqlParser.js";
import { SimpleAuthOptionContext } from "./MySqlParser.js";
import { AuthOptionClauseContext } from "./MySqlParser.js";
import { ModuleContext } from "./MySqlParser.js";
import { PasswordModuleOptionContext } from "./MySqlParser.js";
import { TlsOptionContext } from "./MySqlParser.js";
import { UserResourceOptionContext } from "./MySqlParser.js";
import { UserPasswordOptionContext } from "./MySqlParser.js";
import { UserLockOptionContext } from "./MySqlParser.js";
import { PrivelegeClauseContext } from "./MySqlParser.js";
import { PrivilegeContext } from "./MySqlParser.js";
import { CurrentSchemaPriviLevelContext } from "./MySqlParser.js";
import { GlobalPrivLevelContext } from "./MySqlParser.js";
import { DefiniteSchemaPrivLevelContext } from "./MySqlParser.js";
import { DefiniteFullTablePrivLevelContext } from "./MySqlParser.js";
import { DefiniteFullTablePrivLevel2Context } from "./MySqlParser.js";
import { DefiniteTablePrivLevelContext } from "./MySqlParser.js";
import { RenameUserClauseContext } from "./MySqlParser.js";
import { AnalyzeTableContext } from "./MySqlParser.js";
import { CheckTableContext } from "./MySqlParser.js";
import { ChecksumTableContext } from "./MySqlParser.js";
import { OptimizeTableContext } from "./MySqlParser.js";
import { RepairTableContext } from "./MySqlParser.js";
import { CheckTableOptionContext } from "./MySqlParser.js";
import { CreateUdfunctionContext } from "./MySqlParser.js";
import { InstallPluginContext } from "./MySqlParser.js";
import { UninstallPluginContext } from "./MySqlParser.js";
import { SetVariableContext } from "./MySqlParser.js";
import { SetCharsetContext } from "./MySqlParser.js";
import { SetNamesContext } from "./MySqlParser.js";
import { SetPasswordContext } from "./MySqlParser.js";
import { SetTransactionContext } from "./MySqlParser.js";
import { SetAutocommitContext } from "./MySqlParser.js";
import { SetNewValueInsideTriggerContext } from "./MySqlParser.js";
import { ShowMasterLogsContext } from "./MySqlParser.js";
import { ShowLogEventsContext } from "./MySqlParser.js";
import { ShowObjectFilterContext } from "./MySqlParser.js";
import { ShowColumnsContext } from "./MySqlParser.js";
import { ShowCreateDbContext } from "./MySqlParser.js";
import { ShowCreateFullIdObjectContext } from "./MySqlParser.js";
import { ShowCreateUserContext } from "./MySqlParser.js";
import { ShowEngineContext } from "./MySqlParser.js";
import { ShowGlobalInfoContext } from "./MySqlParser.js";
import { ShowErrorsContext } from "./MySqlParser.js";
import { ShowCountErrorsContext } from "./MySqlParser.js";
import { ShowSchemaFilterContext } from "./MySqlParser.js";
import { ShowRoutineContext } from "./MySqlParser.js";
import { ShowGrantsContext } from "./MySqlParser.js";
import { ShowIndexesContext } from "./MySqlParser.js";
import { ShowOpenTablesContext } from "./MySqlParser.js";
import { ShowProfileContext } from "./MySqlParser.js";
import { ShowSlaveStatusContext } from "./MySqlParser.js";
import { VariableClauseContext } from "./MySqlParser.js";
import { ShowCommonEntityContext } from "./MySqlParser.js";
import { ShowFilterContext } from "./MySqlParser.js";
import { ShowGlobalInfoClauseContext } from "./MySqlParser.js";
import { ShowSchemaEntityContext } from "./MySqlParser.js";
import { ShowProfileTypeContext } from "./MySqlParser.js";
import { BinlogStatementContext } from "./MySqlParser.js";
import { CacheIndexStatementContext } from "./MySqlParser.js";
import { FlushStatementContext } from "./MySqlParser.js";
import { KillStatementContext } from "./MySqlParser.js";
import { LoadIndexIntoCacheContext } from "./MySqlParser.js";
import { ResetStatementContext } from "./MySqlParser.js";
import { ShutdownStatementContext } from "./MySqlParser.js";
import { TableIndexesContext } from "./MySqlParser.js";
import { SimpleFlushOptionContext } from "./MySqlParser.js";
import { ChannelFlushOptionContext } from "./MySqlParser.js";
import { TableFlushOptionContext } from "./MySqlParser.js";
import { FlushTableOptionContext } from "./MySqlParser.js";
import { LoadedTableIndexesContext } from "./MySqlParser.js";
import { SimpleDescribeStatementContext } from "./MySqlParser.js";
import { FullDescribeStatementContext } from "./MySqlParser.js";
import { HelpStatementContext } from "./MySqlParser.js";
import { UseStatementContext } from "./MySqlParser.js";
import { SignalStatementContext } from "./MySqlParser.js";
import { ResignalStatementContext } from "./MySqlParser.js";
import { SignalConditionInformationContext } from "./MySqlParser.js";
import { WithStatementContext } from "./MySqlParser.js";
import { TableStatementContext } from "./MySqlParser.js";
import { DiagnosticsStatementContext } from "./MySqlParser.js";
import { DiagnosticsConditionInformationNameContext } from "./MySqlParser.js";
import { DescribeStatementsContext } from "./MySqlParser.js";
import { DescribeConnectionContext } from "./MySqlParser.js";
import { FullIdContext } from "./MySqlParser.js";
import { TableNameContext } from "./MySqlParser.js";
import { RoleNameContext } from "./MySqlParser.js";
import { FullColumnNameContext } from "./MySqlParser.js";
import { IndexColumnNameContext } from "./MySqlParser.js";
import { SimpleUserNameContext } from "./MySqlParser.js";
import { HostNameContext } from "./MySqlParser.js";
import { UserNameContext } from "./MySqlParser.js";
import { MysqlVariableContext } from "./MySqlParser.js";
import { CharsetNameContext } from "./MySqlParser.js";
import { CollationNameContext } from "./MySqlParser.js";
import { EngineNameContext } from "./MySqlParser.js";
import { EngineNameBaseContext } from "./MySqlParser.js";
import { UuidSetContext } from "./MySqlParser.js";
import { XidContext } from "./MySqlParser.js";
import { XuidStringIdContext } from "./MySqlParser.js";
import { AuthPluginContext } from "./MySqlParser.js";
import { UidContext } from "./MySqlParser.js";
import { SimpleIdContext } from "./MySqlParser.js";
import { DottedIdContext } from "./MySqlParser.js";
import { DecimalLiteralContext } from "./MySqlParser.js";
import { FileSizeLiteralContext } from "./MySqlParser.js";
import { StringLiteralContext } from "./MySqlParser.js";
import { BooleanLiteralContext } from "./MySqlParser.js";
import { HexadecimalLiteralContext } from "./MySqlParser.js";
import { NullNotnullContext } from "./MySqlParser.js";
import { ConstantContext } from "./MySqlParser.js";
import { StringDataTypeContext } from "./MySqlParser.js";
import { NationalVaryingStringDataTypeContext } from "./MySqlParser.js";
import { NationalStringDataTypeContext } from "./MySqlParser.js";
import { DimensionDataTypeContext } from "./MySqlParser.js";
import { SimpleDataTypeContext } from "./MySqlParser.js";
import { CollectionDataTypeContext } from "./MySqlParser.js";
import { SpatialDataTypeContext } from "./MySqlParser.js";
import { LongVarcharDataTypeContext } from "./MySqlParser.js";
import { LongVarbinaryDataTypeContext } from "./MySqlParser.js";
import { CollectionOptionsContext } from "./MySqlParser.js";
import { ConvertedDataTypeContext } from "./MySqlParser.js";
import { LengthOneDimensionContext } from "./MySqlParser.js";
import { LengthTwoDimensionContext } from "./MySqlParser.js";
import { LengthTwoOptionalDimensionContext } from "./MySqlParser.js";
import { UidListContext } from "./MySqlParser.js";
import { FullColumnNameListContext } from "./MySqlParser.js";
import { TablesContext } from "./MySqlParser.js";
import { IndexColumnNamesContext } from "./MySqlParser.js";
import { ExpressionsContext } from "./MySqlParser.js";
import { ExpressionsWithDefaultsContext } from "./MySqlParser.js";
import { ConstantsContext } from "./MySqlParser.js";
import { SimpleStringsContext } from "./MySqlParser.js";
import { UserVariablesContext } from "./MySqlParser.js";
import { DefaultValueContext } from "./MySqlParser.js";
import { CurrentTimestampContext } from "./MySqlParser.js";
import { ExpressionOrDefaultContext } from "./MySqlParser.js";
import { IfExistsContext } from "./MySqlParser.js";
import { IfNotExistsContext } from "./MySqlParser.js";
import { OrReplaceContext } from "./MySqlParser.js";
import { WaitNowaitClauseContext } from "./MySqlParser.js";
import { SpecificFunctionCallContext } from "./MySqlParser.js";
import { AggregateFunctionCallContext } from "./MySqlParser.js";
import { NonAggregateFunctionCallContext } from "./MySqlParser.js";
import { ScalarFunctionCallContext } from "./MySqlParser.js";
import { UdfFunctionCallContext } from "./MySqlParser.js";
import { PasswordFunctionCallContext } from "./MySqlParser.js";
import { SimpleFunctionCallContext } from "./MySqlParser.js";
import { CurrentUserContext } from "./MySqlParser.js";
import { DataTypeFunctionCallContext } from "./MySqlParser.js";
import { ValuesFunctionCallContext } from "./MySqlParser.js";
import { CaseExpressionFunctionCallContext } from "./MySqlParser.js";
import { CaseFunctionCallContext } from "./MySqlParser.js";
import { CharFunctionCallContext } from "./MySqlParser.js";
import { PositionFunctionCallContext } from "./MySqlParser.js";
import { SubstrFunctionCallContext } from "./MySqlParser.js";
import { TrimFunctionCallContext } from "./MySqlParser.js";
import { WeightFunctionCallContext } from "./MySqlParser.js";
import { ExtractFunctionCallContext } from "./MySqlParser.js";
import { GetFormatFunctionCallContext } from "./MySqlParser.js";
import { JsonValueFunctionCallContext } from "./MySqlParser.js";
import { CaseFuncAlternativeContext } from "./MySqlParser.js";
import { LevelWeightListContext } from "./MySqlParser.js";
import { LevelWeightRangeContext } from "./MySqlParser.js";
import { LevelInWeightListElementContext } from "./MySqlParser.js";
import { AggregateWindowedFunctionContext } from "./MySqlParser.js";
import { NonAggregateWindowedFunctionContext } from "./MySqlParser.js";
import { OverClauseContext } from "./MySqlParser.js";
import { WindowSpecContext } from "./MySqlParser.js";
import { WindowNameContext } from "./MySqlParser.js";
import { FrameClauseContext } from "./MySqlParser.js";
import { FrameUnitsContext } from "./MySqlParser.js";
import { FrameExtentContext } from "./MySqlParser.js";
import { FrameBetweenContext } from "./MySqlParser.js";
import { FrameRangeContext } from "./MySqlParser.js";
import { PartitionClauseContext } from "./MySqlParser.js";
import { ScalarFunctionNameContext } from "./MySqlParser.js";
import { PasswordFunctionClauseContext } from "./MySqlParser.js";
import { FunctionArgsContext } from "./MySqlParser.js";
import { FunctionArgContext } from "./MySqlParser.js";
import { IsExpressionContext } from "./MySqlParser.js";
import { NotExpressionContext } from "./MySqlParser.js";
import { LogicalExpressionContext } from "./MySqlParser.js";
import { PredicateExpressionContext } from "./MySqlParser.js";
import { SoundsLikePredicateContext } from "./MySqlParser.js";
import { ExpressionAtomPredicateContext } from "./MySqlParser.js";
import { SubqueryComparisonPredicateContext } from "./MySqlParser.js";
import { JsonMemberOfPredicateContext } from "./MySqlParser.js";
import { BinaryComparisonPredicateContext } from "./MySqlParser.js";
import { InPredicateContext } from "./MySqlParser.js";
import { BetweenPredicateContext } from "./MySqlParser.js";
import { IsNullPredicateContext } from "./MySqlParser.js";
import { LikePredicateContext } from "./MySqlParser.js";
import { RegexpPredicateContext } from "./MySqlParser.js";
import { UnaryExpressionAtomContext } from "./MySqlParser.js";
import { CollateExpressionAtomContext } from "./MySqlParser.js";
import { VariableAssignExpressionAtomContext } from "./MySqlParser.js";
import { MysqlVariableExpressionAtomContext } from "./MySqlParser.js";
import { NestedExpressionAtomContext } from "./MySqlParser.js";
import { NestedRowExpressionAtomContext } from "./MySqlParser.js";
import { MathExpressionAtomContext } from "./MySqlParser.js";
import { ExistsExpressionAtomContext } from "./MySqlParser.js";
import { IntervalExpressionAtomContext } from "./MySqlParser.js";
import { JsonExpressionAtomContext } from "./MySqlParser.js";
import { SubqueryExpressionAtomContext } from "./MySqlParser.js";
import { ConstantExpressionAtomContext } from "./MySqlParser.js";
import { FunctionCallExpressionAtomContext } from "./MySqlParser.js";
import { BinaryExpressionAtomContext } from "./MySqlParser.js";
import { FullColumnNameExpressionAtomContext } from "./MySqlParser.js";
import { BitExpressionAtomContext } from "./MySqlParser.js";
import { UnaryOperatorContext } from "./MySqlParser.js";
import { ComparisonOperatorContext } from "./MySqlParser.js";
import { LogicalOperatorContext } from "./MySqlParser.js";
import { BitOperatorContext } from "./MySqlParser.js";
import { MultOperatorContext } from "./MySqlParser.js";
import { AddOperatorContext } from "./MySqlParser.js";
import { JsonOperatorContext } from "./MySqlParser.js";
import { CharsetNameBaseContext } from "./MySqlParser.js";
import { TransactionLevelBaseContext } from "./MySqlParser.js";
import { PrivilegesBaseContext } from "./MySqlParser.js";
import { IntervalTypeBaseContext } from "./MySqlParser.js";
import { DataTypeBaseContext } from "./MySqlParser.js";
import { KeywordsCanBeIdContext } from "./MySqlParser.js";
import { FunctionNameBaseContext } from "./MySqlParser.js";
export declare class MySqlParserVisitor<Result> extends AbstractParseTreeVisitor<Result> {
    visitRoot?: (ctx: RootContext) => Result;
    visitSqlStatements?: (ctx: SqlStatementsContext) => Result;
    visitSqlStatement?: (ctx: SqlStatementContext) => Result;
    visitEmptyStatement_?: (ctx: EmptyStatement_Context) => Result;
    visitDdlStatement?: (ctx: DdlStatementContext) => Result;
    visitDmlStatement?: (ctx: DmlStatementContext) => Result;
    visitTransactionStatement?: (ctx: TransactionStatementContext) => Result;
    visitReplicationStatement?: (ctx: ReplicationStatementContext) => Result;
    visitPreparedStatement?: (ctx: PreparedStatementContext) => Result;
    visitCompoundStatement?: (ctx: CompoundStatementContext) => Result;
    visitAdministrationStatement?: (ctx: AdministrationStatementContext) => Result;
    visitUtilityStatement?: (ctx: UtilityStatementContext) => Result;
    visitCreateDatabase?: (ctx: CreateDatabaseContext) => Result;
    visitCreateEvent?: (ctx: CreateEventContext) => Result;
    visitCreateIndex?: (ctx: CreateIndexContext) => Result;
    visitCreateLogfileGroup?: (ctx: CreateLogfileGroupContext) => Result;
    visitCreateProcedure?: (ctx: CreateProcedureContext) => Result;
    visitCreateFunction?: (ctx: CreateFunctionContext) => Result;
    visitCreateRole?: (ctx: CreateRoleContext) => Result;
    visitCreateServer?: (ctx: CreateServerContext) => Result;
    visitCopyCreateTable?: (ctx: CopyCreateTableContext) => Result;
    visitQueryCreateTable?: (ctx: QueryCreateTableContext) => Result;
    visitColumnCreateTable?: (ctx: ColumnCreateTableContext) => Result;
    visitCreateTablespaceInnodb?: (ctx: CreateTablespaceInnodbContext) => Result;
    visitCreateTablespaceNdb?: (ctx: CreateTablespaceNdbContext) => Result;
    visitCreateTrigger?: (ctx: CreateTriggerContext) => Result;
    visitWithClause?: (ctx: WithClauseContext) => Result;
    visitCommonTableExpressions?: (ctx: CommonTableExpressionsContext) => Result;
    visitCteName?: (ctx: CteNameContext) => Result;
    visitCteColumnName?: (ctx: CteColumnNameContext) => Result;
    visitCreateView?: (ctx: CreateViewContext) => Result;
    visitCreateDatabaseOption?: (ctx: CreateDatabaseOptionContext) => Result;
    visitCharSet?: (ctx: CharSetContext) => Result;
    visitCurrentUserExpression?: (ctx: CurrentUserExpressionContext) => Result;
    visitOwnerStatement?: (ctx: OwnerStatementContext) => Result;
    visitPreciseSchedule?: (ctx: PreciseScheduleContext) => Result;
    visitIntervalSchedule?: (ctx: IntervalScheduleContext) => Result;
    visitTimestampValue?: (ctx: TimestampValueContext) => Result;
    visitIntervalExpr?: (ctx: IntervalExprContext) => Result;
    visitIntervalType?: (ctx: IntervalTypeContext) => Result;
    visitEnableType?: (ctx: EnableTypeContext) => Result;
    visitIndexType?: (ctx: IndexTypeContext) => Result;
    visitIndexOption?: (ctx: IndexOptionContext) => Result;
    visitProcedureParameter?: (ctx: ProcedureParameterContext) => Result;
    visitFunctionParameter?: (ctx: FunctionParameterContext) => Result;
    visitRoutineComment?: (ctx: RoutineCommentContext) => Result;
    visitRoutineLanguage?: (ctx: RoutineLanguageContext) => Result;
    visitRoutineBehavior?: (ctx: RoutineBehaviorContext) => Result;
    visitRoutineData?: (ctx: RoutineDataContext) => Result;
    visitRoutineSecurity?: (ctx: RoutineSecurityContext) => Result;
    visitServerOption?: (ctx: ServerOptionContext) => Result;
    visitCreateDefinitions?: (ctx: CreateDefinitionsContext) => Result;
    visitColumnDeclaration?: (ctx: ColumnDeclarationContext) => Result;
    visitConstraintDeclaration?: (ctx: ConstraintDeclarationContext) => Result;
    visitIndexDeclaration?: (ctx: IndexDeclarationContext) => Result;
    visitColumnDefinition?: (ctx: ColumnDefinitionContext) => Result;
    visitNullColumnConstraint?: (ctx: NullColumnConstraintContext) => Result;
    visitDefaultColumnConstraint?: (ctx: DefaultColumnConstraintContext) => Result;
    visitVisibilityColumnConstraint?: (ctx: VisibilityColumnConstraintContext) => Result;
    visitInvisibilityColumnConstraint?: (ctx: InvisibilityColumnConstraintContext) => Result;
    visitAutoIncrementColumnConstraint?: (ctx: AutoIncrementColumnConstraintContext) => Result;
    visitPrimaryKeyColumnConstraint?: (ctx: PrimaryKeyColumnConstraintContext) => Result;
    visitUniqueKeyColumnConstraint?: (ctx: UniqueKeyColumnConstraintContext) => Result;
    visitCommentColumnConstraint?: (ctx: CommentColumnConstraintContext) => Result;
    visitFormatColumnConstraint?: (ctx: FormatColumnConstraintContext) => Result;
    visitStorageColumnConstraint?: (ctx: StorageColumnConstraintContext) => Result;
    visitReferenceColumnConstraint?: (ctx: ReferenceColumnConstraintContext) => Result;
    visitCollateColumnConstraint?: (ctx: CollateColumnConstraintContext) => Result;
    visitGeneratedColumnConstraint?: (ctx: GeneratedColumnConstraintContext) => Result;
    visitSerialDefaultColumnConstraint?: (ctx: SerialDefaultColumnConstraintContext) => Result;
    visitCheckColumnConstraint?: (ctx: CheckColumnConstraintContext) => Result;
    visitPrimaryKeyTableConstraint?: (ctx: PrimaryKeyTableConstraintContext) => Result;
    visitUniqueKeyTableConstraint?: (ctx: UniqueKeyTableConstraintContext) => Result;
    visitForeignKeyTableConstraint?: (ctx: ForeignKeyTableConstraintContext) => Result;
    visitCheckTableConstraint?: (ctx: CheckTableConstraintContext) => Result;
    visitReferenceDefinition?: (ctx: ReferenceDefinitionContext) => Result;
    visitReferenceAction?: (ctx: ReferenceActionContext) => Result;
    visitReferenceControlType?: (ctx: ReferenceControlTypeContext) => Result;
    visitSimpleIndexDeclaration?: (ctx: SimpleIndexDeclarationContext) => Result;
    visitSpecialIndexDeclaration?: (ctx: SpecialIndexDeclarationContext) => Result;
    visitTableOptionEngine?: (ctx: TableOptionEngineContext) => Result;
    visitTableOptionEngineAttribute?: (ctx: TableOptionEngineAttributeContext) => Result;
    visitTableOptionAutoextendSize?: (ctx: TableOptionAutoextendSizeContext) => Result;
    visitTableOptionAutoIncrement?: (ctx: TableOptionAutoIncrementContext) => Result;
    visitTableOptionAverage?: (ctx: TableOptionAverageContext) => Result;
    visitTableOptionCharset?: (ctx: TableOptionCharsetContext) => Result;
    visitTableOptionChecksum?: (ctx: TableOptionChecksumContext) => Result;
    visitTableOptionCollate?: (ctx: TableOptionCollateContext) => Result;
    visitTableOptionComment?: (ctx: TableOptionCommentContext) => Result;
    visitTableOptionCompression?: (ctx: TableOptionCompressionContext) => Result;
    visitTableOptionConnection?: (ctx: TableOptionConnectionContext) => Result;
    visitTableOptionDataDirectory?: (ctx: TableOptionDataDirectoryContext) => Result;
    visitTableOptionDelay?: (ctx: TableOptionDelayContext) => Result;
    visitTableOptionEncryption?: (ctx: TableOptionEncryptionContext) => Result;
    visitTableOptionPageCompressed?: (ctx: TableOptionPageCompressedContext) => Result;
    visitTableOptionPageCompressionLevel?: (ctx: TableOptionPageCompressionLevelContext) => Result;
    visitTableOptionEncryptionKeyId?: (ctx: TableOptionEncryptionKeyIdContext) => Result;
    visitTableOptionIndexDirectory?: (ctx: TableOptionIndexDirectoryContext) => Result;
    visitTableOptionInsertMethod?: (ctx: TableOptionInsertMethodContext) => Result;
    visitTableOptionKeyBlockSize?: (ctx: TableOptionKeyBlockSizeContext) => Result;
    visitTableOptionMaxRows?: (ctx: TableOptionMaxRowsContext) => Result;
    visitTableOptionMinRows?: (ctx: TableOptionMinRowsContext) => Result;
    visitTableOptionPackKeys?: (ctx: TableOptionPackKeysContext) => Result;
    visitTableOptionPassword?: (ctx: TableOptionPasswordContext) => Result;
    visitTableOptionRowFormat?: (ctx: TableOptionRowFormatContext) => Result;
    visitTableOptionStartTransaction?: (ctx: TableOptionStartTransactionContext) => Result;
    visitTableOptionSecondaryEngineAttribute?: (ctx: TableOptionSecondaryEngineAttributeContext) => Result;
    visitTableOptionRecalculation?: (ctx: TableOptionRecalculationContext) => Result;
    visitTableOptionPersistent?: (ctx: TableOptionPersistentContext) => Result;
    visitTableOptionSamplePage?: (ctx: TableOptionSamplePageContext) => Result;
    visitTableOptionTablespace?: (ctx: TableOptionTablespaceContext) => Result;
    visitTableOptionTableType?: (ctx: TableOptionTableTypeContext) => Result;
    visitTableOptionTransactional?: (ctx: TableOptionTransactionalContext) => Result;
    visitTableOptionUnion?: (ctx: TableOptionUnionContext) => Result;
    visitTableType?: (ctx: TableTypeContext) => Result;
    visitTablespaceStorage?: (ctx: TablespaceStorageContext) => Result;
    visitPartitionDefinitions?: (ctx: PartitionDefinitionsContext) => Result;
    visitPartitionFunctionHash?: (ctx: PartitionFunctionHashContext) => Result;
    visitPartitionFunctionKey?: (ctx: PartitionFunctionKeyContext) => Result;
    visitPartitionFunctionRange?: (ctx: PartitionFunctionRangeContext) => Result;
    visitPartitionFunctionList?: (ctx: PartitionFunctionListContext) => Result;
    visitSubPartitionFunctionHash?: (ctx: SubPartitionFunctionHashContext) => Result;
    visitSubPartitionFunctionKey?: (ctx: SubPartitionFunctionKeyContext) => Result;
    visitPartitionComparison?: (ctx: PartitionComparisonContext) => Result;
    visitPartitionListAtom?: (ctx: PartitionListAtomContext) => Result;
    visitPartitionListVector?: (ctx: PartitionListVectorContext) => Result;
    visitPartitionSimple?: (ctx: PartitionSimpleContext) => Result;
    visitPartitionDefinerAtom?: (ctx: PartitionDefinerAtomContext) => Result;
    visitPartitionDefinerVector?: (ctx: PartitionDefinerVectorContext) => Result;
    visitSubpartitionDefinition?: (ctx: SubpartitionDefinitionContext) => Result;
    visitPartitionOptionEngine?: (ctx: PartitionOptionEngineContext) => Result;
    visitPartitionOptionComment?: (ctx: PartitionOptionCommentContext) => Result;
    visitPartitionOptionDataDirectory?: (ctx: PartitionOptionDataDirectoryContext) => Result;
    visitPartitionOptionIndexDirectory?: (ctx: PartitionOptionIndexDirectoryContext) => Result;
    visitPartitionOptionMaxRows?: (ctx: PartitionOptionMaxRowsContext) => Result;
    visitPartitionOptionMinRows?: (ctx: PartitionOptionMinRowsContext) => Result;
    visitPartitionOptionTablespace?: (ctx: PartitionOptionTablespaceContext) => Result;
    visitPartitionOptionNodeGroup?: (ctx: PartitionOptionNodeGroupContext) => Result;
    visitAlterSimpleDatabase?: (ctx: AlterSimpleDatabaseContext) => Result;
    visitAlterUpgradeName?: (ctx: AlterUpgradeNameContext) => Result;
    visitAlterEvent?: (ctx: AlterEventContext) => Result;
    visitAlterFunction?: (ctx: AlterFunctionContext) => Result;
    visitAlterInstance?: (ctx: AlterInstanceContext) => Result;
    visitAlterLogfileGroup?: (ctx: AlterLogfileGroupContext) => Result;
    visitAlterProcedure?: (ctx: AlterProcedureContext) => Result;
    visitAlterServer?: (ctx: AlterServerContext) => Result;
    visitAlterTable?: (ctx: AlterTableContext) => Result;
    visitAlterTablespace?: (ctx: AlterTablespaceContext) => Result;
    visitAlterView?: (ctx: AlterViewContext) => Result;
    visitAlterByTableOption?: (ctx: AlterByTableOptionContext) => Result;
    visitAlterByAddColumn?: (ctx: AlterByAddColumnContext) => Result;
    visitAlterByAddColumns?: (ctx: AlterByAddColumnsContext) => Result;
    visitAlterByAddIndex?: (ctx: AlterByAddIndexContext) => Result;
    visitAlterByAddPrimaryKey?: (ctx: AlterByAddPrimaryKeyContext) => Result;
    visitAlterByAddUniqueKey?: (ctx: AlterByAddUniqueKeyContext) => Result;
    visitAlterByAddSpecialIndex?: (ctx: AlterByAddSpecialIndexContext) => Result;
    visitAlterByAddForeignKey?: (ctx: AlterByAddForeignKeyContext) => Result;
    visitAlterByAddCheckTableConstraint?: (ctx: AlterByAddCheckTableConstraintContext) => Result;
    visitAlterByAlterCheckTableConstraint?: (ctx: AlterByAlterCheckTableConstraintContext) => Result;
    visitAlterBySetAlgorithm?: (ctx: AlterBySetAlgorithmContext) => Result;
    visitAlterByChangeDefault?: (ctx: AlterByChangeDefaultContext) => Result;
    visitAlterByChangeColumn?: (ctx: AlterByChangeColumnContext) => Result;
    visitAlterByRenameColumn?: (ctx: AlterByRenameColumnContext) => Result;
    visitAlterByLock?: (ctx: AlterByLockContext) => Result;
    visitAlterByModifyColumn?: (ctx: AlterByModifyColumnContext) => Result;
    visitAlterByDropColumn?: (ctx: AlterByDropColumnContext) => Result;
    visitAlterByDropConstraintCheck?: (ctx: AlterByDropConstraintCheckContext) => Result;
    visitAlterByDropPrimaryKey?: (ctx: AlterByDropPrimaryKeyContext) => Result;
    visitAlterByDropIndex?: (ctx: AlterByDropIndexContext) => Result;
    visitAlterByRenameIndex?: (ctx: AlterByRenameIndexContext) => Result;
    visitAlterByAlterColumnDefault?: (ctx: AlterByAlterColumnDefaultContext) => Result;
    visitAlterByAlterIndexVisibility?: (ctx: AlterByAlterIndexVisibilityContext) => Result;
    visitAlterByDropForeignKey?: (ctx: AlterByDropForeignKeyContext) => Result;
    visitAlterByDisableKeys?: (ctx: AlterByDisableKeysContext) => Result;
    visitAlterByEnableKeys?: (ctx: AlterByEnableKeysContext) => Result;
    visitAlterByRename?: (ctx: AlterByRenameContext) => Result;
    visitAlterByOrder?: (ctx: AlterByOrderContext) => Result;
    visitAlterByConvertCharset?: (ctx: AlterByConvertCharsetContext) => Result;
    visitAlterByDefaultCharset?: (ctx: AlterByDefaultCharsetContext) => Result;
    visitAlterByDiscardTablespace?: (ctx: AlterByDiscardTablespaceContext) => Result;
    visitAlterByImportTablespace?: (ctx: AlterByImportTablespaceContext) => Result;
    visitAlterByForce?: (ctx: AlterByForceContext) => Result;
    visitAlterByValidate?: (ctx: AlterByValidateContext) => Result;
    visitAlterByAddDefinitions?: (ctx: AlterByAddDefinitionsContext) => Result;
    visitAlterPartition?: (ctx: AlterPartitionContext) => Result;
    visitAlterByAddPartition?: (ctx: AlterByAddPartitionContext) => Result;
    visitAlterByDropPartition?: (ctx: AlterByDropPartitionContext) => Result;
    visitAlterByDiscardPartition?: (ctx: AlterByDiscardPartitionContext) => Result;
    visitAlterByImportPartition?: (ctx: AlterByImportPartitionContext) => Result;
    visitAlterByTruncatePartition?: (ctx: AlterByTruncatePartitionContext) => Result;
    visitAlterByCoalescePartition?: (ctx: AlterByCoalescePartitionContext) => Result;
    visitAlterByReorganizePartition?: (ctx: AlterByReorganizePartitionContext) => Result;
    visitAlterByExchangePartition?: (ctx: AlterByExchangePartitionContext) => Result;
    visitAlterByAnalyzePartition?: (ctx: AlterByAnalyzePartitionContext) => Result;
    visitAlterByCheckPartition?: (ctx: AlterByCheckPartitionContext) => Result;
    visitAlterByOptimizePartition?: (ctx: AlterByOptimizePartitionContext) => Result;
    visitAlterByRebuildPartition?: (ctx: AlterByRebuildPartitionContext) => Result;
    visitAlterByRepairPartition?: (ctx: AlterByRepairPartitionContext) => Result;
    visitAlterByRemovePartitioning?: (ctx: AlterByRemovePartitioningContext) => Result;
    visitAlterByUpgradePartitioning?: (ctx: AlterByUpgradePartitioningContext) => Result;
    visitDropDatabase?: (ctx: DropDatabaseContext) => Result;
    visitDropEvent?: (ctx: DropEventContext) => Result;
    visitDropIndex?: (ctx: DropIndexContext) => Result;
    visitDropLogfileGroup?: (ctx: DropLogfileGroupContext) => Result;
    visitDropProcedure?: (ctx: DropProcedureContext) => Result;
    visitDropFunction?: (ctx: DropFunctionContext) => Result;
    visitDropServer?: (ctx: DropServerContext) => Result;
    visitDropTable?: (ctx: DropTableContext) => Result;
    visitDropTablespace?: (ctx: DropTablespaceContext) => Result;
    visitDropTrigger?: (ctx: DropTriggerContext) => Result;
    visitDropView?: (ctx: DropViewContext) => Result;
    visitDropRole?: (ctx: DropRoleContext) => Result;
    visitSetRole?: (ctx: SetRoleContext) => Result;
    visitRenameTable?: (ctx: RenameTableContext) => Result;
    visitRenameTableClause?: (ctx: RenameTableClauseContext) => Result;
    visitTruncateTable?: (ctx: TruncateTableContext) => Result;
    visitCallStatement?: (ctx: CallStatementContext) => Result;
    visitDeleteStatement?: (ctx: DeleteStatementContext) => Result;
    visitDoStatement?: (ctx: DoStatementContext) => Result;
    visitHandlerStatement?: (ctx: HandlerStatementContext) => Result;
    visitInsertStatement?: (ctx: InsertStatementContext) => Result;
    visitLoadDataStatement?: (ctx: LoadDataStatementContext) => Result;
    visitLoadXmlStatement?: (ctx: LoadXmlStatementContext) => Result;
    visitReplaceStatement?: (ctx: ReplaceStatementContext) => Result;
    visitSimpleSelect?: (ctx: SimpleSelectContext) => Result;
    visitParenthesisSelect?: (ctx: ParenthesisSelectContext) => Result;
    visitUnionSelect?: (ctx: UnionSelectContext) => Result;
    visitUnionParenthesisSelect?: (ctx: UnionParenthesisSelectContext) => Result;
    visitWithLateralStatement?: (ctx: WithLateralStatementContext) => Result;
    visitUpdateStatement?: (ctx: UpdateStatementContext) => Result;
    visitValuesStatement?: (ctx: ValuesStatementContext) => Result;
    visitInsertStatementValue?: (ctx: InsertStatementValueContext) => Result;
    visitUpdatedElement?: (ctx: UpdatedElementContext) => Result;
    visitAssignmentField?: (ctx: AssignmentFieldContext) => Result;
    visitLockClause?: (ctx: LockClauseContext) => Result;
    visitSingleDeleteStatement?: (ctx: SingleDeleteStatementContext) => Result;
    visitMultipleDeleteStatement?: (ctx: MultipleDeleteStatementContext) => Result;
    visitHandlerOpenStatement?: (ctx: HandlerOpenStatementContext) => Result;
    visitHandlerReadIndexStatement?: (ctx: HandlerReadIndexStatementContext) => Result;
    visitHandlerReadStatement?: (ctx: HandlerReadStatementContext) => Result;
    visitHandlerCloseStatement?: (ctx: HandlerCloseStatementContext) => Result;
    visitSingleUpdateStatement?: (ctx: SingleUpdateStatementContext) => Result;
    visitMultipleUpdateStatement?: (ctx: MultipleUpdateStatementContext) => Result;
    visitOrderByClause?: (ctx: OrderByClauseContext) => Result;
    visitOrderByExpression?: (ctx: OrderByExpressionContext) => Result;
    visitTableSources?: (ctx: TableSourcesContext) => Result;
    visitTableSourceBase?: (ctx: TableSourceBaseContext) => Result;
    visitTableSourceNested?: (ctx: TableSourceNestedContext) => Result;
    visitTableJson?: (ctx: TableJsonContext) => Result;
    visitAtomTableItem?: (ctx: AtomTableItemContext) => Result;
    visitSubqueryTableItem?: (ctx: SubqueryTableItemContext) => Result;
    visitTableSourcesItem?: (ctx: TableSourcesItemContext) => Result;
    visitIndexHint?: (ctx: IndexHintContext) => Result;
    visitIndexHintType?: (ctx: IndexHintTypeContext) => Result;
    visitInnerJoin?: (ctx: InnerJoinContext) => Result;
    visitStraightJoin?: (ctx: StraightJoinContext) => Result;
    visitOuterJoin?: (ctx: OuterJoinContext) => Result;
    visitNaturalJoin?: (ctx: NaturalJoinContext) => Result;
    visitJoinSpec?: (ctx: JoinSpecContext) => Result;
    visitQueryExpression?: (ctx: QueryExpressionContext) => Result;
    visitQueryExpressionNointo?: (ctx: QueryExpressionNointoContext) => Result;
    visitQuerySpecification?: (ctx: QuerySpecificationContext) => Result;
    visitQuerySpecificationNointo?: (ctx: QuerySpecificationNointoContext) => Result;
    visitUnionParenthesis?: (ctx: UnionParenthesisContext) => Result;
    visitUnionStatement?: (ctx: UnionStatementContext) => Result;
    visitLateralStatement?: (ctx: LateralStatementContext) => Result;
    visitJsonTable?: (ctx: JsonTableContext) => Result;
    visitJsonColumnList?: (ctx: JsonColumnListContext) => Result;
    visitJsonColumn?: (ctx: JsonColumnContext) => Result;
    visitJsonOnEmpty?: (ctx: JsonOnEmptyContext) => Result;
    visitJsonOnError?: (ctx: JsonOnErrorContext) => Result;
    visitSelectSpec?: (ctx: SelectSpecContext) => Result;
    visitSelectElements?: (ctx: SelectElementsContext) => Result;
    visitSelectStarElement?: (ctx: SelectStarElementContext) => Result;
    visitSelectColumnElement?: (ctx: SelectColumnElementContext) => Result;
    visitSelectFunctionElement?: (ctx: SelectFunctionElementContext) => Result;
    visitSelectExpressionElement?: (ctx: SelectExpressionElementContext) => Result;
    visitSelectIntoVariables?: (ctx: SelectIntoVariablesContext) => Result;
    visitSelectIntoDumpFile?: (ctx: SelectIntoDumpFileContext) => Result;
    visitSelectIntoTextFile?: (ctx: SelectIntoTextFileContext) => Result;
    visitSelectFieldsInto?: (ctx: SelectFieldsIntoContext) => Result;
    visitSelectLinesInto?: (ctx: SelectLinesIntoContext) => Result;
    visitFromClause?: (ctx: FromClauseContext) => Result;
    visitGroupByClause?: (ctx: GroupByClauseContext) => Result;
    visitHavingClause?: (ctx: HavingClauseContext) => Result;
    visitWindowClause?: (ctx: WindowClauseContext) => Result;
    visitGroupByItem?: (ctx: GroupByItemContext) => Result;
    visitLimitClause?: (ctx: LimitClauseContext) => Result;
    visitLimitClauseAtom?: (ctx: LimitClauseAtomContext) => Result;
    visitStartTransaction?: (ctx: StartTransactionContext) => Result;
    visitBeginWork?: (ctx: BeginWorkContext) => Result;
    visitCommitWork?: (ctx: CommitWorkContext) => Result;
    visitRollbackWork?: (ctx: RollbackWorkContext) => Result;
    visitSavepointStatement?: (ctx: SavepointStatementContext) => Result;
    visitRollbackStatement?: (ctx: RollbackStatementContext) => Result;
    visitReleaseStatement?: (ctx: ReleaseStatementContext) => Result;
    visitLockTables?: (ctx: LockTablesContext) => Result;
    visitUnlockTables?: (ctx: UnlockTablesContext) => Result;
    visitSetAutocommitStatement?: (ctx: SetAutocommitStatementContext) => Result;
    visitSetTransactionStatement?: (ctx: SetTransactionStatementContext) => Result;
    visitTransactionMode?: (ctx: TransactionModeContext) => Result;
    visitLockTableElement?: (ctx: LockTableElementContext) => Result;
    visitLockAction?: (ctx: LockActionContext) => Result;
    visitTransactionOption?: (ctx: TransactionOptionContext) => Result;
    visitTransactionLevel?: (ctx: TransactionLevelContext) => Result;
    visitChangeMaster?: (ctx: ChangeMasterContext) => Result;
    visitChangeReplicationFilter?: (ctx: ChangeReplicationFilterContext) => Result;
    visitPurgeBinaryLogs?: (ctx: PurgeBinaryLogsContext) => Result;
    visitResetMaster?: (ctx: ResetMasterContext) => Result;
    visitResetSlave?: (ctx: ResetSlaveContext) => Result;
    visitStartSlave?: (ctx: StartSlaveContext) => Result;
    visitStopSlave?: (ctx: StopSlaveContext) => Result;
    visitStartGroupReplication?: (ctx: StartGroupReplicationContext) => Result;
    visitStopGroupReplication?: (ctx: StopGroupReplicationContext) => Result;
    visitMasterStringOption?: (ctx: MasterStringOptionContext) => Result;
    visitMasterDecimalOption?: (ctx: MasterDecimalOptionContext) => Result;
    visitMasterBoolOption?: (ctx: MasterBoolOptionContext) => Result;
    visitMasterRealOption?: (ctx: MasterRealOptionContext) => Result;
    visitMasterUidListOption?: (ctx: MasterUidListOptionContext) => Result;
    visitStringMasterOption?: (ctx: StringMasterOptionContext) => Result;
    visitDecimalMasterOption?: (ctx: DecimalMasterOptionContext) => Result;
    visitBoolMasterOption?: (ctx: BoolMasterOptionContext) => Result;
    visitChannelOption?: (ctx: ChannelOptionContext) => Result;
    visitDoDbReplication?: (ctx: DoDbReplicationContext) => Result;
    visitIgnoreDbReplication?: (ctx: IgnoreDbReplicationContext) => Result;
    visitDoTableReplication?: (ctx: DoTableReplicationContext) => Result;
    visitIgnoreTableReplication?: (ctx: IgnoreTableReplicationContext) => Result;
    visitWildDoTableReplication?: (ctx: WildDoTableReplicationContext) => Result;
    visitWildIgnoreTableReplication?: (ctx: WildIgnoreTableReplicationContext) => Result;
    visitRewriteDbReplication?: (ctx: RewriteDbReplicationContext) => Result;
    visitTablePair?: (ctx: TablePairContext) => Result;
    visitThreadType?: (ctx: ThreadTypeContext) => Result;
    visitGtidsUntilOption?: (ctx: GtidsUntilOptionContext) => Result;
    visitMasterLogUntilOption?: (ctx: MasterLogUntilOptionContext) => Result;
    visitRelayLogUntilOption?: (ctx: RelayLogUntilOptionContext) => Result;
    visitSqlGapsUntilOption?: (ctx: SqlGapsUntilOptionContext) => Result;
    visitUserConnectionOption?: (ctx: UserConnectionOptionContext) => Result;
    visitPasswordConnectionOption?: (ctx: PasswordConnectionOptionContext) => Result;
    visitDefaultAuthConnectionOption?: (ctx: DefaultAuthConnectionOptionContext) => Result;
    visitPluginDirConnectionOption?: (ctx: PluginDirConnectionOptionContext) => Result;
    visitGtuidSet?: (ctx: GtuidSetContext) => Result;
    visitXaStartTransaction?: (ctx: XaStartTransactionContext) => Result;
    visitXaEndTransaction?: (ctx: XaEndTransactionContext) => Result;
    visitXaPrepareStatement?: (ctx: XaPrepareStatementContext) => Result;
    visitXaCommitWork?: (ctx: XaCommitWorkContext) => Result;
    visitXaRollbackWork?: (ctx: XaRollbackWorkContext) => Result;
    visitXaRecoverWork?: (ctx: XaRecoverWorkContext) => Result;
    visitPrepareStatement?: (ctx: PrepareStatementContext) => Result;
    visitExecuteStatement?: (ctx: ExecuteStatementContext) => Result;
    visitDeallocatePrepare?: (ctx: DeallocatePrepareContext) => Result;
    visitRoutineBody?: (ctx: RoutineBodyContext) => Result;
    visitBlockStatement?: (ctx: BlockStatementContext) => Result;
    visitCaseStatement?: (ctx: CaseStatementContext) => Result;
    visitIfStatement?: (ctx: IfStatementContext) => Result;
    visitIterateStatement?: (ctx: IterateStatementContext) => Result;
    visitLeaveStatement?: (ctx: LeaveStatementContext) => Result;
    visitLoopStatement?: (ctx: LoopStatementContext) => Result;
    visitRepeatStatement?: (ctx: RepeatStatementContext) => Result;
    visitReturnStatement?: (ctx: ReturnStatementContext) => Result;
    visitWhileStatement?: (ctx: WhileStatementContext) => Result;
    visitCloseCursor?: (ctx: CloseCursorContext) => Result;
    visitFetchCursor?: (ctx: FetchCursorContext) => Result;
    visitOpenCursor?: (ctx: OpenCursorContext) => Result;
    visitDeclareVariable?: (ctx: DeclareVariableContext) => Result;
    visitDeclareCondition?: (ctx: DeclareConditionContext) => Result;
    visitDeclareCursor?: (ctx: DeclareCursorContext) => Result;
    visitDeclareHandler?: (ctx: DeclareHandlerContext) => Result;
    visitHandlerConditionCode?: (ctx: HandlerConditionCodeContext) => Result;
    visitHandlerConditionState?: (ctx: HandlerConditionStateContext) => Result;
    visitHandlerConditionName?: (ctx: HandlerConditionNameContext) => Result;
    visitHandlerConditionWarning?: (ctx: HandlerConditionWarningContext) => Result;
    visitHandlerConditionNotfound?: (ctx: HandlerConditionNotfoundContext) => Result;
    visitHandlerConditionException?: (ctx: HandlerConditionExceptionContext) => Result;
    visitProcedureSqlStatement?: (ctx: ProcedureSqlStatementContext) => Result;
    visitCaseAlternative?: (ctx: CaseAlternativeContext) => Result;
    visitElifAlternative?: (ctx: ElifAlternativeContext) => Result;
    visitAlterUserMysqlV56?: (ctx: AlterUserMysqlV56Context) => Result;
    visitAlterUserMysqlV80?: (ctx: AlterUserMysqlV80Context) => Result;
    visitCreateUserMysqlV56?: (ctx: CreateUserMysqlV56Context) => Result;
    visitCreateUserMysqlV80?: (ctx: CreateUserMysqlV80Context) => Result;
    visitDropUser?: (ctx: DropUserContext) => Result;
    visitGrantStatement?: (ctx: GrantStatementContext) => Result;
    visitRoleOption?: (ctx: RoleOptionContext) => Result;
    visitGrantProxy?: (ctx: GrantProxyContext) => Result;
    visitRenameUser?: (ctx: RenameUserContext) => Result;
    visitDetailRevoke?: (ctx: DetailRevokeContext) => Result;
    visitShortRevoke?: (ctx: ShortRevokeContext) => Result;
    visitRoleRevoke?: (ctx: RoleRevokeContext) => Result;
    visitRevokeProxy?: (ctx: RevokeProxyContext) => Result;
    visitSetPasswordStatement?: (ctx: SetPasswordStatementContext) => Result;
    visitUserSpecification?: (ctx: UserSpecificationContext) => Result;
    visitHashAuthOption?: (ctx: HashAuthOptionContext) => Result;
    visitRandomAuthOption?: (ctx: RandomAuthOptionContext) => Result;
    visitStringAuthOption?: (ctx: StringAuthOptionContext) => Result;
    visitModuleAuthOption?: (ctx: ModuleAuthOptionContext) => Result;
    visitSimpleAuthOption?: (ctx: SimpleAuthOptionContext) => Result;
    visitAuthOptionClause?: (ctx: AuthOptionClauseContext) => Result;
    visitModule?: (ctx: ModuleContext) => Result;
    visitPasswordModuleOption?: (ctx: PasswordModuleOptionContext) => Result;
    visitTlsOption?: (ctx: TlsOptionContext) => Result;
    visitUserResourceOption?: (ctx: UserResourceOptionContext) => Result;
    visitUserPasswordOption?: (ctx: UserPasswordOptionContext) => Result;
    visitUserLockOption?: (ctx: UserLockOptionContext) => Result;
    visitPrivelegeClause?: (ctx: PrivelegeClauseContext) => Result;
    visitPrivilege?: (ctx: PrivilegeContext) => Result;
    visitCurrentSchemaPriviLevel?: (ctx: CurrentSchemaPriviLevelContext) => Result;
    visitGlobalPrivLevel?: (ctx: GlobalPrivLevelContext) => Result;
    visitDefiniteSchemaPrivLevel?: (ctx: DefiniteSchemaPrivLevelContext) => Result;
    visitDefiniteFullTablePrivLevel?: (ctx: DefiniteFullTablePrivLevelContext) => Result;
    visitDefiniteFullTablePrivLevel2?: (ctx: DefiniteFullTablePrivLevel2Context) => Result;
    visitDefiniteTablePrivLevel?: (ctx: DefiniteTablePrivLevelContext) => Result;
    visitRenameUserClause?: (ctx: RenameUserClauseContext) => Result;
    visitAnalyzeTable?: (ctx: AnalyzeTableContext) => Result;
    visitCheckTable?: (ctx: CheckTableContext) => Result;
    visitChecksumTable?: (ctx: ChecksumTableContext) => Result;
    visitOptimizeTable?: (ctx: OptimizeTableContext) => Result;
    visitRepairTable?: (ctx: RepairTableContext) => Result;
    visitCheckTableOption?: (ctx: CheckTableOptionContext) => Result;
    visitCreateUdfunction?: (ctx: CreateUdfunctionContext) => Result;
    visitInstallPlugin?: (ctx: InstallPluginContext) => Result;
    visitUninstallPlugin?: (ctx: UninstallPluginContext) => Result;
    visitSetVariable?: (ctx: SetVariableContext) => Result;
    visitSetCharset?: (ctx: SetCharsetContext) => Result;
    visitSetNames?: (ctx: SetNamesContext) => Result;
    visitSetPassword?: (ctx: SetPasswordContext) => Result;
    visitSetTransaction?: (ctx: SetTransactionContext) => Result;
    visitSetAutocommit?: (ctx: SetAutocommitContext) => Result;
    visitSetNewValueInsideTrigger?: (ctx: SetNewValueInsideTriggerContext) => Result;
    visitShowMasterLogs?: (ctx: ShowMasterLogsContext) => Result;
    visitShowLogEvents?: (ctx: ShowLogEventsContext) => Result;
    visitShowObjectFilter?: (ctx: ShowObjectFilterContext) => Result;
    visitShowColumns?: (ctx: ShowColumnsContext) => Result;
    visitShowCreateDb?: (ctx: ShowCreateDbContext) => Result;
    visitShowCreateFullIdObject?: (ctx: ShowCreateFullIdObjectContext) => Result;
    visitShowCreateUser?: (ctx: ShowCreateUserContext) => Result;
    visitShowEngine?: (ctx: ShowEngineContext) => Result;
    visitShowGlobalInfo?: (ctx: ShowGlobalInfoContext) => Result;
    visitShowErrors?: (ctx: ShowErrorsContext) => Result;
    visitShowCountErrors?: (ctx: ShowCountErrorsContext) => Result;
    visitShowSchemaFilter?: (ctx: ShowSchemaFilterContext) => Result;
    visitShowRoutine?: (ctx: ShowRoutineContext) => Result;
    visitShowGrants?: (ctx: ShowGrantsContext) => Result;
    visitShowIndexes?: (ctx: ShowIndexesContext) => Result;
    visitShowOpenTables?: (ctx: ShowOpenTablesContext) => Result;
    visitShowProfile?: (ctx: ShowProfileContext) => Result;
    visitShowSlaveStatus?: (ctx: ShowSlaveStatusContext) => Result;
    visitVariableClause?: (ctx: VariableClauseContext) => Result;
    visitShowCommonEntity?: (ctx: ShowCommonEntityContext) => Result;
    visitShowFilter?: (ctx: ShowFilterContext) => Result;
    visitShowGlobalInfoClause?: (ctx: ShowGlobalInfoClauseContext) => Result;
    visitShowSchemaEntity?: (ctx: ShowSchemaEntityContext) => Result;
    visitShowProfileType?: (ctx: ShowProfileTypeContext) => Result;
    visitBinlogStatement?: (ctx: BinlogStatementContext) => Result;
    visitCacheIndexStatement?: (ctx: CacheIndexStatementContext) => Result;
    visitFlushStatement?: (ctx: FlushStatementContext) => Result;
    visitKillStatement?: (ctx: KillStatementContext) => Result;
    visitLoadIndexIntoCache?: (ctx: LoadIndexIntoCacheContext) => Result;
    visitResetStatement?: (ctx: ResetStatementContext) => Result;
    visitShutdownStatement?: (ctx: ShutdownStatementContext) => Result;
    visitTableIndexes?: (ctx: TableIndexesContext) => Result;
    visitSimpleFlushOption?: (ctx: SimpleFlushOptionContext) => Result;
    visitChannelFlushOption?: (ctx: ChannelFlushOptionContext) => Result;
    visitTableFlushOption?: (ctx: TableFlushOptionContext) => Result;
    visitFlushTableOption?: (ctx: FlushTableOptionContext) => Result;
    visitLoadedTableIndexes?: (ctx: LoadedTableIndexesContext) => Result;
    visitSimpleDescribeStatement?: (ctx: SimpleDescribeStatementContext) => Result;
    visitFullDescribeStatement?: (ctx: FullDescribeStatementContext) => Result;
    visitHelpStatement?: (ctx: HelpStatementContext) => Result;
    visitUseStatement?: (ctx: UseStatementContext) => Result;
    visitSignalStatement?: (ctx: SignalStatementContext) => Result;
    visitResignalStatement?: (ctx: ResignalStatementContext) => Result;
    visitSignalConditionInformation?: (ctx: SignalConditionInformationContext) => Result;
    visitWithStatement?: (ctx: WithStatementContext) => Result;
    visitTableStatement?: (ctx: TableStatementContext) => Result;
    visitDiagnosticsStatement?: (ctx: DiagnosticsStatementContext) => Result;
    visitDiagnosticsConditionInformationName?: (ctx: DiagnosticsConditionInformationNameContext) => Result;
    visitDescribeStatements?: (ctx: DescribeStatementsContext) => Result;
    visitDescribeConnection?: (ctx: DescribeConnectionContext) => Result;
    visitFullId?: (ctx: FullIdContext) => Result;
    visitTableName?: (ctx: TableNameContext) => Result;
    visitRoleName?: (ctx: RoleNameContext) => Result;
    visitFullColumnName?: (ctx: FullColumnNameContext) => Result;
    visitIndexColumnName?: (ctx: IndexColumnNameContext) => Result;
    visitSimpleUserName?: (ctx: SimpleUserNameContext) => Result;
    visitHostName?: (ctx: HostNameContext) => Result;
    visitUserName?: (ctx: UserNameContext) => Result;
    visitMysqlVariable?: (ctx: MysqlVariableContext) => Result;
    visitCharsetName?: (ctx: CharsetNameContext) => Result;
    visitCollationName?: (ctx: CollationNameContext) => Result;
    visitEngineName?: (ctx: EngineNameContext) => Result;
    visitEngineNameBase?: (ctx: EngineNameBaseContext) => Result;
    visitUuidSet?: (ctx: UuidSetContext) => Result;
    visitXid?: (ctx: XidContext) => Result;
    visitXuidStringId?: (ctx: XuidStringIdContext) => Result;
    visitAuthPlugin?: (ctx: AuthPluginContext) => Result;
    visitUid?: (ctx: UidContext) => Result;
    visitSimpleId?: (ctx: SimpleIdContext) => Result;
    visitDottedId?: (ctx: DottedIdContext) => Result;
    visitDecimalLiteral?: (ctx: DecimalLiteralContext) => Result;
    visitFileSizeLiteral?: (ctx: FileSizeLiteralContext) => Result;
    visitStringLiteral?: (ctx: StringLiteralContext) => Result;
    visitBooleanLiteral?: (ctx: BooleanLiteralContext) => Result;
    visitHexadecimalLiteral?: (ctx: HexadecimalLiteralContext) => Result;
    visitNullNotnull?: (ctx: NullNotnullContext) => Result;
    visitConstant?: (ctx: ConstantContext) => Result;
    visitStringDataType?: (ctx: StringDataTypeContext) => Result;
    visitNationalVaryingStringDataType?: (ctx: NationalVaryingStringDataTypeContext) => Result;
    visitNationalStringDataType?: (ctx: NationalStringDataTypeContext) => Result;
    visitDimensionDataType?: (ctx: DimensionDataTypeContext) => Result;
    visitSimpleDataType?: (ctx: SimpleDataTypeContext) => Result;
    visitCollectionDataType?: (ctx: CollectionDataTypeContext) => Result;
    visitSpatialDataType?: (ctx: SpatialDataTypeContext) => Result;
    visitLongVarcharDataType?: (ctx: LongVarcharDataTypeContext) => Result;
    visitLongVarbinaryDataType?: (ctx: LongVarbinaryDataTypeContext) => Result;
    visitCollectionOptions?: (ctx: CollectionOptionsContext) => Result;
    visitConvertedDataType?: (ctx: ConvertedDataTypeContext) => Result;
    visitLengthOneDimension?: (ctx: LengthOneDimensionContext) => Result;
    visitLengthTwoDimension?: (ctx: LengthTwoDimensionContext) => Result;
    visitLengthTwoOptionalDimension?: (ctx: LengthTwoOptionalDimensionContext) => Result;
    visitUidList?: (ctx: UidListContext) => Result;
    visitFullColumnNameList?: (ctx: FullColumnNameListContext) => Result;
    visitTables?: (ctx: TablesContext) => Result;
    visitIndexColumnNames?: (ctx: IndexColumnNamesContext) => Result;
    visitExpressions?: (ctx: ExpressionsContext) => Result;
    visitExpressionsWithDefaults?: (ctx: ExpressionsWithDefaultsContext) => Result;
    visitConstants?: (ctx: ConstantsContext) => Result;
    visitSimpleStrings?: (ctx: SimpleStringsContext) => Result;
    visitUserVariables?: (ctx: UserVariablesContext) => Result;
    visitDefaultValue?: (ctx: DefaultValueContext) => Result;
    visitCurrentTimestamp?: (ctx: CurrentTimestampContext) => Result;
    visitExpressionOrDefault?: (ctx: ExpressionOrDefaultContext) => Result;
    visitIfExists?: (ctx: IfExistsContext) => Result;
    visitIfNotExists?: (ctx: IfNotExistsContext) => Result;
    visitOrReplace?: (ctx: OrReplaceContext) => Result;
    visitWaitNowaitClause?: (ctx: WaitNowaitClauseContext) => Result;
    visitSpecificFunctionCall?: (ctx: SpecificFunctionCallContext) => Result;
    visitAggregateFunctionCall?: (ctx: AggregateFunctionCallContext) => Result;
    visitNonAggregateFunctionCall?: (ctx: NonAggregateFunctionCallContext) => Result;
    visitScalarFunctionCall?: (ctx: ScalarFunctionCallContext) => Result;
    visitUdfFunctionCall?: (ctx: UdfFunctionCallContext) => Result;
    visitPasswordFunctionCall?: (ctx: PasswordFunctionCallContext) => Result;
    visitSimpleFunctionCall?: (ctx: SimpleFunctionCallContext) => Result;
    visitCurrentUser?: (ctx: CurrentUserContext) => Result;
    visitDataTypeFunctionCall?: (ctx: DataTypeFunctionCallContext) => Result;
    visitValuesFunctionCall?: (ctx: ValuesFunctionCallContext) => Result;
    visitCaseExpressionFunctionCall?: (ctx: CaseExpressionFunctionCallContext) => Result;
    visitCaseFunctionCall?: (ctx: CaseFunctionCallContext) => Result;
    visitCharFunctionCall?: (ctx: CharFunctionCallContext) => Result;
    visitPositionFunctionCall?: (ctx: PositionFunctionCallContext) => Result;
    visitSubstrFunctionCall?: (ctx: SubstrFunctionCallContext) => Result;
    visitTrimFunctionCall?: (ctx: TrimFunctionCallContext) => Result;
    visitWeightFunctionCall?: (ctx: WeightFunctionCallContext) => Result;
    visitExtractFunctionCall?: (ctx: ExtractFunctionCallContext) => Result;
    visitGetFormatFunctionCall?: (ctx: GetFormatFunctionCallContext) => Result;
    visitJsonValueFunctionCall?: (ctx: JsonValueFunctionCallContext) => Result;
    visitCaseFuncAlternative?: (ctx: CaseFuncAlternativeContext) => Result;
    visitLevelWeightList?: (ctx: LevelWeightListContext) => Result;
    visitLevelWeightRange?: (ctx: LevelWeightRangeContext) => Result;
    visitLevelInWeightListElement?: (ctx: LevelInWeightListElementContext) => Result;
    visitAggregateWindowedFunction?: (ctx: AggregateWindowedFunctionContext) => Result;
    visitNonAggregateWindowedFunction?: (ctx: NonAggregateWindowedFunctionContext) => Result;
    visitOverClause?: (ctx: OverClauseContext) => Result;
    visitWindowSpec?: (ctx: WindowSpecContext) => Result;
    visitWindowName?: (ctx: WindowNameContext) => Result;
    visitFrameClause?: (ctx: FrameClauseContext) => Result;
    visitFrameUnits?: (ctx: FrameUnitsContext) => Result;
    visitFrameExtent?: (ctx: FrameExtentContext) => Result;
    visitFrameBetween?: (ctx: FrameBetweenContext) => Result;
    visitFrameRange?: (ctx: FrameRangeContext) => Result;
    visitPartitionClause?: (ctx: PartitionClauseContext) => Result;
    visitScalarFunctionName?: (ctx: ScalarFunctionNameContext) => Result;
    visitPasswordFunctionClause?: (ctx: PasswordFunctionClauseContext) => Result;
    visitFunctionArgs?: (ctx: FunctionArgsContext) => Result;
    visitFunctionArg?: (ctx: FunctionArgContext) => Result;
    visitIsExpression?: (ctx: IsExpressionContext) => Result;
    visitNotExpression?: (ctx: NotExpressionContext) => Result;
    visitLogicalExpression?: (ctx: LogicalExpressionContext) => Result;
    visitPredicateExpression?: (ctx: PredicateExpressionContext) => Result;
    visitSoundsLikePredicate?: (ctx: SoundsLikePredicateContext) => Result;
    visitExpressionAtomPredicate?: (ctx: ExpressionAtomPredicateContext) => Result;
    visitSubqueryComparisonPredicate?: (ctx: SubqueryComparisonPredicateContext) => Result;
    visitJsonMemberOfPredicate?: (ctx: JsonMemberOfPredicateContext) => Result;
    visitBinaryComparisonPredicate?: (ctx: BinaryComparisonPredicateContext) => Result;
    visitInPredicate?: (ctx: InPredicateContext) => Result;
    visitBetweenPredicate?: (ctx: BetweenPredicateContext) => Result;
    visitIsNullPredicate?: (ctx: IsNullPredicateContext) => Result;
    visitLikePredicate?: (ctx: LikePredicateContext) => Result;
    visitRegexpPredicate?: (ctx: RegexpPredicateContext) => Result;
    visitUnaryExpressionAtom?: (ctx: UnaryExpressionAtomContext) => Result;
    visitCollateExpressionAtom?: (ctx: CollateExpressionAtomContext) => Result;
    visitVariableAssignExpressionAtom?: (ctx: VariableAssignExpressionAtomContext) => Result;
    visitMysqlVariableExpressionAtom?: (ctx: MysqlVariableExpressionAtomContext) => Result;
    visitNestedExpressionAtom?: (ctx: NestedExpressionAtomContext) => Result;
    visitNestedRowExpressionAtom?: (ctx: NestedRowExpressionAtomContext) => Result;
    visitMathExpressionAtom?: (ctx: MathExpressionAtomContext) => Result;
    visitExistsExpressionAtom?: (ctx: ExistsExpressionAtomContext) => Result;
    visitIntervalExpressionAtom?: (ctx: IntervalExpressionAtomContext) => Result;
    visitJsonExpressionAtom?: (ctx: JsonExpressionAtomContext) => Result;
    visitSubqueryExpressionAtom?: (ctx: SubqueryExpressionAtomContext) => Result;
    visitConstantExpressionAtom?: (ctx: ConstantExpressionAtomContext) => Result;
    visitFunctionCallExpressionAtom?: (ctx: FunctionCallExpressionAtomContext) => Result;
    visitBinaryExpressionAtom?: (ctx: BinaryExpressionAtomContext) => Result;
    visitFullColumnNameExpressionAtom?: (ctx: FullColumnNameExpressionAtomContext) => Result;
    visitBitExpressionAtom?: (ctx: BitExpressionAtomContext) => Result;
    visitUnaryOperator?: (ctx: UnaryOperatorContext) => Result;
    visitComparisonOperator?: (ctx: ComparisonOperatorContext) => Result;
    visitLogicalOperator?: (ctx: LogicalOperatorContext) => Result;
    visitBitOperator?: (ctx: BitOperatorContext) => Result;
    visitMultOperator?: (ctx: MultOperatorContext) => Result;
    visitAddOperator?: (ctx: AddOperatorContext) => Result;
    visitJsonOperator?: (ctx: JsonOperatorContext) => Result;
    visitCharsetNameBase?: (ctx: CharsetNameBaseContext) => Result;
    visitTransactionLevelBase?: (ctx: TransactionLevelBaseContext) => Result;
    visitPrivilegesBase?: (ctx: PrivilegesBaseContext) => Result;
    visitIntervalTypeBase?: (ctx: IntervalTypeBaseContext) => Result;
    visitDataTypeBase?: (ctx: DataTypeBaseContext) => Result;
    visitKeywordsCanBeId?: (ctx: KeywordsCanBeIdContext) => Result;
    visitFunctionNameBase?: (ctx: FunctionNameBaseContext) => Result;
}
