{"version":3,"file":"MySqlParserVisitor.js","sourceRoot":"","sources":["../../../../src/parsers/mysql/generated/MySqlParserVisitor.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,wBAAwB,EAAE,MAAM,UAAU,CAAC;AAsnBpD,MAAM,OAAO,kBAA2B,SAAQ,wBAAgC;CA06H/E","sourcesContent":["// Generated from src/parsers/mysql/grammar/MySqlParser.g4 by ANTLR 4.13.1\n\nimport { AbstractParseTreeVisitor } from \"antlr4ng\";\n\n\nimport { RootContext } from \"./MySqlParser.js\";\nimport { SqlStatementsContext } from \"./MySqlParser.js\";\nimport { SqlStatementContext } from \"./MySqlParser.js\";\nimport { EmptyStatement_Context } from \"./MySqlParser.js\";\nimport { DdlStatementContext } from \"./MySqlParser.js\";\nimport { DmlStatementContext } from \"./MySqlParser.js\";\nimport { TransactionStatementContext } from \"./MySqlParser.js\";\nimport { ReplicationStatementContext } from \"./MySqlParser.js\";\nimport { PreparedStatementContext } from \"./MySqlParser.js\";\nimport { CompoundStatementContext } from \"./MySqlParser.js\";\nimport { AdministrationStatementContext } from \"./MySqlParser.js\";\nimport { UtilityStatementContext } from \"./MySqlParser.js\";\nimport { CreateDatabaseContext } from \"./MySqlParser.js\";\nimport { CreateEventContext } from \"./MySqlParser.js\";\nimport { CreateIndexContext } from \"./MySqlParser.js\";\nimport { CreateLogfileGroupContext } from \"./MySqlParser.js\";\nimport { CreateProcedureContext } from \"./MySqlParser.js\";\nimport { CreateFunctionContext } from \"./MySqlParser.js\";\nimport { CreateRoleContext } from \"./MySqlParser.js\";\nimport { CreateServerContext } from \"./MySqlParser.js\";\nimport { CopyCreateTableContext } from \"./MySqlParser.js\";\nimport { QueryCreateTableContext } from \"./MySqlParser.js\";\nimport { ColumnCreateTableContext } from \"./MySqlParser.js\";\nimport { CreateTablespaceInnodbContext } from \"./MySqlParser.js\";\nimport { CreateTablespaceNdbContext } from \"./MySqlParser.js\";\nimport { CreateTriggerContext } from \"./MySqlParser.js\";\nimport { WithClauseContext } from \"./MySqlParser.js\";\nimport { CommonTableExpressionsContext } from \"./MySqlParser.js\";\nimport { CteNameContext } from \"./MySqlParser.js\";\nimport { CteColumnNameContext } from \"./MySqlParser.js\";\nimport { CreateViewContext } from \"./MySqlParser.js\";\nimport { CreateDatabaseOptionContext } from \"./MySqlParser.js\";\nimport { CharSetContext } from \"./MySqlParser.js\";\nimport { CurrentUserExpressionContext } from \"./MySqlParser.js\";\nimport { OwnerStatementContext } from \"./MySqlParser.js\";\nimport { PreciseScheduleContext } from \"./MySqlParser.js\";\nimport { IntervalScheduleContext } from \"./MySqlParser.js\";\nimport { TimestampValueContext } from \"./MySqlParser.js\";\nimport { IntervalExprContext } from \"./MySqlParser.js\";\nimport { IntervalTypeContext } from \"./MySqlParser.js\";\nimport { EnableTypeContext } from \"./MySqlParser.js\";\nimport { IndexTypeContext } from \"./MySqlParser.js\";\nimport { IndexOptionContext } from \"./MySqlParser.js\";\nimport { ProcedureParameterContext } from \"./MySqlParser.js\";\nimport { FunctionParameterContext } from \"./MySqlParser.js\";\nimport { RoutineCommentContext } from \"./MySqlParser.js\";\nimport { RoutineLanguageContext } from \"./MySqlParser.js\";\nimport { RoutineBehaviorContext } from \"./MySqlParser.js\";\nimport { RoutineDataContext } from \"./MySqlParser.js\";\nimport { RoutineSecurityContext } from \"./MySqlParser.js\";\nimport { ServerOptionContext } from \"./MySqlParser.js\";\nimport { CreateDefinitionsContext } from \"./MySqlParser.js\";\nimport { ColumnDeclarationContext } from \"./MySqlParser.js\";\nimport { ConstraintDeclarationContext } from \"./MySqlParser.js\";\nimport { IndexDeclarationContext } from \"./MySqlParser.js\";\nimport { ColumnDefinitionContext } from \"./MySqlParser.js\";\nimport { NullColumnConstraintContext } from \"./MySqlParser.js\";\nimport { DefaultColumnConstraintContext } from \"./MySqlParser.js\";\nimport { VisibilityColumnConstraintContext } from \"./MySqlParser.js\";\nimport { InvisibilityColumnConstraintContext } from \"./MySqlParser.js\";\nimport { AutoIncrementColumnConstraintContext } from \"./MySqlParser.js\";\nimport { PrimaryKeyColumnConstraintContext } from \"./MySqlParser.js\";\nimport { UniqueKeyColumnConstraintContext } from \"./MySqlParser.js\";\nimport { CommentColumnConstraintContext } from \"./MySqlParser.js\";\nimport { FormatColumnConstraintContext } from \"./MySqlParser.js\";\nimport { StorageColumnConstraintContext } from \"./MySqlParser.js\";\nimport { ReferenceColumnConstraintContext } from \"./MySqlParser.js\";\nimport { CollateColumnConstraintContext } from \"./MySqlParser.js\";\nimport { GeneratedColumnConstraintContext } from \"./MySqlParser.js\";\nimport { SerialDefaultColumnConstraintContext } from \"./MySqlParser.js\";\nimport { CheckColumnConstraintContext } from \"./MySqlParser.js\";\nimport { PrimaryKeyTableConstraintContext } from \"./MySqlParser.js\";\nimport { UniqueKeyTableConstraintContext } from \"./MySqlParser.js\";\nimport { ForeignKeyTableConstraintContext } from \"./MySqlParser.js\";\nimport { CheckTableConstraintContext } from \"./MySqlParser.js\";\nimport { ReferenceDefinitionContext } from \"./MySqlParser.js\";\nimport { ReferenceActionContext } from \"./MySqlParser.js\";\nimport { ReferenceControlTypeContext } from \"./MySqlParser.js\";\nimport { SimpleIndexDeclarationContext } from \"./MySqlParser.js\";\nimport { SpecialIndexDeclarationContext } from \"./MySqlParser.js\";\nimport { TableOptionEngineContext } from \"./MySqlParser.js\";\nimport { TableOptionEngineAttributeContext } from \"./MySqlParser.js\";\nimport { TableOptionAutoextendSizeContext } from \"./MySqlParser.js\";\nimport { TableOptionAutoIncrementContext } from \"./MySqlParser.js\";\nimport { TableOptionAverageContext } from \"./MySqlParser.js\";\nimport { TableOptionCharsetContext } from \"./MySqlParser.js\";\nimport { TableOptionChecksumContext } from \"./MySqlParser.js\";\nimport { TableOptionCollateContext } from \"./MySqlParser.js\";\nimport { TableOptionCommentContext } from \"./MySqlParser.js\";\nimport { TableOptionCompressionContext } from \"./MySqlParser.js\";\nimport { TableOptionConnectionContext } from \"./MySqlParser.js\";\nimport { TableOptionDataDirectoryContext } from \"./MySqlParser.js\";\nimport { TableOptionDelayContext } from \"./MySqlParser.js\";\nimport { TableOptionEncryptionContext } from \"./MySqlParser.js\";\nimport { TableOptionPageCompressedContext } from \"./MySqlParser.js\";\nimport { TableOptionPageCompressionLevelContext } from \"./MySqlParser.js\";\nimport { TableOptionEncryptionKeyIdContext } from \"./MySqlParser.js\";\nimport { TableOptionIndexDirectoryContext } from \"./MySqlParser.js\";\nimport { TableOptionInsertMethodContext } from \"./MySqlParser.js\";\nimport { TableOptionKeyBlockSizeContext } from \"./MySqlParser.js\";\nimport { TableOptionMaxRowsContext } from \"./MySqlParser.js\";\nimport { TableOptionMinRowsContext } from \"./MySqlParser.js\";\nimport { TableOptionPackKeysContext } from \"./MySqlParser.js\";\nimport { TableOptionPasswordContext } from \"./MySqlParser.js\";\nimport { TableOptionRowFormatContext } from \"./MySqlParser.js\";\nimport { TableOptionStartTransactionContext } from \"./MySqlParser.js\";\nimport { TableOptionSecondaryEngineAttributeContext } from \"./MySqlParser.js\";\nimport { TableOptionRecalculationContext } from \"./MySqlParser.js\";\nimport { TableOptionPersistentContext } from \"./MySqlParser.js\";\nimport { TableOptionSamplePageContext } from \"./MySqlParser.js\";\nimport { TableOptionTablespaceContext } from \"./MySqlParser.js\";\nimport { TableOptionTableTypeContext } from \"./MySqlParser.js\";\nimport { TableOptionTransactionalContext } from \"./MySqlParser.js\";\nimport { TableOptionUnionContext } from \"./MySqlParser.js\";\nimport { TableTypeContext } from \"./MySqlParser.js\";\nimport { TablespaceStorageContext } from \"./MySqlParser.js\";\nimport { PartitionDefinitionsContext } from \"./MySqlParser.js\";\nimport { PartitionFunctionHashContext } from \"./MySqlParser.js\";\nimport { PartitionFunctionKeyContext } from \"./MySqlParser.js\";\nimport { PartitionFunctionRangeContext } from \"./MySqlParser.js\";\nimport { PartitionFunctionListContext } from \"./MySqlParser.js\";\nimport { SubPartitionFunctionHashContext } from \"./MySqlParser.js\";\nimport { SubPartitionFunctionKeyContext } from \"./MySqlParser.js\";\nimport { PartitionComparisonContext } from \"./MySqlParser.js\";\nimport { PartitionListAtomContext } from \"./MySqlParser.js\";\nimport { PartitionListVectorContext } from \"./MySqlParser.js\";\nimport { PartitionSimpleContext } from \"./MySqlParser.js\";\nimport { PartitionDefinerAtomContext } from \"./MySqlParser.js\";\nimport { PartitionDefinerVectorContext } from \"./MySqlParser.js\";\nimport { SubpartitionDefinitionContext } from \"./MySqlParser.js\";\nimport { PartitionOptionEngineContext } from \"./MySqlParser.js\";\nimport { PartitionOptionCommentContext } from \"./MySqlParser.js\";\nimport { PartitionOptionDataDirectoryContext } from \"./MySqlParser.js\";\nimport { PartitionOptionIndexDirectoryContext } from \"./MySqlParser.js\";\nimport { PartitionOptionMaxRowsContext } from \"./MySqlParser.js\";\nimport { PartitionOptionMinRowsContext } from \"./MySqlParser.js\";\nimport { PartitionOptionTablespaceContext } from \"./MySqlParser.js\";\nimport { PartitionOptionNodeGroupContext } from \"./MySqlParser.js\";\nimport { AlterSimpleDatabaseContext } from \"./MySqlParser.js\";\nimport { AlterUpgradeNameContext } from \"./MySqlParser.js\";\nimport { AlterEventContext } from \"./MySqlParser.js\";\nimport { AlterFunctionContext } from \"./MySqlParser.js\";\nimport { AlterInstanceContext } from \"./MySqlParser.js\";\nimport { AlterLogfileGroupContext } from \"./MySqlParser.js\";\nimport { AlterProcedureContext } from \"./MySqlParser.js\";\nimport { AlterServerContext } from \"./MySqlParser.js\";\nimport { AlterTableContext } from \"./MySqlParser.js\";\nimport { AlterTablespaceContext } from \"./MySqlParser.js\";\nimport { AlterViewContext } from \"./MySqlParser.js\";\nimport { AlterByTableOptionContext } from \"./MySqlParser.js\";\nimport { AlterByAddColumnContext } from \"./MySqlParser.js\";\nimport { AlterByAddColumnsContext } from \"./MySqlParser.js\";\nimport { AlterByAddIndexContext } from \"./MySqlParser.js\";\nimport { AlterByAddPrimaryKeyContext } from \"./MySqlParser.js\";\nimport { AlterByAddUniqueKeyContext } from \"./MySqlParser.js\";\nimport { AlterByAddSpecialIndexContext } from \"./MySqlParser.js\";\nimport { AlterByAddForeignKeyContext } from \"./MySqlParser.js\";\nimport { AlterByAddCheckTableConstraintContext } from \"./MySqlParser.js\";\nimport { AlterByAlterCheckTableConstraintContext } from \"./MySqlParser.js\";\nimport { AlterBySetAlgorithmContext } from \"./MySqlParser.js\";\nimport { AlterByChangeDefaultContext } from \"./MySqlParser.js\";\nimport { AlterByChangeColumnContext } from \"./MySqlParser.js\";\nimport { AlterByRenameColumnContext } from \"./MySqlParser.js\";\nimport { AlterByLockContext } from \"./MySqlParser.js\";\nimport { AlterByModifyColumnContext } from \"./MySqlParser.js\";\nimport { AlterByDropColumnContext } from \"./MySqlParser.js\";\nimport { AlterByDropConstraintCheckContext } from \"./MySqlParser.js\";\nimport { AlterByDropPrimaryKeyContext } from \"./MySqlParser.js\";\nimport { AlterByDropIndexContext } from \"./MySqlParser.js\";\nimport { AlterByRenameIndexContext } from \"./MySqlParser.js\";\nimport { AlterByAlterColumnDefaultContext } from \"./MySqlParser.js\";\nimport { AlterByAlterIndexVisibilityContext } from \"./MySqlParser.js\";\nimport { AlterByDropForeignKeyContext } from \"./MySqlParser.js\";\nimport { AlterByDisableKeysContext } from \"./MySqlParser.js\";\nimport { AlterByEnableKeysContext } from \"./MySqlParser.js\";\nimport { AlterByRenameContext } from \"./MySqlParser.js\";\nimport { AlterByOrderContext } from \"./MySqlParser.js\";\nimport { AlterByConvertCharsetContext } from \"./MySqlParser.js\";\nimport { AlterByDefaultCharsetContext } from \"./MySqlParser.js\";\nimport { AlterByDiscardTablespaceContext } from \"./MySqlParser.js\";\nimport { AlterByImportTablespaceContext } from \"./MySqlParser.js\";\nimport { AlterByForceContext } from \"./MySqlParser.js\";\nimport { AlterByValidateContext } from \"./MySqlParser.js\";\nimport { AlterByAddDefinitionsContext } from \"./MySqlParser.js\";\nimport { AlterPartitionContext } from \"./MySqlParser.js\";\nimport { AlterByAddPartitionContext } from \"./MySqlParser.js\";\nimport { AlterByDropPartitionContext } from \"./MySqlParser.js\";\nimport { AlterByDiscardPartitionContext } from \"./MySqlParser.js\";\nimport { AlterByImportPartitionContext } from \"./MySqlParser.js\";\nimport { AlterByTruncatePartitionContext } from \"./MySqlParser.js\";\nimport { AlterByCoalescePartitionContext } from \"./MySqlParser.js\";\nimport { AlterByReorganizePartitionContext } from \"./MySqlParser.js\";\nimport { AlterByExchangePartitionContext } from \"./MySqlParser.js\";\nimport { AlterByAnalyzePartitionContext } from \"./MySqlParser.js\";\nimport { AlterByCheckPartitionContext } from \"./MySqlParser.js\";\nimport { AlterByOptimizePartitionContext } from \"./MySqlParser.js\";\nimport { AlterByRebuildPartitionContext } from \"./MySqlParser.js\";\nimport { AlterByRepairPartitionContext } from \"./MySqlParser.js\";\nimport { AlterByRemovePartitioningContext } from \"./MySqlParser.js\";\nimport { AlterByUpgradePartitioningContext } from \"./MySqlParser.js\";\nimport { DropDatabaseContext } from \"./MySqlParser.js\";\nimport { DropEventContext } from \"./MySqlParser.js\";\nimport { DropIndexContext } from \"./MySqlParser.js\";\nimport { DropLogfileGroupContext } from \"./MySqlParser.js\";\nimport { DropProcedureContext } from \"./MySqlParser.js\";\nimport { DropFunctionContext } from \"./MySqlParser.js\";\nimport { DropServerContext } from \"./MySqlParser.js\";\nimport { DropTableContext } from \"./MySqlParser.js\";\nimport { DropTablespaceContext } from \"./MySqlParser.js\";\nimport { DropTriggerContext } from \"./MySqlParser.js\";\nimport { DropViewContext } from \"./MySqlParser.js\";\nimport { DropRoleContext } from \"./MySqlParser.js\";\nimport { SetRoleContext } from \"./MySqlParser.js\";\nimport { RenameTableContext } from \"./MySqlParser.js\";\nimport { RenameTableClauseContext } from \"./MySqlParser.js\";\nimport { TruncateTableContext } from \"./MySqlParser.js\";\nimport { CallStatementContext } from \"./MySqlParser.js\";\nimport { DeleteStatementContext } from \"./MySqlParser.js\";\nimport { DoStatementContext } from \"./MySqlParser.js\";\nimport { HandlerStatementContext } from \"./MySqlParser.js\";\nimport { InsertStatementContext } from \"./MySqlParser.js\";\nimport { LoadDataStatementContext } from \"./MySqlParser.js\";\nimport { LoadXmlStatementContext } from \"./MySqlParser.js\";\nimport { ReplaceStatementContext } from \"./MySqlParser.js\";\nimport { SimpleSelectContext } from \"./MySqlParser.js\";\nimport { ParenthesisSelectContext } from \"./MySqlParser.js\";\nimport { UnionSelectContext } from \"./MySqlParser.js\";\nimport { UnionParenthesisSelectContext } from \"./MySqlParser.js\";\nimport { WithLateralStatementContext } from \"./MySqlParser.js\";\nimport { UpdateStatementContext } from \"./MySqlParser.js\";\nimport { ValuesStatementContext } from \"./MySqlParser.js\";\nimport { InsertStatementValueContext } from \"./MySqlParser.js\";\nimport { UpdatedElementContext } from \"./MySqlParser.js\";\nimport { AssignmentFieldContext } from \"./MySqlParser.js\";\nimport { LockClauseContext } from \"./MySqlParser.js\";\nimport { SingleDeleteStatementContext } from \"./MySqlParser.js\";\nimport { MultipleDeleteStatementContext } from \"./MySqlParser.js\";\nimport { HandlerOpenStatementContext } from \"./MySqlParser.js\";\nimport { HandlerReadIndexStatementContext } from \"./MySqlParser.js\";\nimport { HandlerReadStatementContext } from \"./MySqlParser.js\";\nimport { HandlerCloseStatementContext } from \"./MySqlParser.js\";\nimport { SingleUpdateStatementContext } from \"./MySqlParser.js\";\nimport { MultipleUpdateStatementContext } from \"./MySqlParser.js\";\nimport { OrderByClauseContext } from \"./MySqlParser.js\";\nimport { OrderByExpressionContext } from \"./MySqlParser.js\";\nimport { TableSourcesContext } from \"./MySqlParser.js\";\nimport { TableSourceBaseContext } from \"./MySqlParser.js\";\nimport { TableSourceNestedContext } from \"./MySqlParser.js\";\nimport { TableJsonContext } from \"./MySqlParser.js\";\nimport { AtomTableItemContext } from \"./MySqlParser.js\";\nimport { SubqueryTableItemContext } from \"./MySqlParser.js\";\nimport { TableSourcesItemContext } from \"./MySqlParser.js\";\nimport { IndexHintContext } from \"./MySqlParser.js\";\nimport { IndexHintTypeContext } from \"./MySqlParser.js\";\nimport { InnerJoinContext } from \"./MySqlParser.js\";\nimport { StraightJoinContext } from \"./MySqlParser.js\";\nimport { OuterJoinContext } from \"./MySqlParser.js\";\nimport { NaturalJoinContext } from \"./MySqlParser.js\";\nimport { JoinSpecContext } from \"./MySqlParser.js\";\nimport { QueryExpressionContext } from \"./MySqlParser.js\";\nimport { QueryExpressionNointoContext } from \"./MySqlParser.js\";\nimport { QuerySpecificationContext } from \"./MySqlParser.js\";\nimport { QuerySpecificationNointoContext } from \"./MySqlParser.js\";\nimport { UnionParenthesisContext } from \"./MySqlParser.js\";\nimport { UnionStatementContext } from \"./MySqlParser.js\";\nimport { LateralStatementContext } from \"./MySqlParser.js\";\nimport { JsonTableContext } from \"./MySqlParser.js\";\nimport { JsonColumnListContext } from \"./MySqlParser.js\";\nimport { JsonColumnContext } from \"./MySqlParser.js\";\nimport { JsonOnEmptyContext } from \"./MySqlParser.js\";\nimport { JsonOnErrorContext } from \"./MySqlParser.js\";\nimport { SelectSpecContext } from \"./MySqlParser.js\";\nimport { SelectElementsContext } from \"./MySqlParser.js\";\nimport { SelectStarElementContext } from \"./MySqlParser.js\";\nimport { SelectColumnElementContext } from \"./MySqlParser.js\";\nimport { SelectFunctionElementContext } from \"./MySqlParser.js\";\nimport { SelectExpressionElementContext } from \"./MySqlParser.js\";\nimport { SelectIntoVariablesContext } from \"./MySqlParser.js\";\nimport { SelectIntoDumpFileContext } from \"./MySqlParser.js\";\nimport { SelectIntoTextFileContext } from \"./MySqlParser.js\";\nimport { SelectFieldsIntoContext } from \"./MySqlParser.js\";\nimport { SelectLinesIntoContext } from \"./MySqlParser.js\";\nimport { FromClauseContext } from \"./MySqlParser.js\";\nimport { GroupByClauseContext } from \"./MySqlParser.js\";\nimport { HavingClauseContext } from \"./MySqlParser.js\";\nimport { WindowClauseContext } from \"./MySqlParser.js\";\nimport { GroupByItemContext } from \"./MySqlParser.js\";\nimport { LimitClauseContext } from \"./MySqlParser.js\";\nimport { LimitClauseAtomContext } from \"./MySqlParser.js\";\nimport { StartTransactionContext } from \"./MySqlParser.js\";\nimport { BeginWorkContext } from \"./MySqlParser.js\";\nimport { CommitWorkContext } from \"./MySqlParser.js\";\nimport { RollbackWorkContext } from \"./MySqlParser.js\";\nimport { SavepointStatementContext } from \"./MySqlParser.js\";\nimport { RollbackStatementContext } from \"./MySqlParser.js\";\nimport { ReleaseStatementContext } from \"./MySqlParser.js\";\nimport { LockTablesContext } from \"./MySqlParser.js\";\nimport { UnlockTablesContext } from \"./MySqlParser.js\";\nimport { SetAutocommitStatementContext } from \"./MySqlParser.js\";\nimport { SetTransactionStatementContext } from \"./MySqlParser.js\";\nimport { TransactionModeContext } from \"./MySqlParser.js\";\nimport { LockTableElementContext } from \"./MySqlParser.js\";\nimport { LockActionContext } from \"./MySqlParser.js\";\nimport { TransactionOptionContext } from \"./MySqlParser.js\";\nimport { TransactionLevelContext } from \"./MySqlParser.js\";\nimport { ChangeMasterContext } from \"./MySqlParser.js\";\nimport { ChangeReplicationFilterContext } from \"./MySqlParser.js\";\nimport { PurgeBinaryLogsContext } from \"./MySqlParser.js\";\nimport { ResetMasterContext } from \"./MySqlParser.js\";\nimport { ResetSlaveContext } from \"./MySqlParser.js\";\nimport { StartSlaveContext } from \"./MySqlParser.js\";\nimport { StopSlaveContext } from \"./MySqlParser.js\";\nimport { StartGroupReplicationContext } from \"./MySqlParser.js\";\nimport { StopGroupReplicationContext } from \"./MySqlParser.js\";\nimport { MasterStringOptionContext } from \"./MySqlParser.js\";\nimport { MasterDecimalOptionContext } from \"./MySqlParser.js\";\nimport { MasterBoolOptionContext } from \"./MySqlParser.js\";\nimport { MasterRealOptionContext } from \"./MySqlParser.js\";\nimport { MasterUidListOptionContext } from \"./MySqlParser.js\";\nimport { StringMasterOptionContext } from \"./MySqlParser.js\";\nimport { DecimalMasterOptionContext } from \"./MySqlParser.js\";\nimport { BoolMasterOptionContext } from \"./MySqlParser.js\";\nimport { ChannelOptionContext } from \"./MySqlParser.js\";\nimport { DoDbReplicationContext } from \"./MySqlParser.js\";\nimport { IgnoreDbReplicationContext } from \"./MySqlParser.js\";\nimport { DoTableReplicationContext } from \"./MySqlParser.js\";\nimport { IgnoreTableReplicationContext } from \"./MySqlParser.js\";\nimport { WildDoTableReplicationContext } from \"./MySqlParser.js\";\nimport { WildIgnoreTableReplicationContext } from \"./MySqlParser.js\";\nimport { RewriteDbReplicationContext } from \"./MySqlParser.js\";\nimport { TablePairContext } from \"./MySqlParser.js\";\nimport { ThreadTypeContext } from \"./MySqlParser.js\";\nimport { GtidsUntilOptionContext } from \"./MySqlParser.js\";\nimport { MasterLogUntilOptionContext } from \"./MySqlParser.js\";\nimport { RelayLogUntilOptionContext } from \"./MySqlParser.js\";\nimport { SqlGapsUntilOptionContext } from \"./MySqlParser.js\";\nimport { UserConnectionOptionContext } from \"./MySqlParser.js\";\nimport { PasswordConnectionOptionContext } from \"./MySqlParser.js\";\nimport { DefaultAuthConnectionOptionContext } from \"./MySqlParser.js\";\nimport { PluginDirConnectionOptionContext } from \"./MySqlParser.js\";\nimport { GtuidSetContext } from \"./MySqlParser.js\";\nimport { XaStartTransactionContext } from \"./MySqlParser.js\";\nimport { XaEndTransactionContext } from \"./MySqlParser.js\";\nimport { XaPrepareStatementContext } from \"./MySqlParser.js\";\nimport { XaCommitWorkContext } from \"./MySqlParser.js\";\nimport { XaRollbackWorkContext } from \"./MySqlParser.js\";\nimport { XaRecoverWorkContext } from \"./MySqlParser.js\";\nimport { PrepareStatementContext } from \"./MySqlParser.js\";\nimport { ExecuteStatementContext } from \"./MySqlParser.js\";\nimport { DeallocatePrepareContext } from \"./MySqlParser.js\";\nimport { RoutineBodyContext } from \"./MySqlParser.js\";\nimport { BlockStatementContext } from \"./MySqlParser.js\";\nimport { CaseStatementContext } from \"./MySqlParser.js\";\nimport { IfStatementContext } from \"./MySqlParser.js\";\nimport { IterateStatementContext } from \"./MySqlParser.js\";\nimport { LeaveStatementContext } from \"./MySqlParser.js\";\nimport { LoopStatementContext } from \"./MySqlParser.js\";\nimport { RepeatStatementContext } from \"./MySqlParser.js\";\nimport { ReturnStatementContext } from \"./MySqlParser.js\";\nimport { WhileStatementContext } from \"./MySqlParser.js\";\nimport { CloseCursorContext } from \"./MySqlParser.js\";\nimport { FetchCursorContext } from \"./MySqlParser.js\";\nimport { OpenCursorContext } from \"./MySqlParser.js\";\nimport { DeclareVariableContext } from \"./MySqlParser.js\";\nimport { DeclareConditionContext } from \"./MySqlParser.js\";\nimport { DeclareCursorContext } from \"./MySqlParser.js\";\nimport { DeclareHandlerContext } from \"./MySqlParser.js\";\nimport { HandlerConditionCodeContext } from \"./MySqlParser.js\";\nimport { HandlerConditionStateContext } from \"./MySqlParser.js\";\nimport { HandlerConditionNameContext } from \"./MySqlParser.js\";\nimport { HandlerConditionWarningContext } from \"./MySqlParser.js\";\nimport { HandlerConditionNotfoundContext } from \"./MySqlParser.js\";\nimport { HandlerConditionExceptionContext } from \"./MySqlParser.js\";\nimport { ProcedureSqlStatementContext } from \"./MySqlParser.js\";\nimport { CaseAlternativeContext } from \"./MySqlParser.js\";\nimport { ElifAlternativeContext } from \"./MySqlParser.js\";\nimport { AlterUserMysqlV56Context } from \"./MySqlParser.js\";\nimport { AlterUserMysqlV80Context } from \"./MySqlParser.js\";\nimport { CreateUserMysqlV56Context } from \"./MySqlParser.js\";\nimport { CreateUserMysqlV80Context } from \"./MySqlParser.js\";\nimport { DropUserContext } from \"./MySqlParser.js\";\nimport { GrantStatementContext } from \"./MySqlParser.js\";\nimport { RoleOptionContext } from \"./MySqlParser.js\";\nimport { GrantProxyContext } from \"./MySqlParser.js\";\nimport { RenameUserContext } from \"./MySqlParser.js\";\nimport { DetailRevokeContext } from \"./MySqlParser.js\";\nimport { ShortRevokeContext } from \"./MySqlParser.js\";\nimport { RoleRevokeContext } from \"./MySqlParser.js\";\nimport { RevokeProxyContext } from \"./MySqlParser.js\";\nimport { SetPasswordStatementContext } from \"./MySqlParser.js\";\nimport { UserSpecificationContext } from \"./MySqlParser.js\";\nimport { HashAuthOptionContext } from \"./MySqlParser.js\";\nimport { RandomAuthOptionContext } from \"./MySqlParser.js\";\nimport { StringAuthOptionContext } from \"./MySqlParser.js\";\nimport { ModuleAuthOptionContext } from \"./MySqlParser.js\";\nimport { SimpleAuthOptionContext } from \"./MySqlParser.js\";\nimport { AuthOptionClauseContext } from \"./MySqlParser.js\";\nimport { ModuleContext } from \"./MySqlParser.js\";\nimport { PasswordModuleOptionContext } from \"./MySqlParser.js\";\nimport { TlsOptionContext } from \"./MySqlParser.js\";\nimport { UserResourceOptionContext } from \"./MySqlParser.js\";\nimport { UserPasswordOptionContext } from \"./MySqlParser.js\";\nimport { UserLockOptionContext } from \"./MySqlParser.js\";\nimport { PrivelegeClauseContext } from \"./MySqlParser.js\";\nimport { PrivilegeContext } from \"./MySqlParser.js\";\nimport { CurrentSchemaPriviLevelContext } from \"./MySqlParser.js\";\nimport { GlobalPrivLevelContext } from \"./MySqlParser.js\";\nimport { DefiniteSchemaPrivLevelContext } from \"./MySqlParser.js\";\nimport { DefiniteFullTablePrivLevelContext } from \"./MySqlParser.js\";\nimport { DefiniteFullTablePrivLevel2Context } from \"./MySqlParser.js\";\nimport { DefiniteTablePrivLevelContext } from \"./MySqlParser.js\";\nimport { RenameUserClauseContext } from \"./MySqlParser.js\";\nimport { AnalyzeTableContext } from \"./MySqlParser.js\";\nimport { CheckTableContext } from \"./MySqlParser.js\";\nimport { ChecksumTableContext } from \"./MySqlParser.js\";\nimport { OptimizeTableContext } from \"./MySqlParser.js\";\nimport { RepairTableContext } from \"./MySqlParser.js\";\nimport { CheckTableOptionContext } from \"./MySqlParser.js\";\nimport { CreateUdfunctionContext } from \"./MySqlParser.js\";\nimport { InstallPluginContext } from \"./MySqlParser.js\";\nimport { UninstallPluginContext } from \"./MySqlParser.js\";\nimport { SetVariableContext } from \"./MySqlParser.js\";\nimport { SetCharsetContext } from \"./MySqlParser.js\";\nimport { SetNamesContext } from \"./MySqlParser.js\";\nimport { SetPasswordContext } from \"./MySqlParser.js\";\nimport { SetTransactionContext } from \"./MySqlParser.js\";\nimport { SetAutocommitContext } from \"./MySqlParser.js\";\nimport { SetNewValueInsideTriggerContext } from \"./MySqlParser.js\";\nimport { ShowMasterLogsContext } from \"./MySqlParser.js\";\nimport { ShowLogEventsContext } from \"./MySqlParser.js\";\nimport { ShowObjectFilterContext } from \"./MySqlParser.js\";\nimport { ShowColumnsContext } from \"./MySqlParser.js\";\nimport { ShowCreateDbContext } from \"./MySqlParser.js\";\nimport { ShowCreateFullIdObjectContext } from \"./MySqlParser.js\";\nimport { ShowCreateUserContext } from \"./MySqlParser.js\";\nimport { ShowEngineContext } from \"./MySqlParser.js\";\nimport { ShowGlobalInfoContext } from \"./MySqlParser.js\";\nimport { ShowErrorsContext } from \"./MySqlParser.js\";\nimport { ShowCountErrorsContext } from \"./MySqlParser.js\";\nimport { ShowSchemaFilterContext } from \"./MySqlParser.js\";\nimport { ShowRoutineContext } from \"./MySqlParser.js\";\nimport { ShowGrantsContext } from \"./MySqlParser.js\";\nimport { ShowIndexesContext } from \"./MySqlParser.js\";\nimport { ShowOpenTablesContext } from \"./MySqlParser.js\";\nimport { ShowProfileContext } from \"./MySqlParser.js\";\nimport { ShowSlaveStatusContext } from \"./MySqlParser.js\";\nimport { VariableClauseContext } from \"./MySqlParser.js\";\nimport { ShowCommonEntityContext } from \"./MySqlParser.js\";\nimport { ShowFilterContext } from \"./MySqlParser.js\";\nimport { ShowGlobalInfoClauseContext } from \"./MySqlParser.js\";\nimport { ShowSchemaEntityContext } from \"./MySqlParser.js\";\nimport { ShowProfileTypeContext } from \"./MySqlParser.js\";\nimport { BinlogStatementContext } from \"./MySqlParser.js\";\nimport { CacheIndexStatementContext } from \"./MySqlParser.js\";\nimport { FlushStatementContext } from \"./MySqlParser.js\";\nimport { KillStatementContext } from \"./MySqlParser.js\";\nimport { LoadIndexIntoCacheContext } from \"./MySqlParser.js\";\nimport { ResetStatementContext } from \"./MySqlParser.js\";\nimport { ShutdownStatementContext } from \"./MySqlParser.js\";\nimport { TableIndexesContext } from \"./MySqlParser.js\";\nimport { SimpleFlushOptionContext } from \"./MySqlParser.js\";\nimport { ChannelFlushOptionContext } from \"./MySqlParser.js\";\nimport { TableFlushOptionContext } from \"./MySqlParser.js\";\nimport { FlushTableOptionContext } from \"./MySqlParser.js\";\nimport { LoadedTableIndexesContext } from \"./MySqlParser.js\";\nimport { SimpleDescribeStatementContext } from \"./MySqlParser.js\";\nimport { FullDescribeStatementContext } from \"./MySqlParser.js\";\nimport { HelpStatementContext } from \"./MySqlParser.js\";\nimport { UseStatementContext } from \"./MySqlParser.js\";\nimport { SignalStatementContext } from \"./MySqlParser.js\";\nimport { ResignalStatementContext } from \"./MySqlParser.js\";\nimport { SignalConditionInformationContext } from \"./MySqlParser.js\";\nimport { WithStatementContext } from \"./MySqlParser.js\";\nimport { TableStatementContext } from \"./MySqlParser.js\";\nimport { DiagnosticsStatementContext } from \"./MySqlParser.js\";\nimport { DiagnosticsConditionInformationNameContext } from \"./MySqlParser.js\";\nimport { DescribeStatementsContext } from \"./MySqlParser.js\";\nimport { DescribeConnectionContext } from \"./MySqlParser.js\";\nimport { FullIdContext } from \"./MySqlParser.js\";\nimport { TableNameContext } from \"./MySqlParser.js\";\nimport { RoleNameContext } from \"./MySqlParser.js\";\nimport { FullColumnNameContext } from \"./MySqlParser.js\";\nimport { IndexColumnNameContext } from \"./MySqlParser.js\";\nimport { SimpleUserNameContext } from \"./MySqlParser.js\";\nimport { HostNameContext } from \"./MySqlParser.js\";\nimport { UserNameContext } from \"./MySqlParser.js\";\nimport { MysqlVariableContext } from \"./MySqlParser.js\";\nimport { CharsetNameContext } from \"./MySqlParser.js\";\nimport { CollationNameContext } from \"./MySqlParser.js\";\nimport { EngineNameContext } from \"./MySqlParser.js\";\nimport { EngineNameBaseContext } from \"./MySqlParser.js\";\nimport { UuidSetContext } from \"./MySqlParser.js\";\nimport { XidContext } from \"./MySqlParser.js\";\nimport { XuidStringIdContext } from \"./MySqlParser.js\";\nimport { AuthPluginContext } from \"./MySqlParser.js\";\nimport { UidContext } from \"./MySqlParser.js\";\nimport { SimpleIdContext } from \"./MySqlParser.js\";\nimport { DottedIdContext } from \"./MySqlParser.js\";\nimport { DecimalLiteralContext } from \"./MySqlParser.js\";\nimport { FileSizeLiteralContext } from \"./MySqlParser.js\";\nimport { StringLiteralContext } from \"./MySqlParser.js\";\nimport { BooleanLiteralContext } from \"./MySqlParser.js\";\nimport { HexadecimalLiteralContext } from \"./MySqlParser.js\";\nimport { NullNotnullContext } from \"./MySqlParser.js\";\nimport { ConstantContext } from \"./MySqlParser.js\";\nimport { StringDataTypeContext } from \"./MySqlParser.js\";\nimport { NationalVaryingStringDataTypeContext } from \"./MySqlParser.js\";\nimport { NationalStringDataTypeContext } from \"./MySqlParser.js\";\nimport { DimensionDataTypeContext } from \"./MySqlParser.js\";\nimport { SimpleDataTypeContext } from \"./MySqlParser.js\";\nimport { CollectionDataTypeContext } from \"./MySqlParser.js\";\nimport { SpatialDataTypeContext } from \"./MySqlParser.js\";\nimport { LongVarcharDataTypeContext } from \"./MySqlParser.js\";\nimport { LongVarbinaryDataTypeContext } from \"./MySqlParser.js\";\nimport { CollectionOptionsContext } from \"./MySqlParser.js\";\nimport { ConvertedDataTypeContext } from \"./MySqlParser.js\";\nimport { LengthOneDimensionContext } from \"./MySqlParser.js\";\nimport { LengthTwoDimensionContext } from \"./MySqlParser.js\";\nimport { LengthTwoOptionalDimensionContext } from \"./MySqlParser.js\";\nimport { UidListContext } from \"./MySqlParser.js\";\nimport { FullColumnNameListContext } from \"./MySqlParser.js\";\nimport { TablesContext } from \"./MySqlParser.js\";\nimport { IndexColumnNamesContext } from \"./MySqlParser.js\";\nimport { ExpressionsContext } from \"./MySqlParser.js\";\nimport { ExpressionsWithDefaultsContext } from \"./MySqlParser.js\";\nimport { ConstantsContext } from \"./MySqlParser.js\";\nimport { SimpleStringsContext } from \"./MySqlParser.js\";\nimport { UserVariablesContext } from \"./MySqlParser.js\";\nimport { DefaultValueContext } from \"./MySqlParser.js\";\nimport { CurrentTimestampContext } from \"./MySqlParser.js\";\nimport { ExpressionOrDefaultContext } from \"./MySqlParser.js\";\nimport { IfExistsContext } from \"./MySqlParser.js\";\nimport { IfNotExistsContext } from \"./MySqlParser.js\";\nimport { OrReplaceContext } from \"./MySqlParser.js\";\nimport { WaitNowaitClauseContext } from \"./MySqlParser.js\";\nimport { SpecificFunctionCallContext } from \"./MySqlParser.js\";\nimport { AggregateFunctionCallContext } from \"./MySqlParser.js\";\nimport { NonAggregateFunctionCallContext } from \"./MySqlParser.js\";\nimport { ScalarFunctionCallContext } from \"./MySqlParser.js\";\nimport { UdfFunctionCallContext } from \"./MySqlParser.js\";\nimport { PasswordFunctionCallContext } from \"./MySqlParser.js\";\nimport { SimpleFunctionCallContext } from \"./MySqlParser.js\";\nimport { CurrentUserContext } from \"./MySqlParser.js\";\nimport { DataTypeFunctionCallContext } from \"./MySqlParser.js\";\nimport { ValuesFunctionCallContext } from \"./MySqlParser.js\";\nimport { CaseExpressionFunctionCallContext } from \"./MySqlParser.js\";\nimport { CaseFunctionCallContext } from \"./MySqlParser.js\";\nimport { CharFunctionCallContext } from \"./MySqlParser.js\";\nimport { PositionFunctionCallContext } from \"./MySqlParser.js\";\nimport { SubstrFunctionCallContext } from \"./MySqlParser.js\";\nimport { TrimFunctionCallContext } from \"./MySqlParser.js\";\nimport { WeightFunctionCallContext } from \"./MySqlParser.js\";\nimport { ExtractFunctionCallContext } from \"./MySqlParser.js\";\nimport { GetFormatFunctionCallContext } from \"./MySqlParser.js\";\nimport { JsonValueFunctionCallContext } from \"./MySqlParser.js\";\nimport { CaseFuncAlternativeContext } from \"./MySqlParser.js\";\nimport { LevelWeightListContext } from \"./MySqlParser.js\";\nimport { LevelWeightRangeContext } from \"./MySqlParser.js\";\nimport { LevelInWeightListElementContext } from \"./MySqlParser.js\";\nimport { AggregateWindowedFunctionContext } from \"./MySqlParser.js\";\nimport { NonAggregateWindowedFunctionContext } from \"./MySqlParser.js\";\nimport { OverClauseContext } from \"./MySqlParser.js\";\nimport { WindowSpecContext } from \"./MySqlParser.js\";\nimport { WindowNameContext } from \"./MySqlParser.js\";\nimport { FrameClauseContext } from \"./MySqlParser.js\";\nimport { FrameUnitsContext } from \"./MySqlParser.js\";\nimport { FrameExtentContext } from \"./MySqlParser.js\";\nimport { FrameBetweenContext } from \"./MySqlParser.js\";\nimport { FrameRangeContext } from \"./MySqlParser.js\";\nimport { PartitionClauseContext } from \"./MySqlParser.js\";\nimport { ScalarFunctionNameContext } from \"./MySqlParser.js\";\nimport { PasswordFunctionClauseContext } from \"./MySqlParser.js\";\nimport { FunctionArgsContext } from \"./MySqlParser.js\";\nimport { FunctionArgContext } from \"./MySqlParser.js\";\nimport { IsExpressionContext } from \"./MySqlParser.js\";\nimport { NotExpressionContext } from \"./MySqlParser.js\";\nimport { LogicalExpressionContext } from \"./MySqlParser.js\";\nimport { PredicateExpressionContext } from \"./MySqlParser.js\";\nimport { SoundsLikePredicateContext } from \"./MySqlParser.js\";\nimport { ExpressionAtomPredicateContext } from \"./MySqlParser.js\";\nimport { SubqueryComparisonPredicateContext } from \"./MySqlParser.js\";\nimport { JsonMemberOfPredicateContext } from \"./MySqlParser.js\";\nimport { BinaryComparisonPredicateContext } from \"./MySqlParser.js\";\nimport { InPredicateContext } from \"./MySqlParser.js\";\nimport { BetweenPredicateContext } from \"./MySqlParser.js\";\nimport { IsNullPredicateContext } from \"./MySqlParser.js\";\nimport { LikePredicateContext } from \"./MySqlParser.js\";\nimport { RegexpPredicateContext } from \"./MySqlParser.js\";\nimport { UnaryExpressionAtomContext } from \"./MySqlParser.js\";\nimport { CollateExpressionAtomContext } from \"./MySqlParser.js\";\nimport { VariableAssignExpressionAtomContext } from \"./MySqlParser.js\";\nimport { MysqlVariableExpressionAtomContext } from \"./MySqlParser.js\";\nimport { NestedExpressionAtomContext } from \"./MySqlParser.js\";\nimport { NestedRowExpressionAtomContext } from \"./MySqlParser.js\";\nimport { MathExpressionAtomContext } from \"./MySqlParser.js\";\nimport { ExistsExpressionAtomContext } from \"./MySqlParser.js\";\nimport { IntervalExpressionAtomContext } from \"./MySqlParser.js\";\nimport { JsonExpressionAtomContext } from \"./MySqlParser.js\";\nimport { SubqueryExpressionAtomContext } from \"./MySqlParser.js\";\nimport { ConstantExpressionAtomContext } from \"./MySqlParser.js\";\nimport { FunctionCallExpressionAtomContext } from \"./MySqlParser.js\";\nimport { BinaryExpressionAtomContext } from \"./MySqlParser.js\";\nimport { FullColumnNameExpressionAtomContext } from \"./MySqlParser.js\";\nimport { BitExpressionAtomContext } from \"./MySqlParser.js\";\nimport { UnaryOperatorContext } from \"./MySqlParser.js\";\nimport { ComparisonOperatorContext } from \"./MySqlParser.js\";\nimport { LogicalOperatorContext } from \"./MySqlParser.js\";\nimport { BitOperatorContext } from \"./MySqlParser.js\";\nimport { MultOperatorContext } from \"./MySqlParser.js\";\nimport { AddOperatorContext } from \"./MySqlParser.js\";\nimport { JsonOperatorContext } from \"./MySqlParser.js\";\nimport { CharsetNameBaseContext } from \"./MySqlParser.js\";\nimport { TransactionLevelBaseContext } from \"./MySqlParser.js\";\nimport { PrivilegesBaseContext } from \"./MySqlParser.js\";\nimport { IntervalTypeBaseContext } from \"./MySqlParser.js\";\nimport { DataTypeBaseContext } from \"./MySqlParser.js\";\nimport { KeywordsCanBeIdContext } from \"./MySqlParser.js\";\nimport { FunctionNameBaseContext } from \"./MySqlParser.js\";\n\n\n/**\n * This interface defines a complete generic visitor for a parse tree produced\n * by `MySqlParser`.\n *\n * @param <Result> The return type of the visit operation. Use `void` for\n * operations with no return type.\n */\nexport class MySqlParserVisitor<Result> extends AbstractParseTreeVisitor<Result> {\n    /**\n     * Visit a parse tree produced by `MySqlParser.root`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitRoot?: (ctx: RootContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.sqlStatements`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitSqlStatements?: (ctx: SqlStatementsContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.sqlStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitSqlStatement?: (ctx: SqlStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.emptyStatement_`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitEmptyStatement_?: (ctx: EmptyStatement_Context) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.ddlStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitDdlStatement?: (ctx: DdlStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.dmlStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitDmlStatement?: (ctx: DmlStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.transactionStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitTransactionStatement?: (ctx: TransactionStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.replicationStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitReplicationStatement?: (ctx: ReplicationStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.preparedStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitPreparedStatement?: (ctx: PreparedStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.compoundStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitCompoundStatement?: (ctx: CompoundStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.administrationStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAdministrationStatement?: (ctx: AdministrationStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.utilityStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitUtilityStatement?: (ctx: UtilityStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.createDatabase`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitCreateDatabase?: (ctx: CreateDatabaseContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.createEvent`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitCreateEvent?: (ctx: CreateEventContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.createIndex`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitCreateIndex?: (ctx: CreateIndexContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.createLogfileGroup`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitCreateLogfileGroup?: (ctx: CreateLogfileGroupContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.createProcedure`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitCreateProcedure?: (ctx: CreateProcedureContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.createFunction`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitCreateFunction?: (ctx: CreateFunctionContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.createRole`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitCreateRole?: (ctx: CreateRoleContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.createServer`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitCreateServer?: (ctx: CreateServerContext) => Result;\n    /**\n     * Visit a parse tree produced by the `copyCreateTable`\n     * labeled alternative in `MySqlParser.createTable`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitCopyCreateTable?: (ctx: CopyCreateTableContext) => Result;\n    /**\n     * Visit a parse tree produced by the `queryCreateTable`\n     * labeled alternative in `MySqlParser.createTable`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitQueryCreateTable?: (ctx: QueryCreateTableContext) => Result;\n    /**\n     * Visit a parse tree produced by the `columnCreateTable`\n     * labeled alternative in `MySqlParser.createTable`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitColumnCreateTable?: (ctx: ColumnCreateTableContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.createTablespaceInnodb`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitCreateTablespaceInnodb?: (ctx: CreateTablespaceInnodbContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.createTablespaceNdb`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitCreateTablespaceNdb?: (ctx: CreateTablespaceNdbContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.createTrigger`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitCreateTrigger?: (ctx: CreateTriggerContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.withClause`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitWithClause?: (ctx: WithClauseContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.commonTableExpressions`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitCommonTableExpressions?: (ctx: CommonTableExpressionsContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.cteName`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitCteName?: (ctx: CteNameContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.cteColumnName`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitCteColumnName?: (ctx: CteColumnNameContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.createView`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitCreateView?: (ctx: CreateViewContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.createDatabaseOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitCreateDatabaseOption?: (ctx: CreateDatabaseOptionContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.charSet`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitCharSet?: (ctx: CharSetContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.currentUserExpression`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitCurrentUserExpression?: (ctx: CurrentUserExpressionContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.ownerStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitOwnerStatement?: (ctx: OwnerStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by the `preciseSchedule`\n     * labeled alternative in `MySqlParser.scheduleExpression`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitPreciseSchedule?: (ctx: PreciseScheduleContext) => Result;\n    /**\n     * Visit a parse tree produced by the `intervalSchedule`\n     * labeled alternative in `MySqlParser.scheduleExpression`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitIntervalSchedule?: (ctx: IntervalScheduleContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.timestampValue`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitTimestampValue?: (ctx: TimestampValueContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.intervalExpr`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitIntervalExpr?: (ctx: IntervalExprContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.intervalType`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitIntervalType?: (ctx: IntervalTypeContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.enableType`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitEnableType?: (ctx: EnableTypeContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.indexType`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitIndexType?: (ctx: IndexTypeContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.indexOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitIndexOption?: (ctx: IndexOptionContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.procedureParameter`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitProcedureParameter?: (ctx: ProcedureParameterContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.functionParameter`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitFunctionParameter?: (ctx: FunctionParameterContext) => Result;\n    /**\n     * Visit a parse tree produced by the `routineComment`\n     * labeled alternative in `MySqlParser.routineOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitRoutineComment?: (ctx: RoutineCommentContext) => Result;\n    /**\n     * Visit a parse tree produced by the `routineLanguage`\n     * labeled alternative in `MySqlParser.routineOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitRoutineLanguage?: (ctx: RoutineLanguageContext) => Result;\n    /**\n     * Visit a parse tree produced by the `routineBehavior`\n     * labeled alternative in `MySqlParser.routineOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitRoutineBehavior?: (ctx: RoutineBehaviorContext) => Result;\n    /**\n     * Visit a parse tree produced by the `routineData`\n     * labeled alternative in `MySqlParser.routineOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitRoutineData?: (ctx: RoutineDataContext) => Result;\n    /**\n     * Visit a parse tree produced by the `routineSecurity`\n     * labeled alternative in `MySqlParser.routineOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitRoutineSecurity?: (ctx: RoutineSecurityContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.serverOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitServerOption?: (ctx: ServerOptionContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.createDefinitions`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitCreateDefinitions?: (ctx: CreateDefinitionsContext) => Result;\n    /**\n     * Visit a parse tree produced by the `columnDeclaration`\n     * labeled alternative in `MySqlParser.createDefinition`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitColumnDeclaration?: (ctx: ColumnDeclarationContext) => Result;\n    /**\n     * Visit a parse tree produced by the `constraintDeclaration`\n     * labeled alternative in `MySqlParser.createDefinition`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitConstraintDeclaration?: (ctx: ConstraintDeclarationContext) => Result;\n    /**\n     * Visit a parse tree produced by the `indexDeclaration`\n     * labeled alternative in `MySqlParser.createDefinition`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitIndexDeclaration?: (ctx: IndexDeclarationContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.columnDefinition`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitColumnDefinition?: (ctx: ColumnDefinitionContext) => Result;\n    /**\n     * Visit a parse tree produced by the `nullColumnConstraint`\n     * labeled alternative in `MySqlParser.columnConstraint`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitNullColumnConstraint?: (ctx: NullColumnConstraintContext) => Result;\n    /**\n     * Visit a parse tree produced by the `defaultColumnConstraint`\n     * labeled alternative in `MySqlParser.columnConstraint`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitDefaultColumnConstraint?: (ctx: DefaultColumnConstraintContext) => Result;\n    /**\n     * Visit a parse tree produced by the `visibilityColumnConstraint`\n     * labeled alternative in `MySqlParser.columnConstraint`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitVisibilityColumnConstraint?: (ctx: VisibilityColumnConstraintContext) => Result;\n    /**\n     * Visit a parse tree produced by the `invisibilityColumnConstraint`\n     * labeled alternative in `MySqlParser.columnConstraint`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitInvisibilityColumnConstraint?: (ctx: InvisibilityColumnConstraintContext) => Result;\n    /**\n     * Visit a parse tree produced by the `autoIncrementColumnConstraint`\n     * labeled alternative in `MySqlParser.columnConstraint`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAutoIncrementColumnConstraint?: (ctx: AutoIncrementColumnConstraintContext) => Result;\n    /**\n     * Visit a parse tree produced by the `primaryKeyColumnConstraint`\n     * labeled alternative in `MySqlParser.columnConstraint`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitPrimaryKeyColumnConstraint?: (ctx: PrimaryKeyColumnConstraintContext) => Result;\n    /**\n     * Visit a parse tree produced by the `uniqueKeyColumnConstraint`\n     * labeled alternative in `MySqlParser.columnConstraint`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitUniqueKeyColumnConstraint?: (ctx: UniqueKeyColumnConstraintContext) => Result;\n    /**\n     * Visit a parse tree produced by the `commentColumnConstraint`\n     * labeled alternative in `MySqlParser.columnConstraint`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitCommentColumnConstraint?: (ctx: CommentColumnConstraintContext) => Result;\n    /**\n     * Visit a parse tree produced by the `formatColumnConstraint`\n     * labeled alternative in `MySqlParser.columnConstraint`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitFormatColumnConstraint?: (ctx: FormatColumnConstraintContext) => Result;\n    /**\n     * Visit a parse tree produced by the `storageColumnConstraint`\n     * labeled alternative in `MySqlParser.columnConstraint`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitStorageColumnConstraint?: (ctx: StorageColumnConstraintContext) => Result;\n    /**\n     * Visit a parse tree produced by the `referenceColumnConstraint`\n     * labeled alternative in `MySqlParser.columnConstraint`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitReferenceColumnConstraint?: (ctx: ReferenceColumnConstraintContext) => Result;\n    /**\n     * Visit a parse tree produced by the `collateColumnConstraint`\n     * labeled alternative in `MySqlParser.columnConstraint`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitCollateColumnConstraint?: (ctx: CollateColumnConstraintContext) => Result;\n    /**\n     * Visit a parse tree produced by the `generatedColumnConstraint`\n     * labeled alternative in `MySqlParser.columnConstraint`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitGeneratedColumnConstraint?: (ctx: GeneratedColumnConstraintContext) => Result;\n    /**\n     * Visit a parse tree produced by the `serialDefaultColumnConstraint`\n     * labeled alternative in `MySqlParser.columnConstraint`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitSerialDefaultColumnConstraint?: (ctx: SerialDefaultColumnConstraintContext) => Result;\n    /**\n     * Visit a parse tree produced by the `checkColumnConstraint`\n     * labeled alternative in `MySqlParser.columnConstraint`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitCheckColumnConstraint?: (ctx: CheckColumnConstraintContext) => Result;\n    /**\n     * Visit a parse tree produced by the `primaryKeyTableConstraint`\n     * labeled alternative in `MySqlParser.tableConstraint`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitPrimaryKeyTableConstraint?: (ctx: PrimaryKeyTableConstraintContext) => Result;\n    /**\n     * Visit a parse tree produced by the `uniqueKeyTableConstraint`\n     * labeled alternative in `MySqlParser.tableConstraint`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitUniqueKeyTableConstraint?: (ctx: UniqueKeyTableConstraintContext) => Result;\n    /**\n     * Visit a parse tree produced by the `foreignKeyTableConstraint`\n     * labeled alternative in `MySqlParser.tableConstraint`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitForeignKeyTableConstraint?: (ctx: ForeignKeyTableConstraintContext) => Result;\n    /**\n     * Visit a parse tree produced by the `checkTableConstraint`\n     * labeled alternative in `MySqlParser.tableConstraint`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitCheckTableConstraint?: (ctx: CheckTableConstraintContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.referenceDefinition`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitReferenceDefinition?: (ctx: ReferenceDefinitionContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.referenceAction`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitReferenceAction?: (ctx: ReferenceActionContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.referenceControlType`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitReferenceControlType?: (ctx: ReferenceControlTypeContext) => Result;\n    /**\n     * Visit a parse tree produced by the `simpleIndexDeclaration`\n     * labeled alternative in `MySqlParser.indexColumnDefinition`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitSimpleIndexDeclaration?: (ctx: SimpleIndexDeclarationContext) => Result;\n    /**\n     * Visit a parse tree produced by the `specialIndexDeclaration`\n     * labeled alternative in `MySqlParser.indexColumnDefinition`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitSpecialIndexDeclaration?: (ctx: SpecialIndexDeclarationContext) => Result;\n    /**\n     * Visit a parse tree produced by the `tableOptionEngine`\n     * labeled alternative in `MySqlParser.tableOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitTableOptionEngine?: (ctx: TableOptionEngineContext) => Result;\n    /**\n     * Visit a parse tree produced by the `tableOptionEngineAttribute`\n     * labeled alternative in `MySqlParser.tableOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitTableOptionEngineAttribute?: (ctx: TableOptionEngineAttributeContext) => Result;\n    /**\n     * Visit a parse tree produced by the `tableOptionAutoextendSize`\n     * labeled alternative in `MySqlParser.tableOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitTableOptionAutoextendSize?: (ctx: TableOptionAutoextendSizeContext) => Result;\n    /**\n     * Visit a parse tree produced by the `tableOptionAutoIncrement`\n     * labeled alternative in `MySqlParser.tableOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitTableOptionAutoIncrement?: (ctx: TableOptionAutoIncrementContext) => Result;\n    /**\n     * Visit a parse tree produced by the `tableOptionAverage`\n     * labeled alternative in `MySqlParser.tableOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitTableOptionAverage?: (ctx: TableOptionAverageContext) => Result;\n    /**\n     * Visit a parse tree produced by the `tableOptionCharset`\n     * labeled alternative in `MySqlParser.tableOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitTableOptionCharset?: (ctx: TableOptionCharsetContext) => Result;\n    /**\n     * Visit a parse tree produced by the `tableOptionChecksum`\n     * labeled alternative in `MySqlParser.tableOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitTableOptionChecksum?: (ctx: TableOptionChecksumContext) => Result;\n    /**\n     * Visit a parse tree produced by the `tableOptionCollate`\n     * labeled alternative in `MySqlParser.tableOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitTableOptionCollate?: (ctx: TableOptionCollateContext) => Result;\n    /**\n     * Visit a parse tree produced by the `tableOptionComment`\n     * labeled alternative in `MySqlParser.tableOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitTableOptionComment?: (ctx: TableOptionCommentContext) => Result;\n    /**\n     * Visit a parse tree produced by the `tableOptionCompression`\n     * labeled alternative in `MySqlParser.tableOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitTableOptionCompression?: (ctx: TableOptionCompressionContext) => Result;\n    /**\n     * Visit a parse tree produced by the `tableOptionConnection`\n     * labeled alternative in `MySqlParser.tableOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitTableOptionConnection?: (ctx: TableOptionConnectionContext) => Result;\n    /**\n     * Visit a parse tree produced by the `tableOptionDataDirectory`\n     * labeled alternative in `MySqlParser.tableOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitTableOptionDataDirectory?: (ctx: TableOptionDataDirectoryContext) => Result;\n    /**\n     * Visit a parse tree produced by the `tableOptionDelay`\n     * labeled alternative in `MySqlParser.tableOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitTableOptionDelay?: (ctx: TableOptionDelayContext) => Result;\n    /**\n     * Visit a parse tree produced by the `tableOptionEncryption`\n     * labeled alternative in `MySqlParser.tableOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitTableOptionEncryption?: (ctx: TableOptionEncryptionContext) => Result;\n    /**\n     * Visit a parse tree produced by the `tableOptionPageCompressed`\n     * labeled alternative in `MySqlParser.tableOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitTableOptionPageCompressed?: (ctx: TableOptionPageCompressedContext) => Result;\n    /**\n     * Visit a parse tree produced by the `tableOptionPageCompressionLevel`\n     * labeled alternative in `MySqlParser.tableOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitTableOptionPageCompressionLevel?: (ctx: TableOptionPageCompressionLevelContext) => Result;\n    /**\n     * Visit a parse tree produced by the `tableOptionEncryptionKeyId`\n     * labeled alternative in `MySqlParser.tableOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitTableOptionEncryptionKeyId?: (ctx: TableOptionEncryptionKeyIdContext) => Result;\n    /**\n     * Visit a parse tree produced by the `tableOptionIndexDirectory`\n     * labeled alternative in `MySqlParser.tableOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitTableOptionIndexDirectory?: (ctx: TableOptionIndexDirectoryContext) => Result;\n    /**\n     * Visit a parse tree produced by the `tableOptionInsertMethod`\n     * labeled alternative in `MySqlParser.tableOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitTableOptionInsertMethod?: (ctx: TableOptionInsertMethodContext) => Result;\n    /**\n     * Visit a parse tree produced by the `tableOptionKeyBlockSize`\n     * labeled alternative in `MySqlParser.tableOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitTableOptionKeyBlockSize?: (ctx: TableOptionKeyBlockSizeContext) => Result;\n    /**\n     * Visit a parse tree produced by the `tableOptionMaxRows`\n     * labeled alternative in `MySqlParser.tableOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitTableOptionMaxRows?: (ctx: TableOptionMaxRowsContext) => Result;\n    /**\n     * Visit a parse tree produced by the `tableOptionMinRows`\n     * labeled alternative in `MySqlParser.tableOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitTableOptionMinRows?: (ctx: TableOptionMinRowsContext) => Result;\n    /**\n     * Visit a parse tree produced by the `tableOptionPackKeys`\n     * labeled alternative in `MySqlParser.tableOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitTableOptionPackKeys?: (ctx: TableOptionPackKeysContext) => Result;\n    /**\n     * Visit a parse tree produced by the `tableOptionPassword`\n     * labeled alternative in `MySqlParser.tableOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitTableOptionPassword?: (ctx: TableOptionPasswordContext) => Result;\n    /**\n     * Visit a parse tree produced by the `tableOptionRowFormat`\n     * labeled alternative in `MySqlParser.tableOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitTableOptionRowFormat?: (ctx: TableOptionRowFormatContext) => Result;\n    /**\n     * Visit a parse tree produced by the `tableOptionStartTransaction`\n     * labeled alternative in `MySqlParser.tableOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitTableOptionStartTransaction?: (ctx: TableOptionStartTransactionContext) => Result;\n    /**\n     * Visit a parse tree produced by the `tableOptionSecondaryEngineAttribute`\n     * labeled alternative in `MySqlParser.tableOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitTableOptionSecondaryEngineAttribute?: (ctx: TableOptionSecondaryEngineAttributeContext) => Result;\n    /**\n     * Visit a parse tree produced by the `tableOptionRecalculation`\n     * labeled alternative in `MySqlParser.tableOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitTableOptionRecalculation?: (ctx: TableOptionRecalculationContext) => Result;\n    /**\n     * Visit a parse tree produced by the `tableOptionPersistent`\n     * labeled alternative in `MySqlParser.tableOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitTableOptionPersistent?: (ctx: TableOptionPersistentContext) => Result;\n    /**\n     * Visit a parse tree produced by the `tableOptionSamplePage`\n     * labeled alternative in `MySqlParser.tableOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitTableOptionSamplePage?: (ctx: TableOptionSamplePageContext) => Result;\n    /**\n     * Visit a parse tree produced by the `tableOptionTablespace`\n     * labeled alternative in `MySqlParser.tableOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitTableOptionTablespace?: (ctx: TableOptionTablespaceContext) => Result;\n    /**\n     * Visit a parse tree produced by the `tableOptionTableType`\n     * labeled alternative in `MySqlParser.tableOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitTableOptionTableType?: (ctx: TableOptionTableTypeContext) => Result;\n    /**\n     * Visit a parse tree produced by the `tableOptionTransactional`\n     * labeled alternative in `MySqlParser.tableOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitTableOptionTransactional?: (ctx: TableOptionTransactionalContext) => Result;\n    /**\n     * Visit a parse tree produced by the `tableOptionUnion`\n     * labeled alternative in `MySqlParser.tableOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitTableOptionUnion?: (ctx: TableOptionUnionContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.tableType`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitTableType?: (ctx: TableTypeContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.tablespaceStorage`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitTablespaceStorage?: (ctx: TablespaceStorageContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.partitionDefinitions`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitPartitionDefinitions?: (ctx: PartitionDefinitionsContext) => Result;\n    /**\n     * Visit a parse tree produced by the `partitionFunctionHash`\n     * labeled alternative in `MySqlParser.partitionFunctionDefinition`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitPartitionFunctionHash?: (ctx: PartitionFunctionHashContext) => Result;\n    /**\n     * Visit a parse tree produced by the `partitionFunctionKey`\n     * labeled alternative in `MySqlParser.partitionFunctionDefinition`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitPartitionFunctionKey?: (ctx: PartitionFunctionKeyContext) => Result;\n    /**\n     * Visit a parse tree produced by the `partitionFunctionRange`\n     * labeled alternative in `MySqlParser.partitionFunctionDefinition`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitPartitionFunctionRange?: (ctx: PartitionFunctionRangeContext) => Result;\n    /**\n     * Visit a parse tree produced by the `partitionFunctionList`\n     * labeled alternative in `MySqlParser.partitionFunctionDefinition`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitPartitionFunctionList?: (ctx: PartitionFunctionListContext) => Result;\n    /**\n     * Visit a parse tree produced by the `subPartitionFunctionHash`\n     * labeled alternative in `MySqlParser.subpartitionFunctionDefinition`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitSubPartitionFunctionHash?: (ctx: SubPartitionFunctionHashContext) => Result;\n    /**\n     * Visit a parse tree produced by the `subPartitionFunctionKey`\n     * labeled alternative in `MySqlParser.subpartitionFunctionDefinition`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitSubPartitionFunctionKey?: (ctx: SubPartitionFunctionKeyContext) => Result;\n    /**\n     * Visit a parse tree produced by the `partitionComparison`\n     * labeled alternative in `MySqlParser.partitionDefinition`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitPartitionComparison?: (ctx: PartitionComparisonContext) => Result;\n    /**\n     * Visit a parse tree produced by the `partitionListAtom`\n     * labeled alternative in `MySqlParser.partitionDefinition`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitPartitionListAtom?: (ctx: PartitionListAtomContext) => Result;\n    /**\n     * Visit a parse tree produced by the `partitionListVector`\n     * labeled alternative in `MySqlParser.partitionDefinition`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitPartitionListVector?: (ctx: PartitionListVectorContext) => Result;\n    /**\n     * Visit a parse tree produced by the `partitionSimple`\n     * labeled alternative in `MySqlParser.partitionDefinition`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitPartitionSimple?: (ctx: PartitionSimpleContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.partitionDefinerAtom`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitPartitionDefinerAtom?: (ctx: PartitionDefinerAtomContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.partitionDefinerVector`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitPartitionDefinerVector?: (ctx: PartitionDefinerVectorContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.subpartitionDefinition`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitSubpartitionDefinition?: (ctx: SubpartitionDefinitionContext) => Result;\n    /**\n     * Visit a parse tree produced by the `partitionOptionEngine`\n     * labeled alternative in `MySqlParser.partitionOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitPartitionOptionEngine?: (ctx: PartitionOptionEngineContext) => Result;\n    /**\n     * Visit a parse tree produced by the `partitionOptionComment`\n     * labeled alternative in `MySqlParser.partitionOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitPartitionOptionComment?: (ctx: PartitionOptionCommentContext) => Result;\n    /**\n     * Visit a parse tree produced by the `partitionOptionDataDirectory`\n     * labeled alternative in `MySqlParser.partitionOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitPartitionOptionDataDirectory?: (ctx: PartitionOptionDataDirectoryContext) => Result;\n    /**\n     * Visit a parse tree produced by the `partitionOptionIndexDirectory`\n     * labeled alternative in `MySqlParser.partitionOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitPartitionOptionIndexDirectory?: (ctx: PartitionOptionIndexDirectoryContext) => Result;\n    /**\n     * Visit a parse tree produced by the `partitionOptionMaxRows`\n     * labeled alternative in `MySqlParser.partitionOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitPartitionOptionMaxRows?: (ctx: PartitionOptionMaxRowsContext) => Result;\n    /**\n     * Visit a parse tree produced by the `partitionOptionMinRows`\n     * labeled alternative in `MySqlParser.partitionOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitPartitionOptionMinRows?: (ctx: PartitionOptionMinRowsContext) => Result;\n    /**\n     * Visit a parse tree produced by the `partitionOptionTablespace`\n     * labeled alternative in `MySqlParser.partitionOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitPartitionOptionTablespace?: (ctx: PartitionOptionTablespaceContext) => Result;\n    /**\n     * Visit a parse tree produced by the `partitionOptionNodeGroup`\n     * labeled alternative in `MySqlParser.partitionOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitPartitionOptionNodeGroup?: (ctx: PartitionOptionNodeGroupContext) => Result;\n    /**\n     * Visit a parse tree produced by the `alterSimpleDatabase`\n     * labeled alternative in `MySqlParser.alterDatabase`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterSimpleDatabase?: (ctx: AlterSimpleDatabaseContext) => Result;\n    /**\n     * Visit a parse tree produced by the `alterUpgradeName`\n     * labeled alternative in `MySqlParser.alterDatabase`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterUpgradeName?: (ctx: AlterUpgradeNameContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.alterEvent`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterEvent?: (ctx: AlterEventContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.alterFunction`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterFunction?: (ctx: AlterFunctionContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.alterInstance`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterInstance?: (ctx: AlterInstanceContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.alterLogfileGroup`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterLogfileGroup?: (ctx: AlterLogfileGroupContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.alterProcedure`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterProcedure?: (ctx: AlterProcedureContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.alterServer`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterServer?: (ctx: AlterServerContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.alterTable`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterTable?: (ctx: AlterTableContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.alterTablespace`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterTablespace?: (ctx: AlterTablespaceContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.alterView`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterView?: (ctx: AlterViewContext) => Result;\n    /**\n     * Visit a parse tree produced by the `alterByTableOption`\n     * labeled alternative in `MySqlParser.alterSpecification`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterByTableOption?: (ctx: AlterByTableOptionContext) => Result;\n    /**\n     * Visit a parse tree produced by the `alterByAddColumn`\n     * labeled alternative in `MySqlParser.alterSpecification`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterByAddColumn?: (ctx: AlterByAddColumnContext) => Result;\n    /**\n     * Visit a parse tree produced by the `alterByAddColumns`\n     * labeled alternative in `MySqlParser.alterSpecification`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterByAddColumns?: (ctx: AlterByAddColumnsContext) => Result;\n    /**\n     * Visit a parse tree produced by the `alterByAddIndex`\n     * labeled alternative in `MySqlParser.alterSpecification`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterByAddIndex?: (ctx: AlterByAddIndexContext) => Result;\n    /**\n     * Visit a parse tree produced by the `alterByAddPrimaryKey`\n     * labeled alternative in `MySqlParser.alterSpecification`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterByAddPrimaryKey?: (ctx: AlterByAddPrimaryKeyContext) => Result;\n    /**\n     * Visit a parse tree produced by the `alterByAddUniqueKey`\n     * labeled alternative in `MySqlParser.alterSpecification`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterByAddUniqueKey?: (ctx: AlterByAddUniqueKeyContext) => Result;\n    /**\n     * Visit a parse tree produced by the `alterByAddSpecialIndex`\n     * labeled alternative in `MySqlParser.alterSpecification`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterByAddSpecialIndex?: (ctx: AlterByAddSpecialIndexContext) => Result;\n    /**\n     * Visit a parse tree produced by the `alterByAddForeignKey`\n     * labeled alternative in `MySqlParser.alterSpecification`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterByAddForeignKey?: (ctx: AlterByAddForeignKeyContext) => Result;\n    /**\n     * Visit a parse tree produced by the `alterByAddCheckTableConstraint`\n     * labeled alternative in `MySqlParser.alterSpecification`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterByAddCheckTableConstraint?: (ctx: AlterByAddCheckTableConstraintContext) => Result;\n    /**\n     * Visit a parse tree produced by the `alterByAlterCheckTableConstraint`\n     * labeled alternative in `MySqlParser.alterSpecification`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterByAlterCheckTableConstraint?: (ctx: AlterByAlterCheckTableConstraintContext) => Result;\n    /**\n     * Visit a parse tree produced by the `alterBySetAlgorithm`\n     * labeled alternative in `MySqlParser.alterSpecification`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterBySetAlgorithm?: (ctx: AlterBySetAlgorithmContext) => Result;\n    /**\n     * Visit a parse tree produced by the `alterByChangeDefault`\n     * labeled alternative in `MySqlParser.alterSpecification`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterByChangeDefault?: (ctx: AlterByChangeDefaultContext) => Result;\n    /**\n     * Visit a parse tree produced by the `alterByChangeColumn`\n     * labeled alternative in `MySqlParser.alterSpecification`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterByChangeColumn?: (ctx: AlterByChangeColumnContext) => Result;\n    /**\n     * Visit a parse tree produced by the `alterByRenameColumn`\n     * labeled alternative in `MySqlParser.alterSpecification`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterByRenameColumn?: (ctx: AlterByRenameColumnContext) => Result;\n    /**\n     * Visit a parse tree produced by the `alterByLock`\n     * labeled alternative in `MySqlParser.alterSpecification`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterByLock?: (ctx: AlterByLockContext) => Result;\n    /**\n     * Visit a parse tree produced by the `alterByModifyColumn`\n     * labeled alternative in `MySqlParser.alterSpecification`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterByModifyColumn?: (ctx: AlterByModifyColumnContext) => Result;\n    /**\n     * Visit a parse tree produced by the `alterByDropColumn`\n     * labeled alternative in `MySqlParser.alterSpecification`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterByDropColumn?: (ctx: AlterByDropColumnContext) => Result;\n    /**\n     * Visit a parse tree produced by the `alterByDropConstraintCheck`\n     * labeled alternative in `MySqlParser.alterSpecification`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterByDropConstraintCheck?: (ctx: AlterByDropConstraintCheckContext) => Result;\n    /**\n     * Visit a parse tree produced by the `alterByDropPrimaryKey`\n     * labeled alternative in `MySqlParser.alterSpecification`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterByDropPrimaryKey?: (ctx: AlterByDropPrimaryKeyContext) => Result;\n    /**\n     * Visit a parse tree produced by the `alterByDropIndex`\n     * labeled alternative in `MySqlParser.alterSpecification`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterByDropIndex?: (ctx: AlterByDropIndexContext) => Result;\n    /**\n     * Visit a parse tree produced by the `alterByRenameIndex`\n     * labeled alternative in `MySqlParser.alterSpecification`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterByRenameIndex?: (ctx: AlterByRenameIndexContext) => Result;\n    /**\n     * Visit a parse tree produced by the `alterByAlterColumnDefault`\n     * labeled alternative in `MySqlParser.alterSpecification`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterByAlterColumnDefault?: (ctx: AlterByAlterColumnDefaultContext) => Result;\n    /**\n     * Visit a parse tree produced by the `alterByAlterIndexVisibility`\n     * labeled alternative in `MySqlParser.alterSpecification`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterByAlterIndexVisibility?: (ctx: AlterByAlterIndexVisibilityContext) => Result;\n    /**\n     * Visit a parse tree produced by the `alterByDropForeignKey`\n     * labeled alternative in `MySqlParser.alterSpecification`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterByDropForeignKey?: (ctx: AlterByDropForeignKeyContext) => Result;\n    /**\n     * Visit a parse tree produced by the `alterByDisableKeys`\n     * labeled alternative in `MySqlParser.alterSpecification`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterByDisableKeys?: (ctx: AlterByDisableKeysContext) => Result;\n    /**\n     * Visit a parse tree produced by the `alterByEnableKeys`\n     * labeled alternative in `MySqlParser.alterSpecification`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterByEnableKeys?: (ctx: AlterByEnableKeysContext) => Result;\n    /**\n     * Visit a parse tree produced by the `alterByRename`\n     * labeled alternative in `MySqlParser.alterSpecification`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterByRename?: (ctx: AlterByRenameContext) => Result;\n    /**\n     * Visit a parse tree produced by the `alterByOrder`\n     * labeled alternative in `MySqlParser.alterSpecification`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterByOrder?: (ctx: AlterByOrderContext) => Result;\n    /**\n     * Visit a parse tree produced by the `alterByConvertCharset`\n     * labeled alternative in `MySqlParser.alterSpecification`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterByConvertCharset?: (ctx: AlterByConvertCharsetContext) => Result;\n    /**\n     * Visit a parse tree produced by the `alterByDefaultCharset`\n     * labeled alternative in `MySqlParser.alterSpecification`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterByDefaultCharset?: (ctx: AlterByDefaultCharsetContext) => Result;\n    /**\n     * Visit a parse tree produced by the `alterByDiscardTablespace`\n     * labeled alternative in `MySqlParser.alterSpecification`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterByDiscardTablespace?: (ctx: AlterByDiscardTablespaceContext) => Result;\n    /**\n     * Visit a parse tree produced by the `alterByImportTablespace`\n     * labeled alternative in `MySqlParser.alterSpecification`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterByImportTablespace?: (ctx: AlterByImportTablespaceContext) => Result;\n    /**\n     * Visit a parse tree produced by the `alterByForce`\n     * labeled alternative in `MySqlParser.alterSpecification`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterByForce?: (ctx: AlterByForceContext) => Result;\n    /**\n     * Visit a parse tree produced by the `alterByValidate`\n     * labeled alternative in `MySqlParser.alterSpecification`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterByValidate?: (ctx: AlterByValidateContext) => Result;\n    /**\n     * Visit a parse tree produced by the `alterByAddDefinitions`\n     * labeled alternative in `MySqlParser.alterSpecification`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterByAddDefinitions?: (ctx: AlterByAddDefinitionsContext) => Result;\n    /**\n     * Visit a parse tree produced by the `alterPartition`\n     * labeled alternative in `MySqlParser.alterSpecification`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterPartition?: (ctx: AlterPartitionContext) => Result;\n    /**\n     * Visit a parse tree produced by the `alterByAddPartition`\n     * labeled alternative in `MySqlParser.alterPartitionSpecification`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterByAddPartition?: (ctx: AlterByAddPartitionContext) => Result;\n    /**\n     * Visit a parse tree produced by the `alterByDropPartition`\n     * labeled alternative in `MySqlParser.alterPartitionSpecification`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterByDropPartition?: (ctx: AlterByDropPartitionContext) => Result;\n    /**\n     * Visit a parse tree produced by the `alterByDiscardPartition`\n     * labeled alternative in `MySqlParser.alterPartitionSpecification`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterByDiscardPartition?: (ctx: AlterByDiscardPartitionContext) => Result;\n    /**\n     * Visit a parse tree produced by the `alterByImportPartition`\n     * labeled alternative in `MySqlParser.alterPartitionSpecification`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterByImportPartition?: (ctx: AlterByImportPartitionContext) => Result;\n    /**\n     * Visit a parse tree produced by the `alterByTruncatePartition`\n     * labeled alternative in `MySqlParser.alterPartitionSpecification`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterByTruncatePartition?: (ctx: AlterByTruncatePartitionContext) => Result;\n    /**\n     * Visit a parse tree produced by the `alterByCoalescePartition`\n     * labeled alternative in `MySqlParser.alterPartitionSpecification`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterByCoalescePartition?: (ctx: AlterByCoalescePartitionContext) => Result;\n    /**\n     * Visit a parse tree produced by the `alterByReorganizePartition`\n     * labeled alternative in `MySqlParser.alterPartitionSpecification`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterByReorganizePartition?: (ctx: AlterByReorganizePartitionContext) => Result;\n    /**\n     * Visit a parse tree produced by the `alterByExchangePartition`\n     * labeled alternative in `MySqlParser.alterPartitionSpecification`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterByExchangePartition?: (ctx: AlterByExchangePartitionContext) => Result;\n    /**\n     * Visit a parse tree produced by the `alterByAnalyzePartition`\n     * labeled alternative in `MySqlParser.alterPartitionSpecification`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterByAnalyzePartition?: (ctx: AlterByAnalyzePartitionContext) => Result;\n    /**\n     * Visit a parse tree produced by the `alterByCheckPartition`\n     * labeled alternative in `MySqlParser.alterPartitionSpecification`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterByCheckPartition?: (ctx: AlterByCheckPartitionContext) => Result;\n    /**\n     * Visit a parse tree produced by the `alterByOptimizePartition`\n     * labeled alternative in `MySqlParser.alterPartitionSpecification`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterByOptimizePartition?: (ctx: AlterByOptimizePartitionContext) => Result;\n    /**\n     * Visit a parse tree produced by the `alterByRebuildPartition`\n     * labeled alternative in `MySqlParser.alterPartitionSpecification`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterByRebuildPartition?: (ctx: AlterByRebuildPartitionContext) => Result;\n    /**\n     * Visit a parse tree produced by the `alterByRepairPartition`\n     * labeled alternative in `MySqlParser.alterPartitionSpecification`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterByRepairPartition?: (ctx: AlterByRepairPartitionContext) => Result;\n    /**\n     * Visit a parse tree produced by the `alterByRemovePartitioning`\n     * labeled alternative in `MySqlParser.alterPartitionSpecification`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterByRemovePartitioning?: (ctx: AlterByRemovePartitioningContext) => Result;\n    /**\n     * Visit a parse tree produced by the `alterByUpgradePartitioning`\n     * labeled alternative in `MySqlParser.alterPartitionSpecification`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterByUpgradePartitioning?: (ctx: AlterByUpgradePartitioningContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.dropDatabase`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitDropDatabase?: (ctx: DropDatabaseContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.dropEvent`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitDropEvent?: (ctx: DropEventContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.dropIndex`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitDropIndex?: (ctx: DropIndexContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.dropLogfileGroup`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitDropLogfileGroup?: (ctx: DropLogfileGroupContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.dropProcedure`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitDropProcedure?: (ctx: DropProcedureContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.dropFunction`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitDropFunction?: (ctx: DropFunctionContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.dropServer`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitDropServer?: (ctx: DropServerContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.dropTable`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitDropTable?: (ctx: DropTableContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.dropTablespace`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitDropTablespace?: (ctx: DropTablespaceContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.dropTrigger`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitDropTrigger?: (ctx: DropTriggerContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.dropView`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitDropView?: (ctx: DropViewContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.dropRole`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitDropRole?: (ctx: DropRoleContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.setRole`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitSetRole?: (ctx: SetRoleContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.renameTable`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitRenameTable?: (ctx: RenameTableContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.renameTableClause`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitRenameTableClause?: (ctx: RenameTableClauseContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.truncateTable`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitTruncateTable?: (ctx: TruncateTableContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.callStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitCallStatement?: (ctx: CallStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.deleteStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitDeleteStatement?: (ctx: DeleteStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.doStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitDoStatement?: (ctx: DoStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.handlerStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitHandlerStatement?: (ctx: HandlerStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.insertStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitInsertStatement?: (ctx: InsertStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.loadDataStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitLoadDataStatement?: (ctx: LoadDataStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.loadXmlStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitLoadXmlStatement?: (ctx: LoadXmlStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.replaceStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitReplaceStatement?: (ctx: ReplaceStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by the `simpleSelect`\n     * labeled alternative in `MySqlParser.selectStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitSimpleSelect?: (ctx: SimpleSelectContext) => Result;\n    /**\n     * Visit a parse tree produced by the `parenthesisSelect`\n     * labeled alternative in `MySqlParser.selectStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitParenthesisSelect?: (ctx: ParenthesisSelectContext) => Result;\n    /**\n     * Visit a parse tree produced by the `unionSelect`\n     * labeled alternative in `MySqlParser.selectStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitUnionSelect?: (ctx: UnionSelectContext) => Result;\n    /**\n     * Visit a parse tree produced by the `unionParenthesisSelect`\n     * labeled alternative in `MySqlParser.selectStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitUnionParenthesisSelect?: (ctx: UnionParenthesisSelectContext) => Result;\n    /**\n     * Visit a parse tree produced by the `withLateralStatement`\n     * labeled alternative in `MySqlParser.selectStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitWithLateralStatement?: (ctx: WithLateralStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.updateStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitUpdateStatement?: (ctx: UpdateStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.valuesStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitValuesStatement?: (ctx: ValuesStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.insertStatementValue`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitInsertStatementValue?: (ctx: InsertStatementValueContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.updatedElement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitUpdatedElement?: (ctx: UpdatedElementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.assignmentField`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAssignmentField?: (ctx: AssignmentFieldContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.lockClause`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitLockClause?: (ctx: LockClauseContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.singleDeleteStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitSingleDeleteStatement?: (ctx: SingleDeleteStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.multipleDeleteStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitMultipleDeleteStatement?: (ctx: MultipleDeleteStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.handlerOpenStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitHandlerOpenStatement?: (ctx: HandlerOpenStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.handlerReadIndexStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitHandlerReadIndexStatement?: (ctx: HandlerReadIndexStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.handlerReadStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitHandlerReadStatement?: (ctx: HandlerReadStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.handlerCloseStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitHandlerCloseStatement?: (ctx: HandlerCloseStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.singleUpdateStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitSingleUpdateStatement?: (ctx: SingleUpdateStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.multipleUpdateStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitMultipleUpdateStatement?: (ctx: MultipleUpdateStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.orderByClause`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitOrderByClause?: (ctx: OrderByClauseContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.orderByExpression`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitOrderByExpression?: (ctx: OrderByExpressionContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.tableSources`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitTableSources?: (ctx: TableSourcesContext) => Result;\n    /**\n     * Visit a parse tree produced by the `tableSourceBase`\n     * labeled alternative in `MySqlParser.tableSource`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitTableSourceBase?: (ctx: TableSourceBaseContext) => Result;\n    /**\n     * Visit a parse tree produced by the `tableSourceNested`\n     * labeled alternative in `MySqlParser.tableSource`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitTableSourceNested?: (ctx: TableSourceNestedContext) => Result;\n    /**\n     * Visit a parse tree produced by the `tableJson`\n     * labeled alternative in `MySqlParser.tableSource`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitTableJson?: (ctx: TableJsonContext) => Result;\n    /**\n     * Visit a parse tree produced by the `atomTableItem`\n     * labeled alternative in `MySqlParser.tableSourceItem`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAtomTableItem?: (ctx: AtomTableItemContext) => Result;\n    /**\n     * Visit a parse tree produced by the `subqueryTableItem`\n     * labeled alternative in `MySqlParser.tableSourceItem`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitSubqueryTableItem?: (ctx: SubqueryTableItemContext) => Result;\n    /**\n     * Visit a parse tree produced by the `tableSourcesItem`\n     * labeled alternative in `MySqlParser.tableSourceItem`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitTableSourcesItem?: (ctx: TableSourcesItemContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.indexHint`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitIndexHint?: (ctx: IndexHintContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.indexHintType`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitIndexHintType?: (ctx: IndexHintTypeContext) => Result;\n    /**\n     * Visit a parse tree produced by the `innerJoin`\n     * labeled alternative in `MySqlParser.joinPart`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitInnerJoin?: (ctx: InnerJoinContext) => Result;\n    /**\n     * Visit a parse tree produced by the `straightJoin`\n     * labeled alternative in `MySqlParser.joinPart`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitStraightJoin?: (ctx: StraightJoinContext) => Result;\n    /**\n     * Visit a parse tree produced by the `outerJoin`\n     * labeled alternative in `MySqlParser.joinPart`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitOuterJoin?: (ctx: OuterJoinContext) => Result;\n    /**\n     * Visit a parse tree produced by the `naturalJoin`\n     * labeled alternative in `MySqlParser.joinPart`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitNaturalJoin?: (ctx: NaturalJoinContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.joinSpec`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitJoinSpec?: (ctx: JoinSpecContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.queryExpression`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitQueryExpression?: (ctx: QueryExpressionContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.queryExpressionNointo`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitQueryExpressionNointo?: (ctx: QueryExpressionNointoContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.querySpecification`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitQuerySpecification?: (ctx: QuerySpecificationContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.querySpecificationNointo`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitQuerySpecificationNointo?: (ctx: QuerySpecificationNointoContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.unionParenthesis`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitUnionParenthesis?: (ctx: UnionParenthesisContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.unionStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitUnionStatement?: (ctx: UnionStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.lateralStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitLateralStatement?: (ctx: LateralStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.jsonTable`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitJsonTable?: (ctx: JsonTableContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.jsonColumnList`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitJsonColumnList?: (ctx: JsonColumnListContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.jsonColumn`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitJsonColumn?: (ctx: JsonColumnContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.jsonOnEmpty`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitJsonOnEmpty?: (ctx: JsonOnEmptyContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.jsonOnError`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitJsonOnError?: (ctx: JsonOnErrorContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.selectSpec`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitSelectSpec?: (ctx: SelectSpecContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.selectElements`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitSelectElements?: (ctx: SelectElementsContext) => Result;\n    /**\n     * Visit a parse tree produced by the `selectStarElement`\n     * labeled alternative in `MySqlParser.selectElement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitSelectStarElement?: (ctx: SelectStarElementContext) => Result;\n    /**\n     * Visit a parse tree produced by the `selectColumnElement`\n     * labeled alternative in `MySqlParser.selectElement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitSelectColumnElement?: (ctx: SelectColumnElementContext) => Result;\n    /**\n     * Visit a parse tree produced by the `selectFunctionElement`\n     * labeled alternative in `MySqlParser.selectElement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitSelectFunctionElement?: (ctx: SelectFunctionElementContext) => Result;\n    /**\n     * Visit a parse tree produced by the `selectExpressionElement`\n     * labeled alternative in `MySqlParser.selectElement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitSelectExpressionElement?: (ctx: SelectExpressionElementContext) => Result;\n    /**\n     * Visit a parse tree produced by the `selectIntoVariables`\n     * labeled alternative in `MySqlParser.selectIntoExpression`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitSelectIntoVariables?: (ctx: SelectIntoVariablesContext) => Result;\n    /**\n     * Visit a parse tree produced by the `selectIntoDumpFile`\n     * labeled alternative in `MySqlParser.selectIntoExpression`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitSelectIntoDumpFile?: (ctx: SelectIntoDumpFileContext) => Result;\n    /**\n     * Visit a parse tree produced by the `selectIntoTextFile`\n     * labeled alternative in `MySqlParser.selectIntoExpression`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitSelectIntoTextFile?: (ctx: SelectIntoTextFileContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.selectFieldsInto`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitSelectFieldsInto?: (ctx: SelectFieldsIntoContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.selectLinesInto`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitSelectLinesInto?: (ctx: SelectLinesIntoContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.fromClause`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitFromClause?: (ctx: FromClauseContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.groupByClause`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitGroupByClause?: (ctx: GroupByClauseContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.havingClause`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitHavingClause?: (ctx: HavingClauseContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.windowClause`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitWindowClause?: (ctx: WindowClauseContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.groupByItem`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitGroupByItem?: (ctx: GroupByItemContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.limitClause`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitLimitClause?: (ctx: LimitClauseContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.limitClauseAtom`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitLimitClauseAtom?: (ctx: LimitClauseAtomContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.startTransaction`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitStartTransaction?: (ctx: StartTransactionContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.beginWork`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitBeginWork?: (ctx: BeginWorkContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.commitWork`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitCommitWork?: (ctx: CommitWorkContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.rollbackWork`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitRollbackWork?: (ctx: RollbackWorkContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.savepointStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitSavepointStatement?: (ctx: SavepointStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.rollbackStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitRollbackStatement?: (ctx: RollbackStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.releaseStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitReleaseStatement?: (ctx: ReleaseStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.lockTables`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitLockTables?: (ctx: LockTablesContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.unlockTables`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitUnlockTables?: (ctx: UnlockTablesContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.setAutocommitStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitSetAutocommitStatement?: (ctx: SetAutocommitStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.setTransactionStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitSetTransactionStatement?: (ctx: SetTransactionStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.transactionMode`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitTransactionMode?: (ctx: TransactionModeContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.lockTableElement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitLockTableElement?: (ctx: LockTableElementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.lockAction`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitLockAction?: (ctx: LockActionContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.transactionOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitTransactionOption?: (ctx: TransactionOptionContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.transactionLevel`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitTransactionLevel?: (ctx: TransactionLevelContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.changeMaster`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitChangeMaster?: (ctx: ChangeMasterContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.changeReplicationFilter`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitChangeReplicationFilter?: (ctx: ChangeReplicationFilterContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.purgeBinaryLogs`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitPurgeBinaryLogs?: (ctx: PurgeBinaryLogsContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.resetMaster`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitResetMaster?: (ctx: ResetMasterContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.resetSlave`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitResetSlave?: (ctx: ResetSlaveContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.startSlave`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitStartSlave?: (ctx: StartSlaveContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.stopSlave`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitStopSlave?: (ctx: StopSlaveContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.startGroupReplication`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitStartGroupReplication?: (ctx: StartGroupReplicationContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.stopGroupReplication`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitStopGroupReplication?: (ctx: StopGroupReplicationContext) => Result;\n    /**\n     * Visit a parse tree produced by the `masterStringOption`\n     * labeled alternative in `MySqlParser.masterOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitMasterStringOption?: (ctx: MasterStringOptionContext) => Result;\n    /**\n     * Visit a parse tree produced by the `masterDecimalOption`\n     * labeled alternative in `MySqlParser.masterOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitMasterDecimalOption?: (ctx: MasterDecimalOptionContext) => Result;\n    /**\n     * Visit a parse tree produced by the `masterBoolOption`\n     * labeled alternative in `MySqlParser.masterOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitMasterBoolOption?: (ctx: MasterBoolOptionContext) => Result;\n    /**\n     * Visit a parse tree produced by the `masterRealOption`\n     * labeled alternative in `MySqlParser.masterOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitMasterRealOption?: (ctx: MasterRealOptionContext) => Result;\n    /**\n     * Visit a parse tree produced by the `masterUidListOption`\n     * labeled alternative in `MySqlParser.masterOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitMasterUidListOption?: (ctx: MasterUidListOptionContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.stringMasterOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitStringMasterOption?: (ctx: StringMasterOptionContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.decimalMasterOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitDecimalMasterOption?: (ctx: DecimalMasterOptionContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.boolMasterOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitBoolMasterOption?: (ctx: BoolMasterOptionContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.channelOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitChannelOption?: (ctx: ChannelOptionContext) => Result;\n    /**\n     * Visit a parse tree produced by the `doDbReplication`\n     * labeled alternative in `MySqlParser.replicationFilter`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitDoDbReplication?: (ctx: DoDbReplicationContext) => Result;\n    /**\n     * Visit a parse tree produced by the `ignoreDbReplication`\n     * labeled alternative in `MySqlParser.replicationFilter`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitIgnoreDbReplication?: (ctx: IgnoreDbReplicationContext) => Result;\n    /**\n     * Visit a parse tree produced by the `doTableReplication`\n     * labeled alternative in `MySqlParser.replicationFilter`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitDoTableReplication?: (ctx: DoTableReplicationContext) => Result;\n    /**\n     * Visit a parse tree produced by the `ignoreTableReplication`\n     * labeled alternative in `MySqlParser.replicationFilter`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitIgnoreTableReplication?: (ctx: IgnoreTableReplicationContext) => Result;\n    /**\n     * Visit a parse tree produced by the `wildDoTableReplication`\n     * labeled alternative in `MySqlParser.replicationFilter`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitWildDoTableReplication?: (ctx: WildDoTableReplicationContext) => Result;\n    /**\n     * Visit a parse tree produced by the `wildIgnoreTableReplication`\n     * labeled alternative in `MySqlParser.replicationFilter`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitWildIgnoreTableReplication?: (ctx: WildIgnoreTableReplicationContext) => Result;\n    /**\n     * Visit a parse tree produced by the `rewriteDbReplication`\n     * labeled alternative in `MySqlParser.replicationFilter`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitRewriteDbReplication?: (ctx: RewriteDbReplicationContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.tablePair`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitTablePair?: (ctx: TablePairContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.threadType`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitThreadType?: (ctx: ThreadTypeContext) => Result;\n    /**\n     * Visit a parse tree produced by the `gtidsUntilOption`\n     * labeled alternative in `MySqlParser.untilOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitGtidsUntilOption?: (ctx: GtidsUntilOptionContext) => Result;\n    /**\n     * Visit a parse tree produced by the `masterLogUntilOption`\n     * labeled alternative in `MySqlParser.untilOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitMasterLogUntilOption?: (ctx: MasterLogUntilOptionContext) => Result;\n    /**\n     * Visit a parse tree produced by the `relayLogUntilOption`\n     * labeled alternative in `MySqlParser.untilOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitRelayLogUntilOption?: (ctx: RelayLogUntilOptionContext) => Result;\n    /**\n     * Visit a parse tree produced by the `sqlGapsUntilOption`\n     * labeled alternative in `MySqlParser.untilOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitSqlGapsUntilOption?: (ctx: SqlGapsUntilOptionContext) => Result;\n    /**\n     * Visit a parse tree produced by the `userConnectionOption`\n     * labeled alternative in `MySqlParser.connectionOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitUserConnectionOption?: (ctx: UserConnectionOptionContext) => Result;\n    /**\n     * Visit a parse tree produced by the `passwordConnectionOption`\n     * labeled alternative in `MySqlParser.connectionOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitPasswordConnectionOption?: (ctx: PasswordConnectionOptionContext) => Result;\n    /**\n     * Visit a parse tree produced by the `defaultAuthConnectionOption`\n     * labeled alternative in `MySqlParser.connectionOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitDefaultAuthConnectionOption?: (ctx: DefaultAuthConnectionOptionContext) => Result;\n    /**\n     * Visit a parse tree produced by the `pluginDirConnectionOption`\n     * labeled alternative in `MySqlParser.connectionOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitPluginDirConnectionOption?: (ctx: PluginDirConnectionOptionContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.gtuidSet`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitGtuidSet?: (ctx: GtuidSetContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.xaStartTransaction`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitXaStartTransaction?: (ctx: XaStartTransactionContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.xaEndTransaction`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitXaEndTransaction?: (ctx: XaEndTransactionContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.xaPrepareStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitXaPrepareStatement?: (ctx: XaPrepareStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.xaCommitWork`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitXaCommitWork?: (ctx: XaCommitWorkContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.xaRollbackWork`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitXaRollbackWork?: (ctx: XaRollbackWorkContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.xaRecoverWork`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitXaRecoverWork?: (ctx: XaRecoverWorkContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.prepareStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitPrepareStatement?: (ctx: PrepareStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.executeStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitExecuteStatement?: (ctx: ExecuteStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.deallocatePrepare`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitDeallocatePrepare?: (ctx: DeallocatePrepareContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.routineBody`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitRoutineBody?: (ctx: RoutineBodyContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.blockStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitBlockStatement?: (ctx: BlockStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.caseStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitCaseStatement?: (ctx: CaseStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.ifStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitIfStatement?: (ctx: IfStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.iterateStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitIterateStatement?: (ctx: IterateStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.leaveStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitLeaveStatement?: (ctx: LeaveStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.loopStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitLoopStatement?: (ctx: LoopStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.repeatStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitRepeatStatement?: (ctx: RepeatStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.returnStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitReturnStatement?: (ctx: ReturnStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.whileStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitWhileStatement?: (ctx: WhileStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by the `CloseCursor`\n     * labeled alternative in `MySqlParser.cursorStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitCloseCursor?: (ctx: CloseCursorContext) => Result;\n    /**\n     * Visit a parse tree produced by the `FetchCursor`\n     * labeled alternative in `MySqlParser.cursorStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitFetchCursor?: (ctx: FetchCursorContext) => Result;\n    /**\n     * Visit a parse tree produced by the `OpenCursor`\n     * labeled alternative in `MySqlParser.cursorStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitOpenCursor?: (ctx: OpenCursorContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.declareVariable`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitDeclareVariable?: (ctx: DeclareVariableContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.declareCondition`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitDeclareCondition?: (ctx: DeclareConditionContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.declareCursor`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitDeclareCursor?: (ctx: DeclareCursorContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.declareHandler`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitDeclareHandler?: (ctx: DeclareHandlerContext) => Result;\n    /**\n     * Visit a parse tree produced by the `handlerConditionCode`\n     * labeled alternative in `MySqlParser.handlerConditionValue`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitHandlerConditionCode?: (ctx: HandlerConditionCodeContext) => Result;\n    /**\n     * Visit a parse tree produced by the `handlerConditionState`\n     * labeled alternative in `MySqlParser.handlerConditionValue`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitHandlerConditionState?: (ctx: HandlerConditionStateContext) => Result;\n    /**\n     * Visit a parse tree produced by the `handlerConditionName`\n     * labeled alternative in `MySqlParser.handlerConditionValue`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitHandlerConditionName?: (ctx: HandlerConditionNameContext) => Result;\n    /**\n     * Visit a parse tree produced by the `handlerConditionWarning`\n     * labeled alternative in `MySqlParser.handlerConditionValue`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitHandlerConditionWarning?: (ctx: HandlerConditionWarningContext) => Result;\n    /**\n     * Visit a parse tree produced by the `handlerConditionNotfound`\n     * labeled alternative in `MySqlParser.handlerConditionValue`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitHandlerConditionNotfound?: (ctx: HandlerConditionNotfoundContext) => Result;\n    /**\n     * Visit a parse tree produced by the `handlerConditionException`\n     * labeled alternative in `MySqlParser.handlerConditionValue`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitHandlerConditionException?: (ctx: HandlerConditionExceptionContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.procedureSqlStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitProcedureSqlStatement?: (ctx: ProcedureSqlStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.caseAlternative`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitCaseAlternative?: (ctx: CaseAlternativeContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.elifAlternative`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitElifAlternative?: (ctx: ElifAlternativeContext) => Result;\n    /**\n     * Visit a parse tree produced by the `alterUserMysqlV56`\n     * labeled alternative in `MySqlParser.alterUser`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterUserMysqlV56?: (ctx: AlterUserMysqlV56Context) => Result;\n    /**\n     * Visit a parse tree produced by the `alterUserMysqlV80`\n     * labeled alternative in `MySqlParser.alterUser`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAlterUserMysqlV80?: (ctx: AlterUserMysqlV80Context) => Result;\n    /**\n     * Visit a parse tree produced by the `createUserMysqlV56`\n     * labeled alternative in `MySqlParser.createUser`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitCreateUserMysqlV56?: (ctx: CreateUserMysqlV56Context) => Result;\n    /**\n     * Visit a parse tree produced by the `createUserMysqlV80`\n     * labeled alternative in `MySqlParser.createUser`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitCreateUserMysqlV80?: (ctx: CreateUserMysqlV80Context) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.dropUser`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitDropUser?: (ctx: DropUserContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.grantStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitGrantStatement?: (ctx: GrantStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.roleOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitRoleOption?: (ctx: RoleOptionContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.grantProxy`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitGrantProxy?: (ctx: GrantProxyContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.renameUser`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitRenameUser?: (ctx: RenameUserContext) => Result;\n    /**\n     * Visit a parse tree produced by the `detailRevoke`\n     * labeled alternative in `MySqlParser.revokeStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitDetailRevoke?: (ctx: DetailRevokeContext) => Result;\n    /**\n     * Visit a parse tree produced by the `shortRevoke`\n     * labeled alternative in `MySqlParser.revokeStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitShortRevoke?: (ctx: ShortRevokeContext) => Result;\n    /**\n     * Visit a parse tree produced by the `roleRevoke`\n     * labeled alternative in `MySqlParser.revokeStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitRoleRevoke?: (ctx: RoleRevokeContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.revokeProxy`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitRevokeProxy?: (ctx: RevokeProxyContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.setPasswordStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitSetPasswordStatement?: (ctx: SetPasswordStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.userSpecification`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitUserSpecification?: (ctx: UserSpecificationContext) => Result;\n    /**\n     * Visit a parse tree produced by the `hashAuthOption`\n     * labeled alternative in `MySqlParser.userAuthOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitHashAuthOption?: (ctx: HashAuthOptionContext) => Result;\n    /**\n     * Visit a parse tree produced by the `randomAuthOption`\n     * labeled alternative in `MySqlParser.userAuthOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitRandomAuthOption?: (ctx: RandomAuthOptionContext) => Result;\n    /**\n     * Visit a parse tree produced by the `stringAuthOption`\n     * labeled alternative in `MySqlParser.userAuthOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitStringAuthOption?: (ctx: StringAuthOptionContext) => Result;\n    /**\n     * Visit a parse tree produced by the `moduleAuthOption`\n     * labeled alternative in `MySqlParser.userAuthOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitModuleAuthOption?: (ctx: ModuleAuthOptionContext) => Result;\n    /**\n     * Visit a parse tree produced by the `simpleAuthOption`\n     * labeled alternative in `MySqlParser.userAuthOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitSimpleAuthOption?: (ctx: SimpleAuthOptionContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.authOptionClause`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAuthOptionClause?: (ctx: AuthOptionClauseContext) => Result;\n    /**\n     * Visit a parse tree produced by the `module`\n     * labeled alternative in `MySqlParser.authenticationRule`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitModule?: (ctx: ModuleContext) => Result;\n    /**\n     * Visit a parse tree produced by the `passwordModuleOption`\n     * labeled alternative in `MySqlParser.authenticationRule`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitPasswordModuleOption?: (ctx: PasswordModuleOptionContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.tlsOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitTlsOption?: (ctx: TlsOptionContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.userResourceOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitUserResourceOption?: (ctx: UserResourceOptionContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.userPasswordOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitUserPasswordOption?: (ctx: UserPasswordOptionContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.userLockOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitUserLockOption?: (ctx: UserLockOptionContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.privelegeClause`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitPrivelegeClause?: (ctx: PrivelegeClauseContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.privilege`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitPrivilege?: (ctx: PrivilegeContext) => Result;\n    /**\n     * Visit a parse tree produced by the `currentSchemaPriviLevel`\n     * labeled alternative in `MySqlParser.privilegeLevel`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitCurrentSchemaPriviLevel?: (ctx: CurrentSchemaPriviLevelContext) => Result;\n    /**\n     * Visit a parse tree produced by the `globalPrivLevel`\n     * labeled alternative in `MySqlParser.privilegeLevel`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitGlobalPrivLevel?: (ctx: GlobalPrivLevelContext) => Result;\n    /**\n     * Visit a parse tree produced by the `definiteSchemaPrivLevel`\n     * labeled alternative in `MySqlParser.privilegeLevel`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitDefiniteSchemaPrivLevel?: (ctx: DefiniteSchemaPrivLevelContext) => Result;\n    /**\n     * Visit a parse tree produced by the `definiteFullTablePrivLevel`\n     * labeled alternative in `MySqlParser.privilegeLevel`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitDefiniteFullTablePrivLevel?: (ctx: DefiniteFullTablePrivLevelContext) => Result;\n    /**\n     * Visit a parse tree produced by the `definiteFullTablePrivLevel2`\n     * labeled alternative in `MySqlParser.privilegeLevel`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitDefiniteFullTablePrivLevel2?: (ctx: DefiniteFullTablePrivLevel2Context) => Result;\n    /**\n     * Visit a parse tree produced by the `definiteTablePrivLevel`\n     * labeled alternative in `MySqlParser.privilegeLevel`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitDefiniteTablePrivLevel?: (ctx: DefiniteTablePrivLevelContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.renameUserClause`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitRenameUserClause?: (ctx: RenameUserClauseContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.analyzeTable`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAnalyzeTable?: (ctx: AnalyzeTableContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.checkTable`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitCheckTable?: (ctx: CheckTableContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.checksumTable`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitChecksumTable?: (ctx: ChecksumTableContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.optimizeTable`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitOptimizeTable?: (ctx: OptimizeTableContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.repairTable`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitRepairTable?: (ctx: RepairTableContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.checkTableOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitCheckTableOption?: (ctx: CheckTableOptionContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.createUdfunction`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitCreateUdfunction?: (ctx: CreateUdfunctionContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.installPlugin`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitInstallPlugin?: (ctx: InstallPluginContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.uninstallPlugin`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitUninstallPlugin?: (ctx: UninstallPluginContext) => Result;\n    /**\n     * Visit a parse tree produced by the `setVariable`\n     * labeled alternative in `MySqlParser.setStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitSetVariable?: (ctx: SetVariableContext) => Result;\n    /**\n     * Visit a parse tree produced by the `setCharset`\n     * labeled alternative in `MySqlParser.setStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitSetCharset?: (ctx: SetCharsetContext) => Result;\n    /**\n     * Visit a parse tree produced by the `setNames`\n     * labeled alternative in `MySqlParser.setStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitSetNames?: (ctx: SetNamesContext) => Result;\n    /**\n     * Visit a parse tree produced by the `setPassword`\n     * labeled alternative in `MySqlParser.setStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitSetPassword?: (ctx: SetPasswordContext) => Result;\n    /**\n     * Visit a parse tree produced by the `setTransaction`\n     * labeled alternative in `MySqlParser.setStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitSetTransaction?: (ctx: SetTransactionContext) => Result;\n    /**\n     * Visit a parse tree produced by the `setAutocommit`\n     * labeled alternative in `MySqlParser.setStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitSetAutocommit?: (ctx: SetAutocommitContext) => Result;\n    /**\n     * Visit a parse tree produced by the `setNewValueInsideTrigger`\n     * labeled alternative in `MySqlParser.setStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitSetNewValueInsideTrigger?: (ctx: SetNewValueInsideTriggerContext) => Result;\n    /**\n     * Visit a parse tree produced by the `showMasterLogs`\n     * labeled alternative in `MySqlParser.showStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitShowMasterLogs?: (ctx: ShowMasterLogsContext) => Result;\n    /**\n     * Visit a parse tree produced by the `showLogEvents`\n     * labeled alternative in `MySqlParser.showStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitShowLogEvents?: (ctx: ShowLogEventsContext) => Result;\n    /**\n     * Visit a parse tree produced by the `showObjectFilter`\n     * labeled alternative in `MySqlParser.showStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitShowObjectFilter?: (ctx: ShowObjectFilterContext) => Result;\n    /**\n     * Visit a parse tree produced by the `showColumns`\n     * labeled alternative in `MySqlParser.showStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitShowColumns?: (ctx: ShowColumnsContext) => Result;\n    /**\n     * Visit a parse tree produced by the `showCreateDb`\n     * labeled alternative in `MySqlParser.showStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitShowCreateDb?: (ctx: ShowCreateDbContext) => Result;\n    /**\n     * Visit a parse tree produced by the `showCreateFullIdObject`\n     * labeled alternative in `MySqlParser.showStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitShowCreateFullIdObject?: (ctx: ShowCreateFullIdObjectContext) => Result;\n    /**\n     * Visit a parse tree produced by the `showCreateUser`\n     * labeled alternative in `MySqlParser.showStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitShowCreateUser?: (ctx: ShowCreateUserContext) => Result;\n    /**\n     * Visit a parse tree produced by the `showEngine`\n     * labeled alternative in `MySqlParser.showStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitShowEngine?: (ctx: ShowEngineContext) => Result;\n    /**\n     * Visit a parse tree produced by the `showGlobalInfo`\n     * labeled alternative in `MySqlParser.showStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitShowGlobalInfo?: (ctx: ShowGlobalInfoContext) => Result;\n    /**\n     * Visit a parse tree produced by the `showErrors`\n     * labeled alternative in `MySqlParser.showStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitShowErrors?: (ctx: ShowErrorsContext) => Result;\n    /**\n     * Visit a parse tree produced by the `showCountErrors`\n     * labeled alternative in `MySqlParser.showStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitShowCountErrors?: (ctx: ShowCountErrorsContext) => Result;\n    /**\n     * Visit a parse tree produced by the `showSchemaFilter`\n     * labeled alternative in `MySqlParser.showStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitShowSchemaFilter?: (ctx: ShowSchemaFilterContext) => Result;\n    /**\n     * Visit a parse tree produced by the `showRoutine`\n     * labeled alternative in `MySqlParser.showStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitShowRoutine?: (ctx: ShowRoutineContext) => Result;\n    /**\n     * Visit a parse tree produced by the `showGrants`\n     * labeled alternative in `MySqlParser.showStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitShowGrants?: (ctx: ShowGrantsContext) => Result;\n    /**\n     * Visit a parse tree produced by the `showIndexes`\n     * labeled alternative in `MySqlParser.showStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitShowIndexes?: (ctx: ShowIndexesContext) => Result;\n    /**\n     * Visit a parse tree produced by the `showOpenTables`\n     * labeled alternative in `MySqlParser.showStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitShowOpenTables?: (ctx: ShowOpenTablesContext) => Result;\n    /**\n     * Visit a parse tree produced by the `showProfile`\n     * labeled alternative in `MySqlParser.showStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitShowProfile?: (ctx: ShowProfileContext) => Result;\n    /**\n     * Visit a parse tree produced by the `showSlaveStatus`\n     * labeled alternative in `MySqlParser.showStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitShowSlaveStatus?: (ctx: ShowSlaveStatusContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.variableClause`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitVariableClause?: (ctx: VariableClauseContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.showCommonEntity`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitShowCommonEntity?: (ctx: ShowCommonEntityContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.showFilter`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitShowFilter?: (ctx: ShowFilterContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.showGlobalInfoClause`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitShowGlobalInfoClause?: (ctx: ShowGlobalInfoClauseContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.showSchemaEntity`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitShowSchemaEntity?: (ctx: ShowSchemaEntityContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.showProfileType`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitShowProfileType?: (ctx: ShowProfileTypeContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.binlogStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitBinlogStatement?: (ctx: BinlogStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.cacheIndexStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitCacheIndexStatement?: (ctx: CacheIndexStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.flushStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitFlushStatement?: (ctx: FlushStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.killStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitKillStatement?: (ctx: KillStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.loadIndexIntoCache`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitLoadIndexIntoCache?: (ctx: LoadIndexIntoCacheContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.resetStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitResetStatement?: (ctx: ResetStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.shutdownStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitShutdownStatement?: (ctx: ShutdownStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.tableIndexes`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitTableIndexes?: (ctx: TableIndexesContext) => Result;\n    /**\n     * Visit a parse tree produced by the `simpleFlushOption`\n     * labeled alternative in `MySqlParser.flushOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitSimpleFlushOption?: (ctx: SimpleFlushOptionContext) => Result;\n    /**\n     * Visit a parse tree produced by the `channelFlushOption`\n     * labeled alternative in `MySqlParser.flushOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitChannelFlushOption?: (ctx: ChannelFlushOptionContext) => Result;\n    /**\n     * Visit a parse tree produced by the `tableFlushOption`\n     * labeled alternative in `MySqlParser.flushOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitTableFlushOption?: (ctx: TableFlushOptionContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.flushTableOption`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitFlushTableOption?: (ctx: FlushTableOptionContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.loadedTableIndexes`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitLoadedTableIndexes?: (ctx: LoadedTableIndexesContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.simpleDescribeStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitSimpleDescribeStatement?: (ctx: SimpleDescribeStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.fullDescribeStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitFullDescribeStatement?: (ctx: FullDescribeStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.helpStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitHelpStatement?: (ctx: HelpStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.useStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitUseStatement?: (ctx: UseStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.signalStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitSignalStatement?: (ctx: SignalStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.resignalStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitResignalStatement?: (ctx: ResignalStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.signalConditionInformation`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitSignalConditionInformation?: (ctx: SignalConditionInformationContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.withStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitWithStatement?: (ctx: WithStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.tableStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitTableStatement?: (ctx: TableStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.diagnosticsStatement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitDiagnosticsStatement?: (ctx: DiagnosticsStatementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.diagnosticsConditionInformationName`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitDiagnosticsConditionInformationName?: (ctx: DiagnosticsConditionInformationNameContext) => Result;\n    /**\n     * Visit a parse tree produced by the `describeStatements`\n     * labeled alternative in `MySqlParser.describeObjectClause`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitDescribeStatements?: (ctx: DescribeStatementsContext) => Result;\n    /**\n     * Visit a parse tree produced by the `describeConnection`\n     * labeled alternative in `MySqlParser.describeObjectClause`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitDescribeConnection?: (ctx: DescribeConnectionContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.fullId`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitFullId?: (ctx: FullIdContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.tableName`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitTableName?: (ctx: TableNameContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.roleName`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitRoleName?: (ctx: RoleNameContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.fullColumnName`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitFullColumnName?: (ctx: FullColumnNameContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.indexColumnName`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitIndexColumnName?: (ctx: IndexColumnNameContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.simpleUserName`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitSimpleUserName?: (ctx: SimpleUserNameContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.hostName`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitHostName?: (ctx: HostNameContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.userName`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitUserName?: (ctx: UserNameContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.mysqlVariable`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitMysqlVariable?: (ctx: MysqlVariableContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.charsetName`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitCharsetName?: (ctx: CharsetNameContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.collationName`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitCollationName?: (ctx: CollationNameContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.engineName`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitEngineName?: (ctx: EngineNameContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.engineNameBase`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitEngineNameBase?: (ctx: EngineNameBaseContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.uuidSet`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitUuidSet?: (ctx: UuidSetContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.xid`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitXid?: (ctx: XidContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.xuidStringId`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitXuidStringId?: (ctx: XuidStringIdContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.authPlugin`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAuthPlugin?: (ctx: AuthPluginContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.uid`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitUid?: (ctx: UidContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.simpleId`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitSimpleId?: (ctx: SimpleIdContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.dottedId`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitDottedId?: (ctx: DottedIdContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.decimalLiteral`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitDecimalLiteral?: (ctx: DecimalLiteralContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.fileSizeLiteral`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitFileSizeLiteral?: (ctx: FileSizeLiteralContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.stringLiteral`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitStringLiteral?: (ctx: StringLiteralContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.booleanLiteral`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitBooleanLiteral?: (ctx: BooleanLiteralContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.hexadecimalLiteral`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitHexadecimalLiteral?: (ctx: HexadecimalLiteralContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.nullNotnull`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitNullNotnull?: (ctx: NullNotnullContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.constant`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitConstant?: (ctx: ConstantContext) => Result;\n    /**\n     * Visit a parse tree produced by the `stringDataType`\n     * labeled alternative in `MySqlParser.dataType`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitStringDataType?: (ctx: StringDataTypeContext) => Result;\n    /**\n     * Visit a parse tree produced by the `nationalVaryingStringDataType`\n     * labeled alternative in `MySqlParser.dataType`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitNationalVaryingStringDataType?: (ctx: NationalVaryingStringDataTypeContext) => Result;\n    /**\n     * Visit a parse tree produced by the `nationalStringDataType`\n     * labeled alternative in `MySqlParser.dataType`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitNationalStringDataType?: (ctx: NationalStringDataTypeContext) => Result;\n    /**\n     * Visit a parse tree produced by the `dimensionDataType`\n     * labeled alternative in `MySqlParser.dataType`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitDimensionDataType?: (ctx: DimensionDataTypeContext) => Result;\n    /**\n     * Visit a parse tree produced by the `simpleDataType`\n     * labeled alternative in `MySqlParser.dataType`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitSimpleDataType?: (ctx: SimpleDataTypeContext) => Result;\n    /**\n     * Visit a parse tree produced by the `collectionDataType`\n     * labeled alternative in `MySqlParser.dataType`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitCollectionDataType?: (ctx: CollectionDataTypeContext) => Result;\n    /**\n     * Visit a parse tree produced by the `spatialDataType`\n     * labeled alternative in `MySqlParser.dataType`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitSpatialDataType?: (ctx: SpatialDataTypeContext) => Result;\n    /**\n     * Visit a parse tree produced by the `longVarcharDataType`\n     * labeled alternative in `MySqlParser.dataType`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitLongVarcharDataType?: (ctx: LongVarcharDataTypeContext) => Result;\n    /**\n     * Visit a parse tree produced by the `longVarbinaryDataType`\n     * labeled alternative in `MySqlParser.dataType`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitLongVarbinaryDataType?: (ctx: LongVarbinaryDataTypeContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.collectionOptions`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitCollectionOptions?: (ctx: CollectionOptionsContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.convertedDataType`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitConvertedDataType?: (ctx: ConvertedDataTypeContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.lengthOneDimension`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitLengthOneDimension?: (ctx: LengthOneDimensionContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.lengthTwoDimension`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitLengthTwoDimension?: (ctx: LengthTwoDimensionContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.lengthTwoOptionalDimension`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitLengthTwoOptionalDimension?: (ctx: LengthTwoOptionalDimensionContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.uidList`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitUidList?: (ctx: UidListContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.fullColumnNameList`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitFullColumnNameList?: (ctx: FullColumnNameListContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.tables`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitTables?: (ctx: TablesContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.indexColumnNames`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitIndexColumnNames?: (ctx: IndexColumnNamesContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.expressions`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitExpressions?: (ctx: ExpressionsContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.expressionsWithDefaults`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitExpressionsWithDefaults?: (ctx: ExpressionsWithDefaultsContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.constants`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitConstants?: (ctx: ConstantsContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.simpleStrings`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitSimpleStrings?: (ctx: SimpleStringsContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.userVariables`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitUserVariables?: (ctx: UserVariablesContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.defaultValue`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitDefaultValue?: (ctx: DefaultValueContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.currentTimestamp`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitCurrentTimestamp?: (ctx: CurrentTimestampContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.expressionOrDefault`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitExpressionOrDefault?: (ctx: ExpressionOrDefaultContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.ifExists`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitIfExists?: (ctx: IfExistsContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.ifNotExists`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitIfNotExists?: (ctx: IfNotExistsContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.orReplace`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitOrReplace?: (ctx: OrReplaceContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.waitNowaitClause`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitWaitNowaitClause?: (ctx: WaitNowaitClauseContext) => Result;\n    /**\n     * Visit a parse tree produced by the `specificFunctionCall`\n     * labeled alternative in `MySqlParser.functionCall`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitSpecificFunctionCall?: (ctx: SpecificFunctionCallContext) => Result;\n    /**\n     * Visit a parse tree produced by the `aggregateFunctionCall`\n     * labeled alternative in `MySqlParser.functionCall`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAggregateFunctionCall?: (ctx: AggregateFunctionCallContext) => Result;\n    /**\n     * Visit a parse tree produced by the `nonAggregateFunctionCall`\n     * labeled alternative in `MySqlParser.functionCall`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitNonAggregateFunctionCall?: (ctx: NonAggregateFunctionCallContext) => Result;\n    /**\n     * Visit a parse tree produced by the `scalarFunctionCall`\n     * labeled alternative in `MySqlParser.functionCall`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitScalarFunctionCall?: (ctx: ScalarFunctionCallContext) => Result;\n    /**\n     * Visit a parse tree produced by the `udfFunctionCall`\n     * labeled alternative in `MySqlParser.functionCall`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitUdfFunctionCall?: (ctx: UdfFunctionCallContext) => Result;\n    /**\n     * Visit a parse tree produced by the `passwordFunctionCall`\n     * labeled alternative in `MySqlParser.functionCall`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitPasswordFunctionCall?: (ctx: PasswordFunctionCallContext) => Result;\n    /**\n     * Visit a parse tree produced by the `simpleFunctionCall`\n     * labeled alternative in `MySqlParser.specificFunction`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitSimpleFunctionCall?: (ctx: SimpleFunctionCallContext) => Result;\n    /**\n     * Visit a parse tree produced by the `currentUser`\n     * labeled alternative in `MySqlParser.specificFunction`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitCurrentUser?: (ctx: CurrentUserContext) => Result;\n    /**\n     * Visit a parse tree produced by the `dataTypeFunctionCall`\n     * labeled alternative in `MySqlParser.specificFunction`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitDataTypeFunctionCall?: (ctx: DataTypeFunctionCallContext) => Result;\n    /**\n     * Visit a parse tree produced by the `valuesFunctionCall`\n     * labeled alternative in `MySqlParser.specificFunction`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitValuesFunctionCall?: (ctx: ValuesFunctionCallContext) => Result;\n    /**\n     * Visit a parse tree produced by the `caseExpressionFunctionCall`\n     * labeled alternative in `MySqlParser.specificFunction`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitCaseExpressionFunctionCall?: (ctx: CaseExpressionFunctionCallContext) => Result;\n    /**\n     * Visit a parse tree produced by the `caseFunctionCall`\n     * labeled alternative in `MySqlParser.specificFunction`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitCaseFunctionCall?: (ctx: CaseFunctionCallContext) => Result;\n    /**\n     * Visit a parse tree produced by the `charFunctionCall`\n     * labeled alternative in `MySqlParser.specificFunction`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitCharFunctionCall?: (ctx: CharFunctionCallContext) => Result;\n    /**\n     * Visit a parse tree produced by the `positionFunctionCall`\n     * labeled alternative in `MySqlParser.specificFunction`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitPositionFunctionCall?: (ctx: PositionFunctionCallContext) => Result;\n    /**\n     * Visit a parse tree produced by the `substrFunctionCall`\n     * labeled alternative in `MySqlParser.specificFunction`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitSubstrFunctionCall?: (ctx: SubstrFunctionCallContext) => Result;\n    /**\n     * Visit a parse tree produced by the `trimFunctionCall`\n     * labeled alternative in `MySqlParser.specificFunction`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitTrimFunctionCall?: (ctx: TrimFunctionCallContext) => Result;\n    /**\n     * Visit a parse tree produced by the `weightFunctionCall`\n     * labeled alternative in `MySqlParser.specificFunction`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitWeightFunctionCall?: (ctx: WeightFunctionCallContext) => Result;\n    /**\n     * Visit a parse tree produced by the `extractFunctionCall`\n     * labeled alternative in `MySqlParser.specificFunction`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitExtractFunctionCall?: (ctx: ExtractFunctionCallContext) => Result;\n    /**\n     * Visit a parse tree produced by the `getFormatFunctionCall`\n     * labeled alternative in `MySqlParser.specificFunction`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitGetFormatFunctionCall?: (ctx: GetFormatFunctionCallContext) => Result;\n    /**\n     * Visit a parse tree produced by the `jsonValueFunctionCall`\n     * labeled alternative in `MySqlParser.specificFunction`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitJsonValueFunctionCall?: (ctx: JsonValueFunctionCallContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.caseFuncAlternative`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitCaseFuncAlternative?: (ctx: CaseFuncAlternativeContext) => Result;\n    /**\n     * Visit a parse tree produced by the `levelWeightList`\n     * labeled alternative in `MySqlParser.levelsInWeightString`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitLevelWeightList?: (ctx: LevelWeightListContext) => Result;\n    /**\n     * Visit a parse tree produced by the `levelWeightRange`\n     * labeled alternative in `MySqlParser.levelsInWeightString`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitLevelWeightRange?: (ctx: LevelWeightRangeContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.levelInWeightListElement`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitLevelInWeightListElement?: (ctx: LevelInWeightListElementContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.aggregateWindowedFunction`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAggregateWindowedFunction?: (ctx: AggregateWindowedFunctionContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.nonAggregateWindowedFunction`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitNonAggregateWindowedFunction?: (ctx: NonAggregateWindowedFunctionContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.overClause`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitOverClause?: (ctx: OverClauseContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.windowSpec`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitWindowSpec?: (ctx: WindowSpecContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.windowName`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitWindowName?: (ctx: WindowNameContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.frameClause`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitFrameClause?: (ctx: FrameClauseContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.frameUnits`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitFrameUnits?: (ctx: FrameUnitsContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.frameExtent`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitFrameExtent?: (ctx: FrameExtentContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.frameBetween`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitFrameBetween?: (ctx: FrameBetweenContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.frameRange`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitFrameRange?: (ctx: FrameRangeContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.partitionClause`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitPartitionClause?: (ctx: PartitionClauseContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.scalarFunctionName`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitScalarFunctionName?: (ctx: ScalarFunctionNameContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.passwordFunctionClause`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitPasswordFunctionClause?: (ctx: PasswordFunctionClauseContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.functionArgs`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitFunctionArgs?: (ctx: FunctionArgsContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.functionArg`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitFunctionArg?: (ctx: FunctionArgContext) => Result;\n    /**\n     * Visit a parse tree produced by the `isExpression`\n     * labeled alternative in `MySqlParser.expression`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitIsExpression?: (ctx: IsExpressionContext) => Result;\n    /**\n     * Visit a parse tree produced by the `notExpression`\n     * labeled alternative in `MySqlParser.expression`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitNotExpression?: (ctx: NotExpressionContext) => Result;\n    /**\n     * Visit a parse tree produced by the `logicalExpression`\n     * labeled alternative in `MySqlParser.expression`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitLogicalExpression?: (ctx: LogicalExpressionContext) => Result;\n    /**\n     * Visit a parse tree produced by the `predicateExpression`\n     * labeled alternative in `MySqlParser.expression`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitPredicateExpression?: (ctx: PredicateExpressionContext) => Result;\n    /**\n     * Visit a parse tree produced by the `soundsLikePredicate`\n     * labeled alternative in `MySqlParser.predicate`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitSoundsLikePredicate?: (ctx: SoundsLikePredicateContext) => Result;\n    /**\n     * Visit a parse tree produced by the `expressionAtomPredicate`\n     * labeled alternative in `MySqlParser.predicate`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitExpressionAtomPredicate?: (ctx: ExpressionAtomPredicateContext) => Result;\n    /**\n     * Visit a parse tree produced by the `subqueryComparisonPredicate`\n     * labeled alternative in `MySqlParser.predicate`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitSubqueryComparisonPredicate?: (ctx: SubqueryComparisonPredicateContext) => Result;\n    /**\n     * Visit a parse tree produced by the `jsonMemberOfPredicate`\n     * labeled alternative in `MySqlParser.predicate`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitJsonMemberOfPredicate?: (ctx: JsonMemberOfPredicateContext) => Result;\n    /**\n     * Visit a parse tree produced by the `binaryComparisonPredicate`\n     * labeled alternative in `MySqlParser.predicate`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitBinaryComparisonPredicate?: (ctx: BinaryComparisonPredicateContext) => Result;\n    /**\n     * Visit a parse tree produced by the `inPredicate`\n     * labeled alternative in `MySqlParser.predicate`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitInPredicate?: (ctx: InPredicateContext) => Result;\n    /**\n     * Visit a parse tree produced by the `betweenPredicate`\n     * labeled alternative in `MySqlParser.predicate`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitBetweenPredicate?: (ctx: BetweenPredicateContext) => Result;\n    /**\n     * Visit a parse tree produced by the `isNullPredicate`\n     * labeled alternative in `MySqlParser.predicate`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitIsNullPredicate?: (ctx: IsNullPredicateContext) => Result;\n    /**\n     * Visit a parse tree produced by the `likePredicate`\n     * labeled alternative in `MySqlParser.predicate`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitLikePredicate?: (ctx: LikePredicateContext) => Result;\n    /**\n     * Visit a parse tree produced by the `regexpPredicate`\n     * labeled alternative in `MySqlParser.predicate`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitRegexpPredicate?: (ctx: RegexpPredicateContext) => Result;\n    /**\n     * Visit a parse tree produced by the `unaryExpressionAtom`\n     * labeled alternative in `MySqlParser.expressionAtom`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitUnaryExpressionAtom?: (ctx: UnaryExpressionAtomContext) => Result;\n    /**\n     * Visit a parse tree produced by the `collateExpressionAtom`\n     * labeled alternative in `MySqlParser.expressionAtom`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitCollateExpressionAtom?: (ctx: CollateExpressionAtomContext) => Result;\n    /**\n     * Visit a parse tree produced by the `variableAssignExpressionAtom`\n     * labeled alternative in `MySqlParser.expressionAtom`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitVariableAssignExpressionAtom?: (ctx: VariableAssignExpressionAtomContext) => Result;\n    /**\n     * Visit a parse tree produced by the `mysqlVariableExpressionAtom`\n     * labeled alternative in `MySqlParser.expressionAtom`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitMysqlVariableExpressionAtom?: (ctx: MysqlVariableExpressionAtomContext) => Result;\n    /**\n     * Visit a parse tree produced by the `nestedExpressionAtom`\n     * labeled alternative in `MySqlParser.expressionAtom`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitNestedExpressionAtom?: (ctx: NestedExpressionAtomContext) => Result;\n    /**\n     * Visit a parse tree produced by the `nestedRowExpressionAtom`\n     * labeled alternative in `MySqlParser.expressionAtom`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitNestedRowExpressionAtom?: (ctx: NestedRowExpressionAtomContext) => Result;\n    /**\n     * Visit a parse tree produced by the `mathExpressionAtom`\n     * labeled alternative in `MySqlParser.expressionAtom`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitMathExpressionAtom?: (ctx: MathExpressionAtomContext) => Result;\n    /**\n     * Visit a parse tree produced by the `existsExpressionAtom`\n     * labeled alternative in `MySqlParser.expressionAtom`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitExistsExpressionAtom?: (ctx: ExistsExpressionAtomContext) => Result;\n    /**\n     * Visit a parse tree produced by the `intervalExpressionAtom`\n     * labeled alternative in `MySqlParser.expressionAtom`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitIntervalExpressionAtom?: (ctx: IntervalExpressionAtomContext) => Result;\n    /**\n     * Visit a parse tree produced by the `jsonExpressionAtom`\n     * labeled alternative in `MySqlParser.expressionAtom`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitJsonExpressionAtom?: (ctx: JsonExpressionAtomContext) => Result;\n    /**\n     * Visit a parse tree produced by the `subqueryExpressionAtom`\n     * labeled alternative in `MySqlParser.expressionAtom`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitSubqueryExpressionAtom?: (ctx: SubqueryExpressionAtomContext) => Result;\n    /**\n     * Visit a parse tree produced by the `constantExpressionAtom`\n     * labeled alternative in `MySqlParser.expressionAtom`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitConstantExpressionAtom?: (ctx: ConstantExpressionAtomContext) => Result;\n    /**\n     * Visit a parse tree produced by the `functionCallExpressionAtom`\n     * labeled alternative in `MySqlParser.expressionAtom`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitFunctionCallExpressionAtom?: (ctx: FunctionCallExpressionAtomContext) => Result;\n    /**\n     * Visit a parse tree produced by the `binaryExpressionAtom`\n     * labeled alternative in `MySqlParser.expressionAtom`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitBinaryExpressionAtom?: (ctx: BinaryExpressionAtomContext) => Result;\n    /**\n     * Visit a parse tree produced by the `fullColumnNameExpressionAtom`\n     * labeled alternative in `MySqlParser.expressionAtom`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitFullColumnNameExpressionAtom?: (ctx: FullColumnNameExpressionAtomContext) => Result;\n    /**\n     * Visit a parse tree produced by the `bitExpressionAtom`\n     * labeled alternative in `MySqlParser.expressionAtom`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitBitExpressionAtom?: (ctx: BitExpressionAtomContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.unaryOperator`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitUnaryOperator?: (ctx: UnaryOperatorContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.comparisonOperator`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitComparisonOperator?: (ctx: ComparisonOperatorContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.logicalOperator`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitLogicalOperator?: (ctx: LogicalOperatorContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.bitOperator`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitBitOperator?: (ctx: BitOperatorContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.multOperator`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitMultOperator?: (ctx: MultOperatorContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.addOperator`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitAddOperator?: (ctx: AddOperatorContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.jsonOperator`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitJsonOperator?: (ctx: JsonOperatorContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.charsetNameBase`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitCharsetNameBase?: (ctx: CharsetNameBaseContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.transactionLevelBase`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitTransactionLevelBase?: (ctx: TransactionLevelBaseContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.privilegesBase`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitPrivilegesBase?: (ctx: PrivilegesBaseContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.intervalTypeBase`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitIntervalTypeBase?: (ctx: IntervalTypeBaseContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.dataTypeBase`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitDataTypeBase?: (ctx: DataTypeBaseContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.keywordsCanBeId`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitKeywordsCanBeId?: (ctx: KeywordsCanBeIdContext) => Result;\n    /**\n     * Visit a parse tree produced by `MySqlParser.functionNameBase`.\n     * @param ctx the parse tree\n     * @return the visitor result\n     */\n    visitFunctionNameBase?: (ctx: FunctionNameBaseContext) => Result;\n}\n\n"]}