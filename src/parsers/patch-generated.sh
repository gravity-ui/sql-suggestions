DIALECT=$1
SECOND_ARG=$2

# Check that dialect is correct
if [ "$DIALECT" != "mysql" ] && [ "$DIALECT" != "postgresql" ] && [ "$DIALECT" != "clickhouse" ]
then
  echo "dialect '$DIALECT' is not supported"
  exit 0
fi

# Select the correct file prefix
if [ "$DIALECT" == "mysql" ]
then
  FILE_PREFIX=src/parsers/$DIALECT/generated/MySql
elif [ "$DIALECT" == "postgresql" ]
then
  FILE_PREFIX=src/parsers/$DIALECT/generated/PostgreSql
else
  FILE_PREFIX=src/parsers/$DIALECT/generated/ClickHouse
fi

HEADER="////////////////////////////////////////////////////////
// THIS FILE IS AUTOGENERATED, DON'T EDIT IT MANUALLY //
////////////////////////////////////////////////////////\n\n// We don't really want to check types in generated code\n// @ts-nocheck"

declare -a FILES_TO_PATCH=(
  ${FILE_PREFIX}Lexer.ts
  ${FILE_PREFIX}Parser.ts
  ${FILE_PREFIX}ParserVisitor.ts
)

echo "Patching ${DIALECT} generated files"

for FILE in "${FILES_TO_PATCH[@]}"
do
  # Add header
  ECHO_TEXT=$HEADER

  # Add extra postgresql patches if asked
  if ! [ -z "$SECOND_ARG" ] && [ $SECOND_ARG = "--extra-postgresql-patches" ]
  then
    ECHO_TEXT="$ECHO_TEXT\n\nimport PostgreSqlParserBase from '../grammar/PostgreSqlParserBase.js';"
    ECHO_TEXT="$ECHO_TEXT\nimport PostgreSqlLexerBase from '../grammar/PostgreSqlLexerBase.js';"
  fi

  # Add file contents
  ECHO_TEXT="$ECHO_TEXT\n\n$(cat $FILE)"

  echo -e "$ECHO_TEXT" > $FILE
  echo -e "- patched $FILE"
done

echo -e "Successfully patched everything\n"