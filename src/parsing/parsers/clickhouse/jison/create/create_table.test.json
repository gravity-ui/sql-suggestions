[
  {
    "namePrefix": "should suggest keywords",
    "beforeCursor": "CREATE ",
    "afterCursor": "",
    "containsKeywords": ["TABLE"],
    "expectedResult": {
      "lowerCase": false
    }
  },
  {
    "namePrefix": "should suggest keywords",
    "beforeCursor": "CREATE TABLE ",
    "afterCursor": "",
    "expectedResult": {
      "lowerCase": false,
      "suggestKeywords": ["IF NOT EXISTS"]
    }
  },
  {
    "namePrefix": "should suggest keywords",
    "beforeCursor": "CREATE TABLE IF ",
    "afterCursor": "",
    "expectedResult": {
      "lowerCase": false,
      "suggestKeywords": ["NOT EXISTS"]
    }
  },
  {
    "namePrefix": "should suggest keywords",
    "beforeCursor": "CREATE TABLE IF NOT ",
    "afterCursor": "",
    "expectedResult": {
      "lowerCase": false,
      "suggestKeywords": ["EXISTS"]
    }
  },
  {
    "namePrefix": "should not report errors",
    "beforeCursor": "CREATE TABLE foo (id INT);",
    "afterCursor": "",
    "containsKeywords": ["SELECT"],
    "expectedResult": {
      "lowerCase": false
    }
  },
  {
    "namePrefix": "should suggest keywords",
    "beforeCursor": "CREATE TABLE foo (id ",
    "afterCursor": "",
    "containsKeywords": ["DOUBLE"],
    "expectedResult": {
      "lowerCase": false
    }
  },
  {
    "namePrefix": "should suggest keywords",
    "beforeCursor": "CREATE TABLE foo (id INT, `some` FLOAT, bar ",
    "afterCursor": "",
    "containsKeywords": ["DOUBLE"],
    "expectedResult": {
      "lowerCase": false
    }
  },
  {
    "namePrefix": "should suggest ENGINE keyword",
    "beforeCursor": "CREATE TABLE foo (id INT, `some` FLOAT) ",
    "afterCursor": "",
    "containsKeywords": ["ENGINE"],
    "expectedResult": {
      "lowerCase": false
    }
  },
  {
    "namePrefix": "should suggest equal symbol keyword",
    "beforeCursor": "CREATE TABLE foo (id INT, `some` FLOAT) ENGINE ",
    "afterCursor": "",
    "containsKeywords": ["="],
    "expectedResult": {
      "lowerCase": false
    }
  },
  {
    "namePrefix": "should suggest engines",
    "beforeCursor": "CREATE TABLE foo (id INT, `some` FLOAT) ENGINE = ",
    "afterCursor": "",
    "expectedResult": {
      "lowerCase": false,
      "suggestEngines": {
        "engines": ["Null", "Set", "Log", "Memory", "TinyLog", "StripeLog"],
        "functionalEngines": [
          "MergeTree()",
          "Merge()",
          "ReplacingMergeTree()",
          "CollapsingMergeTree()",
          "AggregatingMergeTree()",
          "Buffer()",
          "Dictionary()",
          "Distributed()",
          "File()",
          "GraphiteMergeTree()",
          "Join()",
          "Kafka()",
          "MySQL()",
          "URL()",
          "ReplicatedAggregatingMergeTree()",
          "ReplicatedCollapsingMergeTree()",
          "ReplicatedGraphiteMergeTree()",
          "ReplicatedMergeTree()",
          "ReplicatedReplacingMergeTree()",
          "ReplicatedSummingMergeTree()",
          "ReplicatedVersionedCollapsingMergeTree()",
          "SummingMergeTree()",
          "VersionedCollapsingMergeTree()",
          "PostgreSQL()"
        ]
      }
    }
  },
  {
    "namePrefix": "should not throw errors",
    "beforeCursor": "CREATE TABLE foo (id INT, `some` FLOAT) ENGINE = Memory; ",
    "afterCursor": "",
    "noErrors": true,
    "containsKeywords": ["SELECT"],
    "expectedResult": {
      "lowerCase": false
    }
  },
  {
    "namePrefix": "should throw error",
    "beforeCursor": "CREATE TABLE foo (id INT, `some` FLOAT); ",
    "afterCursor": "",
    "noErrors": false,
    "containsKeywords": ["SELECT"],
    "expectedErrors": [
      {
        "text": ";",
        "token": ";",
        "line": 0,
        "loc": {"first_line": 1, "last_line": 1, "first_column": 39, "last_column": 40}
      }
    ],
    "expectedResult": {
      "lowerCase": false
    }
  },
  {
    "namePrefix": "should not throw error",
    "beforeCursor": "CREATE TABLE foo (id INT, `some` FLOAT) ENGINE = ReplacingMergeTree(update_ts); ",
    "afterCursor": "",
    "noErrors": true,
    "containsKeywords": ["SELECT"],
    "expectedResult": {
      "lowerCase": false
    }
  },
  {
    "namePrefix": "should throw error",
    "beforeCursor": "CREATE TABLE foo (id UInt32, `some` Float64) ENGINE = ReplacingMergeTree(update_ts, ) ",
    "afterCursor": "",
    "noErrors": false,
    "expectedErrors": [
      {
        "text": ")",
        "token": ")",
        "line": 0,
        "loc": {"first_line": 1, "last_line": 1, "first_column": 84, "last_column": 85}
      }
    ],
    "expectedResult": {
      "lowerCase": false
    }
  },
  {
    "namePrefix": "should accept Enum argument",
    "beforeCursor": "CREATE TABLE foo (id Enum8('string' = 1)) ENGINE = Memory; ",
    "afterCursor": "",
    "noErrors": true,
    "containsKeywords": ["SELECT"],
    "expectedResult": {
      "lowerCase": false
    }
  },
  {
    "namePrefix": "should accept Enum argument",
    "beforeCursor": "CREATE TABLE foo (id Enum8('string' = 1, 'string', 'string')) ENGINE = Memory; ",
    "afterCursor": "",
    "noErrors": true,
    "containsKeywords": ["SELECT"],
    "expectedResult": {
      "lowerCase": false
    }
  },
  {
    "namePrefix": "should accept simple aggregate function",
    "beforeCursor": "CREATE TABLE foo (id SimpleAggregateFunction(sum, String)) ENGINE = Memory; ",
    "afterCursor": "",
    "noErrors": true,
    "containsKeywords": ["SELECT"],
    "expectedResult": {
      "lowerCase": false
    }
  },
  {
    "namePrefix": "should accept Decimal64",
    "beforeCursor": "CREATE TABLE foo (id Decimal64(12)) ENGINE = Memory; ",
    "afterCursor": "",
    "noErrors": true,
    "containsKeywords": ["SELECT"],
    "expectedResult": {
      "lowerCase": false
    }
  },
  {
    "namePrefix": "should accept Decimal",
    "beforeCursor": "CREATE TABLE foo (id Decimal(12, 12)) ENGINE = Memory; ",
    "afterCursor": "",
    "noErrors": true,
    "containsKeywords": ["SELECT"],
    "expectedResult": {
      "lowerCase": false
    }
  },
  {
    "namePrefix": "should accept Nullable",
    "beforeCursor": "CREATE TABLE foo (id Nullable(Decimal(12, 12))) ENGINE = Memory; ",
    "afterCursor": "",
    "noErrors": true,
    "containsKeywords": ["SELECT"],
    "expectedResult": {
      "lowerCase": false
    }
  },
  {
    "namePrefix": "should accept aggregate function",
    "beforeCursor": "CREATE TABLE foo (id AggregateFunction(sum, String)) ENGINE = Memory; ",
    "afterCursor": "",
    "noErrors": true,
    "containsKeywords": ["SELECT"],
    "expectedResult": {
      "lowerCase": false
    }
  },
  {
    "namePrefix": "should accept date time",
    "beforeCursor": "CREATE TABLE foo (id DateTime('Some/Timezone')) ENGINE = Memory; ",
    "afterCursor": "",
    "noErrors": true,
    "containsKeywords": ["SELECT"],
    "expectedResult": {
      "lowerCase": false
    }
  },
  {
    "namePrefix": "should accept date time",
    "beforeCursor": "CREATE TABLE foo (id Tuple(s String, i Int64)) ENGINE = Memory; ",
    "afterCursor": "",
    "noErrors": true,
    "containsKeywords": ["SELECT"],
    "expectedResult": {
      "lowerCase": false
    }
  },
  {
    "namePrefix": "should accept date time",
    "beforeCursor": "CREATE TABLE foo (id Nested(id String, data Int64)) ENGINE = Memory; ",
    "afterCursor": "",
    "noErrors": true,
    "containsKeywords": ["SELECT"],
    "expectedResult": {
      "lowerCase": false
    }
  }
]
