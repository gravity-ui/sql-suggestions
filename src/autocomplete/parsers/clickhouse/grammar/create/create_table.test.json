[
  {
    "namePrefix": "should suggest keywords",
    "beforeCursor": "CREATE ",
    "afterCursor": "",
    "containsKeywords": ["TABLE"],
    "expectedResult": {
      "lowerCase": false
    }
  },
  {
    "namePrefix": "should suggest keywords",
    "beforeCursor": "CREATE TABLE ",
    "afterCursor": "",
    "expectedResult": {
      "lowerCase": false,
      "suggestKeywords": ["IF NOT EXISTS"]
    }
  },
  {
    "namePrefix": "should suggest keywords",
    "beforeCursor": "CREATE TABLE IF ",
    "afterCursor": "",
    "expectedResult": {
      "lowerCase": false,
      "suggestKeywords": ["NOT EXISTS"]
    }
  },
  {
    "namePrefix": "should suggest keywords",
    "beforeCursor": "CREATE TABLE IF NOT ",
    "afterCursor": "",
    "expectedResult": {
      "lowerCase": false,
      "suggestKeywords": ["EXISTS"]
    }
  },
  {
    "namePrefix": "should not report errors",
    "beforeCursor": "CREATE TABLE foo (id INT);",
    "afterCursor": "",
    "containsKeywords": ["SELECT"],
    "expectedResult": {
      "lowerCase": false
    }
  },
  {
    "namePrefix": "should suggest keywords",
    "beforeCursor": "CREATE TABLE foo (id ",
    "afterCursor": "",
    "containsKeywords": ["DOUBLE"],
    "expectedResult": {
      "lowerCase": false
    }
  },
  {
    "namePrefix": "should suggest keywords",
    "beforeCursor": "CREATE TABLE foo (id INT, `some` FLOAT, bar ",
    "afterCursor": "",
    "containsKeywords": ["DOUBLE"],
    "expectedResult": {
      "lowerCase": false
    }
  },
  {
    "namePrefix": "should suggest ENGINE keyword",
    "beforeCursor": "CREATE TABLE foo (id INT, `some` FLOAT) ",
    "afterCursor": "",
    "containsKeywords": ["ENGINE"],
    "expectedResult": {
      "lowerCase": false
    }
  },
  {
    "namePrefix": "should suggest equal symbol keyword",
    "beforeCursor": "CREATE TABLE foo (id INT, `some` FLOAT) ENGINE ",
    "afterCursor": "",
    "containsKeywords": ["="],
    "expectedResult": {
      "lowerCase": false
    }
  },
  {
    "namePrefix": "should suggest engines",
    "beforeCursor": "CREATE TABLE foo (id INT, `some` FLOAT) ENGINE = ",
    "afterCursor": "",
    "expectedResult": {
      "lowerCase": false,
      "suggestEngines": {
        "engines": ["Null", "Set", "Log", "Memory", "TinyLog", "StripeLog"],
        "functionalEngines": [
          "MergeTree()",
          "Merge()",
          "ReplacingMergeTree()",
          "CollapsingMergeTree()",
          "AggregatingMergeTree()",
          "Buffer()",
          "Dictionary()",
          "Distributed()",
          "File()",
          "GraphiteMergeTree()",
          "Join()",
          "Kafka()",
          "MySQL()",
          "URL()",
          "ReplicatedAggregatingMergeTree()",
          "ReplicatedCollapsingMergeTree()",
          "ReplicatedGraphiteMergeTree()",
          "ReplicatedMergeTree()",
          "ReplicatedReplacingMergeTree()",
          "ReplicatedSummingMergeTree()",
          "ReplicatedVersionedCollapsingMergeTree()",
          "SummingMergeTree()",
          "VersionedCollapsingMergeTree()",
          "PostgreSQL()"
        ]
      }
    }
  },
  {
    "namePrefix": "should not throw errors",
    "beforeCursor": "CREATE TABLE foo (id INT, `some` FLOAT) ENGINE = Memory; ",
    "afterCursor": "",
    "noErrors": true,
    "containsKeywords": ["SELECT"],
    "expectedResult": {
      "lowerCase": false
    }
  },
  {
    "namePrefix": "should throw error",
    "beforeCursor": "CREATE TABLE foo (id INT, `some` FLOAT); ",
    "afterCursor": "",
    "noErrors": false,
    "containsKeywords": ["SELECT"],
    "expectedErrors": [
      {
        "text": ";",
        "token": ";",
        "line": 0,
        "loc": {"first_line": 1, "last_line": 1, "first_column": 39, "last_column": 40}
      }
    ],
    "expectedResult": {
      "lowerCase": false
    }
  },
  {
    "namePrefix": "should not throw error",
    "beforeCursor": "CREATE TABLE foo (id INT, `some` FLOAT) ENGINE = ReplacingMergeTree(update_ts); ",
    "afterCursor": "",
    "noErrors": true,
    "containsKeywords": ["SELECT"],
    "expectedResult": {
      "lowerCase": false
    }
  },
  {
    "namePrefix": "should throw error",
    "beforeCursor": "CREATE TABLE foo (id UInt32, `some` Float64) ENGINE = ReplacingMergeTree(update_ts, ) ",
    "afterCursor": "",
    "noErrors": false,
    "expectedErrors": [
      {
        "text": ")",
        "token": ")",
        "line": 0,
        "loc": {"first_line": 1, "last_line": 1, "first_column": 84, "last_column": 85}
      }
    ],
    "expectedResult": {
      "lowerCase": false
    }
  },
  {
    "namePrefix": "should accept Enum argument",
    "beforeCursor": "CREATE TABLE foo (id Enum8('string' = 1)) ENGINE = Memory; ",
    "afterCursor": "",
    "noErrors": true,
    "containsKeywords": ["SELECT"],
    "expectedResult": {
      "lowerCase": false
    }
  },
  {
    "namePrefix": "should accept Enum argument",
    "beforeCursor": "CREATE TABLE foo (id Enum8('string' = 1, 'string', 'string')) ENGINE = Memory; ",
    "afterCursor": "",
    "noErrors": true,
    "containsKeywords": ["SELECT"],
    "expectedResult": {
      "lowerCase": false
    }
  },
  {
    "namePrefix": "should accept simple aggregate function",
    "beforeCursor": "CREATE TABLE foo (id SimpleAggregateFunction(sum, String)) ENGINE = Memory; ",
    "afterCursor": "",
    "noErrors": true,
    "containsKeywords": ["SELECT"],
    "expectedResult": {
      "lowerCase": false
    }
  },
  {
    "namePrefix": "should accept Decimal64",
    "beforeCursor": "CREATE TABLE foo (id Decimal64(12)) ENGINE = Memory; ",
    "afterCursor": "",
    "noErrors": true,
    "containsKeywords": ["SELECT"],
    "expectedResult": {
      "lowerCase": false
    }
  },
  {
    "namePrefix": "should accept Decimal",
    "beforeCursor": "CREATE TABLE foo (id Decimal(12, 12)) ENGINE = Memory; ",
    "afterCursor": "",
    "noErrors": true,
    "containsKeywords": ["SELECT"],
    "expectedResult": {
      "lowerCase": false
    }
  },
  {
    "namePrefix": "should accept Nullable",
    "beforeCursor": "CREATE TABLE foo (id Nullable(Decimal(12, 12))) ENGINE = Memory; ",
    "afterCursor": "",
    "noErrors": true,
    "containsKeywords": ["SELECT"],
    "expectedResult": {
      "lowerCase": false
    }
  },
  {
    "namePrefix": "should accept aggregate function",
    "beforeCursor": "CREATE TABLE foo (id AggregateFunction(sum, String)) ENGINE = Memory; ",
    "afterCursor": "",
    "noErrors": true,
    "containsKeywords": ["SELECT"],
    "expectedResult": {
      "lowerCase": false
    }
  },
  {
    "namePrefix": "should accept date time",
    "beforeCursor": "CREATE TABLE foo (id DateTime('Some/Timezone')) ENGINE = Memory; ",
    "afterCursor": "",
    "noErrors": true,
    "containsKeywords": ["SELECT"],
    "expectedResult": {
      "lowerCase": false
    }
  },
  {
    "namePrefix": "should accept date time",
    "beforeCursor": "CREATE TABLE foo (id Tuple(s String, i Int64)) ENGINE = Memory; ",
    "afterCursor": "",
    "noErrors": true,
    "containsKeywords": ["SELECT"],
    "expectedResult": {
      "lowerCase": false
    }
  },
  {
    "namePrefix": "should accept date time",
    "beforeCursor": "CREATE TABLE foo (id Nested(id String, data Int64)) ENGINE = Memory; ",
    "afterCursor": "",
    "noErrors": true,
    "containsKeywords": ["SELECT"],
    "expectedResult": {
      "lowerCase": false
    }
  },
  {
    "namePrefix": "should accept geo type",
    "beforeCursor": "CREATE TABLE foo (id Point) ENGINE = Memory; ",
    "afterCursor": "",
    "noErrors": true,
    "containsKeywords": ["SELECT"],
    "expectedResult": {
      "lowerCase": false
    }
  },
  {
    "namePrefix": "should accept geo type",
    "beforeCursor": "CREATE TABLE foo (id Ring) ENGINE = Memory; ",
    "afterCursor": "",
    "noErrors": true,
    "containsKeywords": ["SELECT"],
    "expectedResult": {
      "lowerCase": false
    }
  },
  {
    "namePrefix": "should accept geo type",
    "beforeCursor": "CREATE TABLE foo (id Polygon) ENGINE = Memory; ",
    "afterCursor": "",
    "noErrors": true,
    "containsKeywords": ["SELECT"],
    "expectedResult": {
      "lowerCase": false
    }
  },
  {
    "namePrefix": "should accept binary type",
    "beforeCursor": "CREATE TABLE foo (id BINARY(12)) ENGINE = Memory; ",
    "afterCursor": "",
    "noErrors": true,
    "containsKeywords": ["SELECT"],
    "expectedResult": {
      "lowerCase": false
    }
  },
  {
    "namePrefix": "should accept binary type",
    "beforeCursor": "CREATE TABLE foo (id BINARY(NULL)) ENGINE = Memory; ",
    "afterCursor": "",
    "noErrors": true,
    "containsKeywords": ["SELECT"],
    "expectedResult": {
      "lowerCase": false
    }
  },
  {
    "namePrefix": "should accept GeoType",
    "beforeCursor": "CREATE TABLE foo (id MultiPolygon) ENGINE = Memory; ",
    "afterCursor": "",
    "noErrors": true,
    "containsKeywords": ["SELECT"],
    "expectedResult": {
      "lowerCase": false
    }
  },
  {
    "namePrefix": "should accept LowCardinality type",
    "beforeCursor": "CREATE TABLE foo (id LowCardinality(String)) ENGINE = Memory; ",
    "afterCursor": "",
    "noErrors": true,
    "containsKeywords": ["SELECT"],
    "expectedResult": {
      "lowerCase": false
    }
  },
  {
    "namePrefix": "should accept Array type",
    "beforeCursor": "CREATE TABLE foo (id Array(Array(String))) ENGINE = Memory; ",
    "afterCursor": "",
    "noErrors": true,
    "containsKeywords": ["SELECT"],
    "expectedResult": {
      "lowerCase": false
    }
  },
  {
    "namePrefix": "should accept FixedString type",
    "beforeCursor": "CREATE TABLE foo (id FixedString(12)) ENGINE = Memory; ",
    "afterCursor": "",
    "noErrors": true,
    "containsKeywords": ["SELECT"],
    "expectedResult": {
      "lowerCase": false
    }
  },
  {
    "namePrefix": "should accept FixedString type",
    "beforeCursor": "CREATE TABLE foo (id FixedString) ENGINE = Memory; ",
    "afterCursor": "",
    "noErrors": true,
    "containsKeywords": ["SELECT"],
    "expectedResult": {
      "lowerCase": false
    }
  },
  {
    "namePrefix": "should accept TIMESTAMP type",
    "beforeCursor": "CREATE TABLE foo (id TIMESTAMP('data')) ENGINE = Memory; ",
    "afterCursor": "",
    "noErrors": true,
    "containsKeywords": ["SELECT"],
    "expectedResult": {
      "lowerCase": false
    }
  },
  {
    "namePrefix": "should accept TIMESTAMP type",
    "beforeCursor": "CREATE TABLE foo (id TIMESTAMP(NULL)) ENGINE = Memory; ",
    "afterCursor": "",
    "noErrors": true,
    "containsKeywords": ["SELECT"],
    "expectedResult": {
      "lowerCase": false
    }
  },
  {
    "namePrefix": "should accept all data types",
    "beforeCursor": "CREATE TABLE foo (field IPv6, field IPv4, field LowCardinality(String), field Decimal(1, 2), field String, field Decimal64(1), field Decimal32(1), field Decimal128(1), field Float64, field Float32, field Int64, field SimpleAggregateFunction(sum, String), field AggregateFunction(sum, String), field Array(String), field Array(Array(String)), field Nothing, field UInt16, field Enum16('text', 'text' = 1), field Enum16('text', 'text' = -1), field UInt32, field Date, field Int8, field Int32, field Enum8('text', 'text' = 1), field Enum8('text', 'text' = -1), field UInt64, field IntervalSecond, field Int16, field DateTime('Country/Timezone'), field Enum('text', 'text' = 1), field Enum('text', 'text' = -1), field Tuple(text1 String, text2 String), field IntervalMonth, field Nested(field String), field IntervalMinute, field IntervalHour, field IntervalWeek, field IntervalDay, field UInt8, field IntervalQuarter, field UUID, field IntervalYear, field LONGBLOB, field LONGBLOB(12), field MEDIUMBLOB, field MEDIUMBLOB(12), field TINYBLOB, field TINYBLOB(12), field BIGINT, field SMALLINT, field TIMESTAMP(NULL), field TIMESTAMP('value'), field INTEGER, field INT, field DOUBLE, field MEDIUMTEXT, field MEDIUMTEXT(12), field TINYINT, field DEC(1, 2), field BINARY(NULL), field BINARY(12), field FLOAT, field CHAR, field CHAR(12), field VARCHAR, field VARCHAR(12), field TEXT, field TINYTEXT, field TINYTEXT(12), field LONGTEXT, field LONGTEXT(12), field BLOB, field BLOB(12), field Point, field Ring, field Polygon, field MultiPolygon, field Map(String, String)) ENGINE = Memory; ",
    "afterCursor": "",
    "noErrors": true,
    "containsKeywords": ["SELECT"],
    "expectedResult": {
      "lowerCase": false
    }
  },
  {
    "namePrefix": "should suggest all data types",
    "beforeCursor": "CREATE TABLE foo (id ",
    "afterCursor": ") ENGINE = Memory; ",
    "noErrors": true,
    "containsKeywords": [
      "IPv6",
      "IPv4",
      "LowCardinality",
      "Decimal",
      "String",
      "Decimal64",
      "Decimal32",
      "Decimal128",
      "Float64",
      "Float32",
      "Int64",
      "SimpleAggregateFunction",
      "Array",
      "Nothing",
      "UInt16",
      "Enum16",
      "UInt32",
      "Date",
      "Int8",
      "Int32",
      "Enum8",
      "UInt64",
      "IntervalSecond",
      "Int16",
      "FixedString",
      "Nullable",
      "AggregateFunction",
      "DateTime",
      "Enum",
      "Tuple",
      "IntervalMonth",
      "Nested",
      "IntervalMinute",
      "IntervalHour",
      "IntervalWeek",
      "IntervalDay",
      "UInt8",
      "IntervalQuarter",
      "UUID",
      "IntervalYear",
      "LONGBLOB",
      "MEDIUMBLOB",
      "TINYBLOB",
      "BIGINT",
      "SMALLINT",
      "TIMESTAMP",
      "INTEGER",
      "INT",
      "DOUBLE",
      "MEDIUMTEXT",
      "TINYINT",
      "DEC",
      "BINARY",
      "FLOAT",
      "CHAR",
      "VARCHAR",
      "TEXT",
      "TINYTEXT",
      "LONGTEXT",
      "BLOB",
      "Point",
      "Ring",
      "Polygon",
      "MultiPolygon"
    ],
    "expectedResult": {
      "lowerCase": false
    }
  }
]
