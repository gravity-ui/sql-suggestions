////////////////////////////////////////////////////////
// THIS FILE IS AUTOGENERATED, DON'T EDIT IT MANUALLY //
////////////////////////////////////////////////////////

// We don't really want to check types in generated code
// @ts-nocheck



// Generated from src/autocomplete/databases/redis/grammar/RedisLexer.g4 by ANTLR 4.13.1

import * as antlr from "antlr4ng";
import { Token } from "antlr4ng";


export class RedisLexer extends antlr.Lexer {
    public static readonly SPACE = 1;
    public static readonly NEWLINE = 2;
    public static readonly COPY = 3;
    public static readonly DB = 4;
    public static readonly REPLACE = 5;
    public static readonly DEL = 6;
    public static readonly UNLINK = 7;
    public static readonly DUMP = 8;
    public static readonly EXISTS = 9;
    public static readonly EXPIRE = 10;
    public static readonly GT = 11;
    public static readonly LT = 12;
    public static readonly NX = 13;
    public static readonly XX = 14;
    public static readonly EXPIREAT = 15;
    public static readonly EXPIRETIME = 16;
    public static readonly PEXPIRE = 17;
    public static readonly PEXPIREAT = 18;
    public static readonly PEXPIRETIME = 19;
    public static readonly KEYS = 20;
    public static readonly MOVE = 21;
    public static readonly OBJECT = 22;
    public static readonly ENCODING = 23;
    public static readonly FREQ = 24;
    public static readonly IDLETIME = 25;
    public static readonly REFCOUNT = 26;
    public static readonly PERSIST = 27;
    public static readonly TTL = 28;
    public static readonly PTTL = 29;
    public static readonly RANDOMKEY = 30;
    public static readonly RENAME = 31;
    public static readonly RENAMENX = 32;
    public static readonly SCAN = 33;
    public static readonly MATCH = 34;
    public static readonly COUNT = 35;
    public static readonly TYPE = 36;
    public static readonly TOUCH = 37;
    public static readonly WAIT = 38;
    public static readonly LEFT = 39;
    public static readonly RIGHT = 40;
    public static readonly BEFORE = 41;
    public static readonly AFTER = 42;
    public static readonly RANK = 43;
    public static readonly MAXLEN = 44;
    public static readonly SET = 45;
    public static readonly GET = 46;
    public static readonly INCR = 47;
    public static readonly INCRBY = 48;
    public static readonly DECR = 49;
    public static readonly DECRBY = 50;
    public static readonly EX = 51;
    public static readonly PX = 52;
    public static readonly EXAT = 53;
    public static readonly PXAT = 54;
    public static readonly KEEPTTL = 55;
    public static readonly APPEND = 56;
    public static readonly GETDEL = 57;
    public static readonly GETEX = 58;
    public static readonly GETRANGE = 59;
    public static readonly GETSET = 60;
    public static readonly MGET = 61;
    public static readonly MSET = 62;
    public static readonly MSETNX = 63;
    public static readonly PSETEX = 64;
    public static readonly SETEX = 65;
    public static readonly SETNX = 66;
    public static readonly SETRANGE = 67;
    public static readonly STRLEN = 68;
    public static readonly SUBSTR = 69;
    public static readonly LMOVE = 70;
    public static readonly BLMOVE = 71;
    public static readonly LMPOP = 72;
    public static readonly BLMPOP = 73;
    public static readonly LPOP = 74;
    public static readonly BLPOP = 75;
    public static readonly RPOP = 76;
    public static readonly BRPOP = 77;
    public static readonly RPOPLPUSH = 78;
    public static readonly BRPOPLPUSH = 79;
    public static readonly LINDEX = 80;
    public static readonly LINSERT = 81;
    public static readonly LLEN = 82;
    public static readonly LPOS = 83;
    public static readonly LPUSH = 84;
    public static readonly LPUSHX = 85;
    public static readonly RPUSH = 86;
    public static readonly RPUSHX = 87;
    public static readonly LRANGE = 88;
    public static readonly LREM = 89;
    public static readonly LSET = 90;
    public static readonly LTRIM = 91;
    public static readonly SINGLE_QUOTE = 92;
    public static readonly DOUBLE_QUOTE = 93;
    public static readonly POSITIVE_DECIMAL_LITERAL = 94;
    public static readonly DECIMAL_LITERAL = 95;
    public static readonly IDENTIFIER = 96;

    public static readonly channelNames = [
        "DEFAULT_TOKEN_CHANNEL", "HIDDEN"
    ];

    public static readonly literalNames = [
        null, null, null, "'COPY'", "'DB'", "'REPLACE'", "'DEL'", "'UNLINK'", 
        "'DUMP'", "'EXISTS'", "'EXPIRE'", "'GT'", "'LT'", "'NX'", "'XX'", 
        "'EXPIREAT'", "'EXPIRETIME'", "'PEXPIRE'", "'PEXPIREAT'", "'PEXPIRETIME'", 
        "'KEYS'", "'MOVE'", "'OBJECT'", "'ENCODING'", "'FREQ'", "'IDLETIME'", 
        "'REFCOUNT'", "'PERSIST'", "'TTL'", "'PTTL'", "'RANDOMKEY'", "'RENAME'", 
        "'RENAMENX'", "'SCAN'", "'MATCH'", "'COUNT'", "'TYPE'", "'TOUCH'", 
        "'WAIT'", "'LEFT'", "'RIGHT'", "'BEFORE'", "'AFTER'", "'RANK'", 
        "'MAXLEN'", "'SET'", "'GET'", "'INCR'", "'INCRBY'", "'DECR'", "'DECRBY'", 
        "'EX'", "'PX'", "'EXAT'", "'PXAT'", "'KEEPTTL'", "'APPEND'", "'GETDEL'", 
        "'GETEX'", "'GETRANGE'", "'GETSET'", "'MGET'", "'MSET'", "'MSETNX'", 
        "'PSETEX'", "'SETEX'", "'SETNX'", "'SETRANGE'", "'STRLEN'", "'SUBSTR'", 
        "'LMOVE'", "'BLMOVE'", "'LMPOP'", "'BLMPOP'", "'LPOP'", "'BLPOP'", 
        "'RPOP'", "'BRPOP'", "'RPOPLPUSH'", "'BRPOPLPUSH'", "'LINDEX'", 
        "'LINSERT'", "'LLEN'", "'LPOS'", "'LPUSH'", "'LPUSHX'", "'RPUSH'", 
        "'RPUSHX'", "'LRANGE'", "'LREM'", "'LSET'", "'LTRIM'", "'''", "'\"'"
    ];

    public static readonly symbolicNames = [
        null, "SPACE", "NEWLINE", "COPY", "DB", "REPLACE", "DEL", "UNLINK", 
        "DUMP", "EXISTS", "EXPIRE", "GT", "LT", "NX", "XX", "EXPIREAT", 
        "EXPIRETIME", "PEXPIRE", "PEXPIREAT", "PEXPIRETIME", "KEYS", "MOVE", 
        "OBJECT", "ENCODING", "FREQ", "IDLETIME", "REFCOUNT", "PERSIST", 
        "TTL", "PTTL", "RANDOMKEY", "RENAME", "RENAMENX", "SCAN", "MATCH", 
        "COUNT", "TYPE", "TOUCH", "WAIT", "LEFT", "RIGHT", "BEFORE", "AFTER", 
        "RANK", "MAXLEN", "SET", "GET", "INCR", "INCRBY", "DECR", "DECRBY", 
        "EX", "PX", "EXAT", "PXAT", "KEEPTTL", "APPEND", "GETDEL", "GETEX", 
        "GETRANGE", "GETSET", "MGET", "MSET", "MSETNX", "PSETEX", "SETEX", 
        "SETNX", "SETRANGE", "STRLEN", "SUBSTR", "LMOVE", "BLMOVE", "LMPOP", 
        "BLMPOP", "LPOP", "BLPOP", "RPOP", "BRPOP", "RPOPLPUSH", "BRPOPLPUSH", 
        "LINDEX", "LINSERT", "LLEN", "LPOS", "LPUSH", "LPUSHX", "RPUSH", 
        "RPUSHX", "LRANGE", "LREM", "LSET", "LTRIM", "SINGLE_QUOTE", "DOUBLE_QUOTE", 
        "POSITIVE_DECIMAL_LITERAL", "DECIMAL_LITERAL", "IDENTIFIER"
    ];

    public static readonly modeNames = [
        "DEFAULT_MODE",
    ];

    public static readonly ruleNames = [
        "SPACE", "NEWLINE", "COPY", "DB", "REPLACE", "DEL", "UNLINK", "DUMP", 
        "EXISTS", "EXPIRE", "GT", "LT", "NX", "XX", "EXPIREAT", "EXPIRETIME", 
        "PEXPIRE", "PEXPIREAT", "PEXPIRETIME", "KEYS", "MOVE", "OBJECT", 
        "ENCODING", "FREQ", "IDLETIME", "REFCOUNT", "PERSIST", "TTL", "PTTL", 
        "RANDOMKEY", "RENAME", "RENAMENX", "SCAN", "MATCH", "COUNT", "TYPE", 
        "TOUCH", "WAIT", "LEFT", "RIGHT", "BEFORE", "AFTER", "RANK", "MAXLEN", 
        "SET", "GET", "INCR", "INCRBY", "DECR", "DECRBY", "EX", "PX", "EXAT", 
        "PXAT", "KEEPTTL", "APPEND", "GETDEL", "GETEX", "GETRANGE", "GETSET", 
        "MGET", "MSET", "MSETNX", "PSETEX", "SETEX", "SETNX", "SETRANGE", 
        "STRLEN", "SUBSTR", "LMOVE", "BLMOVE", "LMPOP", "BLMPOP", "LPOP", 
        "BLPOP", "RPOP", "BRPOP", "RPOPLPUSH", "BRPOPLPUSH", "LINDEX", "LINSERT", 
        "LLEN", "LPOS", "LPUSH", "LPUSHX", "RPUSH", "RPUSHX", "LRANGE", 
        "LREM", "LSET", "LTRIM", "SINGLE_QUOTE", "DOUBLE_QUOTE", "DECIMAL_DIGIT", 
        "POSITIVE_DECIMAL_LITERAL", "DECIMAL_LITERAL", "DOUBLE_QUOTE_STRING", 
        "SINGLE_QUOTE_STRING", "BASE_IDENTIFIER", "IDENTIFIER",
    ];


    public constructor(input: antlr.CharStream) {
        super(input);
        this.interpreter = new antlr.LexerATNSimulator(this, RedisLexer._ATN, RedisLexer.decisionsToDFA, new antlr.PredictionContextCache());
    }

    public get grammarFileName(): string { return "RedisLexer.g4"; }

    public get literalNames(): (string | null)[] { return RedisLexer.literalNames; }
    public get symbolicNames(): (string | null)[] { return RedisLexer.symbolicNames; }
    public get ruleNames(): string[] { return RedisLexer.ruleNames; }

    public get serializedATN(): number[] { return RedisLexer._serializedATN; }

    public get channelNames(): string[] { return RedisLexer.channelNames; }

    public get modeNames(): string[] { return RedisLexer.modeNames; }

    public static readonly _serializedATN: number[] = [
        4,0,96,826,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,
        65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,7,
        71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,7,77,2,
        78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,7,
        84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,
        91,7,91,2,92,7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,7,96,2,97,7,
        97,2,98,7,98,2,99,7,99,1,0,4,0,203,8,0,11,0,12,0,204,1,0,1,0,1,1,
        1,1,3,1,211,8,1,1,1,3,1,214,8,1,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,
        1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,
        1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,9,
        1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,11,1,11,1,11,1,12,1,12,
        1,12,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,
        1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,16,1,16,
        1,16,1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,17,1,17,
        1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,
        1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,21,
        1,21,1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,22,1,22,
        1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,24,
        1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,26,
        1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,28,1,28,
        1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,
        1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,31,1,31,
        1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,32,1,33,1,33,1,33,1,33,1,33,
        1,33,1,34,1,34,1,34,1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,35,1,36,
        1,36,1,36,1,36,1,36,1,36,1,37,1,37,1,37,1,37,1,37,1,38,1,38,1,38,
        1,38,1,38,1,39,1,39,1,39,1,39,1,39,1,39,1,40,1,40,1,40,1,40,1,40,
        1,40,1,40,1,41,1,41,1,41,1,41,1,41,1,41,1,42,1,42,1,42,1,42,1,42,
        1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,44,1,44,1,44,1,44,1,45,1,45,
        1,45,1,45,1,46,1,46,1,46,1,46,1,46,1,47,1,47,1,47,1,47,1,47,1,47,
        1,47,1,48,1,48,1,48,1,48,1,48,1,49,1,49,1,49,1,49,1,49,1,49,1,49,
        1,50,1,50,1,50,1,51,1,51,1,51,1,52,1,52,1,52,1,52,1,52,1,53,1,53,
        1,53,1,53,1,53,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,55,1,55,
        1,55,1,55,1,55,1,55,1,55,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,57,
        1,57,1,57,1,57,1,57,1,57,1,58,1,58,1,58,1,58,1,58,1,58,1,58,1,58,
        1,58,1,59,1,59,1,59,1,59,1,59,1,59,1,59,1,60,1,60,1,60,1,60,1,60,
        1,61,1,61,1,61,1,61,1,61,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,63,
        1,63,1,63,1,63,1,63,1,63,1,63,1,64,1,64,1,64,1,64,1,64,1,64,1,65,
        1,65,1,65,1,65,1,65,1,65,1,66,1,66,1,66,1,66,1,66,1,66,1,66,1,66,
        1,66,1,67,1,67,1,67,1,67,1,67,1,67,1,67,1,68,1,68,1,68,1,68,1,68,
        1,68,1,68,1,69,1,69,1,69,1,69,1,69,1,69,1,70,1,70,1,70,1,70,1,70,
        1,70,1,70,1,71,1,71,1,71,1,71,1,71,1,71,1,72,1,72,1,72,1,72,1,72,
        1,72,1,72,1,73,1,73,1,73,1,73,1,73,1,74,1,74,1,74,1,74,1,74,1,74,
        1,75,1,75,1,75,1,75,1,75,1,76,1,76,1,76,1,76,1,76,1,76,1,77,1,77,
        1,77,1,77,1,77,1,77,1,77,1,77,1,77,1,77,1,78,1,78,1,78,1,78,1,78,
        1,78,1,78,1,78,1,78,1,78,1,78,1,79,1,79,1,79,1,79,1,79,1,79,1,79,
        1,80,1,80,1,80,1,80,1,80,1,80,1,80,1,80,1,81,1,81,1,81,1,81,1,81,
        1,82,1,82,1,82,1,82,1,82,1,83,1,83,1,83,1,83,1,83,1,83,1,84,1,84,
        1,84,1,84,1,84,1,84,1,84,1,85,1,85,1,85,1,85,1,85,1,85,1,86,1,86,
        1,86,1,86,1,86,1,86,1,86,1,87,1,87,1,87,1,87,1,87,1,87,1,87,1,88,
        1,88,1,88,1,88,1,88,1,89,1,89,1,89,1,89,1,89,1,90,1,90,1,90,1,90,
        1,90,1,90,1,91,1,91,1,92,1,92,1,93,1,93,1,94,4,94,786,8,94,11,94,
        12,94,787,1,95,3,95,791,8,95,1,95,1,95,1,96,1,96,1,96,1,96,5,96,
        799,8,96,10,96,12,96,802,9,96,1,96,1,96,1,97,1,97,1,97,1,97,5,97,
        810,8,97,10,97,12,97,813,9,97,1,97,1,97,1,98,4,98,818,8,98,11,98,
        12,98,819,1,99,1,99,1,99,3,99,825,8,99,0,0,100,1,1,3,2,5,3,7,4,9,
        5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,
        33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,
        55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,
        77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,
        99,50,101,51,103,52,105,53,107,54,109,55,111,56,113,57,115,58,117,
        59,119,60,121,61,123,62,125,63,127,64,129,65,131,66,133,67,135,68,
        137,69,139,70,141,71,143,72,145,73,147,74,149,75,151,76,153,77,155,
        78,157,79,159,80,161,81,163,82,165,83,167,84,169,85,171,86,173,87,
        175,88,177,89,179,90,181,91,183,92,185,93,187,0,189,94,191,95,193,
        0,195,0,197,0,199,96,1,0,31,2,0,9,9,32,32,2,0,67,67,99,99,2,0,79,
        79,111,111,2,0,80,80,112,112,2,0,89,89,121,121,2,0,68,68,100,100,
        2,0,66,66,98,98,2,0,82,82,114,114,2,0,69,69,101,101,2,0,76,76,108,
        108,2,0,65,65,97,97,2,0,85,85,117,117,2,0,78,78,110,110,2,0,73,73,
        105,105,2,0,75,75,107,107,2,0,77,77,109,109,2,0,88,88,120,120,2,
        0,83,83,115,115,2,0,84,84,116,116,2,0,71,71,103,103,2,0,86,86,118,
        118,2,0,74,74,106,106,2,0,70,70,102,102,2,0,81,81,113,113,2,0,72,
        72,104,104,2,0,87,87,119,119,1,0,48,57,1,0,45,45,4,0,10,10,13,13,
        34,34,92,92,4,0,10,10,13,13,39,39,92,92,5,0,9,10,13,13,32,32,34,
        34,39,39,833,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,
        1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,
        1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,
        1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,
        1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,
        1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,
        1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,
        1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,
        1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,
        1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,
        1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,
        0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,
        0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,
        127,1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,0,0,135,1,0,
        0,0,0,137,1,0,0,0,0,139,1,0,0,0,0,141,1,0,0,0,0,143,1,0,0,0,0,145,
        1,0,0,0,0,147,1,0,0,0,0,149,1,0,0,0,0,151,1,0,0,0,0,153,1,0,0,0,
        0,155,1,0,0,0,0,157,1,0,0,0,0,159,1,0,0,0,0,161,1,0,0,0,0,163,1,
        0,0,0,0,165,1,0,0,0,0,167,1,0,0,0,0,169,1,0,0,0,0,171,1,0,0,0,0,
        173,1,0,0,0,0,175,1,0,0,0,0,177,1,0,0,0,0,179,1,0,0,0,0,181,1,0,
        0,0,0,183,1,0,0,0,0,185,1,0,0,0,0,189,1,0,0,0,0,191,1,0,0,0,0,199,
        1,0,0,0,1,202,1,0,0,0,3,213,1,0,0,0,5,215,1,0,0,0,7,220,1,0,0,0,
        9,223,1,0,0,0,11,231,1,0,0,0,13,235,1,0,0,0,15,242,1,0,0,0,17,247,
        1,0,0,0,19,254,1,0,0,0,21,261,1,0,0,0,23,264,1,0,0,0,25,267,1,0,
        0,0,27,270,1,0,0,0,29,273,1,0,0,0,31,282,1,0,0,0,33,293,1,0,0,0,
        35,301,1,0,0,0,37,311,1,0,0,0,39,323,1,0,0,0,41,328,1,0,0,0,43,333,
        1,0,0,0,45,340,1,0,0,0,47,349,1,0,0,0,49,354,1,0,0,0,51,363,1,0,
        0,0,53,372,1,0,0,0,55,380,1,0,0,0,57,384,1,0,0,0,59,389,1,0,0,0,
        61,399,1,0,0,0,63,406,1,0,0,0,65,415,1,0,0,0,67,420,1,0,0,0,69,426,
        1,0,0,0,71,432,1,0,0,0,73,437,1,0,0,0,75,443,1,0,0,0,77,448,1,0,
        0,0,79,453,1,0,0,0,81,459,1,0,0,0,83,466,1,0,0,0,85,472,1,0,0,0,
        87,477,1,0,0,0,89,484,1,0,0,0,91,488,1,0,0,0,93,492,1,0,0,0,95,497,
        1,0,0,0,97,504,1,0,0,0,99,509,1,0,0,0,101,516,1,0,0,0,103,519,1,
        0,0,0,105,522,1,0,0,0,107,527,1,0,0,0,109,532,1,0,0,0,111,540,1,
        0,0,0,113,547,1,0,0,0,115,554,1,0,0,0,117,560,1,0,0,0,119,569,1,
        0,0,0,121,576,1,0,0,0,123,581,1,0,0,0,125,586,1,0,0,0,127,593,1,
        0,0,0,129,600,1,0,0,0,131,606,1,0,0,0,133,612,1,0,0,0,135,621,1,
        0,0,0,137,628,1,0,0,0,139,635,1,0,0,0,141,641,1,0,0,0,143,648,1,
        0,0,0,145,654,1,0,0,0,147,661,1,0,0,0,149,666,1,0,0,0,151,672,1,
        0,0,0,153,677,1,0,0,0,155,683,1,0,0,0,157,693,1,0,0,0,159,704,1,
        0,0,0,161,711,1,0,0,0,163,719,1,0,0,0,165,724,1,0,0,0,167,729,1,
        0,0,0,169,735,1,0,0,0,171,742,1,0,0,0,173,748,1,0,0,0,175,755,1,
        0,0,0,177,762,1,0,0,0,179,767,1,0,0,0,181,772,1,0,0,0,183,778,1,
        0,0,0,185,780,1,0,0,0,187,782,1,0,0,0,189,785,1,0,0,0,191,790,1,
        0,0,0,193,794,1,0,0,0,195,805,1,0,0,0,197,817,1,0,0,0,199,824,1,
        0,0,0,201,203,7,0,0,0,202,201,1,0,0,0,203,204,1,0,0,0,204,202,1,
        0,0,0,204,205,1,0,0,0,205,206,1,0,0,0,206,207,6,0,0,0,207,2,1,0,
        0,0,208,210,5,13,0,0,209,211,5,10,0,0,210,209,1,0,0,0,210,211,1,
        0,0,0,211,214,1,0,0,0,212,214,5,10,0,0,213,208,1,0,0,0,213,212,1,
        0,0,0,214,4,1,0,0,0,215,216,7,1,0,0,216,217,7,2,0,0,217,218,7,3,
        0,0,218,219,7,4,0,0,219,6,1,0,0,0,220,221,7,5,0,0,221,222,7,6,0,
        0,222,8,1,0,0,0,223,224,7,7,0,0,224,225,7,8,0,0,225,226,7,3,0,0,
        226,227,7,9,0,0,227,228,7,10,0,0,228,229,7,1,0,0,229,230,7,8,0,0,
        230,10,1,0,0,0,231,232,7,5,0,0,232,233,7,8,0,0,233,234,7,9,0,0,234,
        12,1,0,0,0,235,236,7,11,0,0,236,237,7,12,0,0,237,238,7,9,0,0,238,
        239,7,13,0,0,239,240,7,12,0,0,240,241,7,14,0,0,241,14,1,0,0,0,242,
        243,7,5,0,0,243,244,7,11,0,0,244,245,7,15,0,0,245,246,7,3,0,0,246,
        16,1,0,0,0,247,248,7,8,0,0,248,249,7,16,0,0,249,250,7,13,0,0,250,
        251,7,17,0,0,251,252,7,18,0,0,252,253,7,17,0,0,253,18,1,0,0,0,254,
        255,7,8,0,0,255,256,7,16,0,0,256,257,7,3,0,0,257,258,7,13,0,0,258,
        259,7,7,0,0,259,260,7,8,0,0,260,20,1,0,0,0,261,262,7,19,0,0,262,
        263,7,18,0,0,263,22,1,0,0,0,264,265,7,9,0,0,265,266,7,18,0,0,266,
        24,1,0,0,0,267,268,7,12,0,0,268,269,7,16,0,0,269,26,1,0,0,0,270,
        271,7,16,0,0,271,272,7,16,0,0,272,28,1,0,0,0,273,274,7,8,0,0,274,
        275,7,16,0,0,275,276,7,3,0,0,276,277,7,13,0,0,277,278,7,7,0,0,278,
        279,7,8,0,0,279,280,7,10,0,0,280,281,7,18,0,0,281,30,1,0,0,0,282,
        283,7,8,0,0,283,284,7,16,0,0,284,285,7,3,0,0,285,286,7,13,0,0,286,
        287,7,7,0,0,287,288,7,8,0,0,288,289,7,18,0,0,289,290,7,13,0,0,290,
        291,7,15,0,0,291,292,7,8,0,0,292,32,1,0,0,0,293,294,7,3,0,0,294,
        295,7,8,0,0,295,296,7,16,0,0,296,297,7,3,0,0,297,298,7,13,0,0,298,
        299,7,7,0,0,299,300,7,8,0,0,300,34,1,0,0,0,301,302,7,3,0,0,302,303,
        7,8,0,0,303,304,7,16,0,0,304,305,7,3,0,0,305,306,7,13,0,0,306,307,
        7,7,0,0,307,308,7,8,0,0,308,309,7,10,0,0,309,310,7,18,0,0,310,36,
        1,0,0,0,311,312,7,3,0,0,312,313,7,8,0,0,313,314,7,16,0,0,314,315,
        7,3,0,0,315,316,7,13,0,0,316,317,7,7,0,0,317,318,7,8,0,0,318,319,
        7,18,0,0,319,320,7,13,0,0,320,321,7,15,0,0,321,322,7,8,0,0,322,38,
        1,0,0,0,323,324,7,14,0,0,324,325,7,8,0,0,325,326,7,4,0,0,326,327,
        7,17,0,0,327,40,1,0,0,0,328,329,7,15,0,0,329,330,7,2,0,0,330,331,
        7,20,0,0,331,332,7,8,0,0,332,42,1,0,0,0,333,334,7,2,0,0,334,335,
        7,6,0,0,335,336,7,21,0,0,336,337,7,8,0,0,337,338,7,1,0,0,338,339,
        7,18,0,0,339,44,1,0,0,0,340,341,7,8,0,0,341,342,7,12,0,0,342,343,
        7,1,0,0,343,344,7,2,0,0,344,345,7,5,0,0,345,346,7,13,0,0,346,347,
        7,12,0,0,347,348,7,19,0,0,348,46,1,0,0,0,349,350,7,22,0,0,350,351,
        7,7,0,0,351,352,7,8,0,0,352,353,7,23,0,0,353,48,1,0,0,0,354,355,
        7,13,0,0,355,356,7,5,0,0,356,357,7,9,0,0,357,358,7,8,0,0,358,359,
        7,18,0,0,359,360,7,13,0,0,360,361,7,15,0,0,361,362,7,8,0,0,362,50,
        1,0,0,0,363,364,7,7,0,0,364,365,7,8,0,0,365,366,7,22,0,0,366,367,
        7,1,0,0,367,368,7,2,0,0,368,369,7,11,0,0,369,370,7,12,0,0,370,371,
        7,18,0,0,371,52,1,0,0,0,372,373,7,3,0,0,373,374,7,8,0,0,374,375,
        7,7,0,0,375,376,7,17,0,0,376,377,7,13,0,0,377,378,7,17,0,0,378,379,
        7,18,0,0,379,54,1,0,0,0,380,381,7,18,0,0,381,382,7,18,0,0,382,383,
        7,9,0,0,383,56,1,0,0,0,384,385,7,3,0,0,385,386,7,18,0,0,386,387,
        7,18,0,0,387,388,7,9,0,0,388,58,1,0,0,0,389,390,7,7,0,0,390,391,
        7,10,0,0,391,392,7,12,0,0,392,393,7,5,0,0,393,394,7,2,0,0,394,395,
        7,15,0,0,395,396,7,14,0,0,396,397,7,8,0,0,397,398,7,4,0,0,398,60,
        1,0,0,0,399,400,7,7,0,0,400,401,7,8,0,0,401,402,7,12,0,0,402,403,
        7,10,0,0,403,404,7,15,0,0,404,405,7,8,0,0,405,62,1,0,0,0,406,407,
        7,7,0,0,407,408,7,8,0,0,408,409,7,12,0,0,409,410,7,10,0,0,410,411,
        7,15,0,0,411,412,7,8,0,0,412,413,7,12,0,0,413,414,7,16,0,0,414,64,
        1,0,0,0,415,416,7,17,0,0,416,417,7,1,0,0,417,418,7,10,0,0,418,419,
        7,12,0,0,419,66,1,0,0,0,420,421,7,15,0,0,421,422,7,10,0,0,422,423,
        7,18,0,0,423,424,7,1,0,0,424,425,7,24,0,0,425,68,1,0,0,0,426,427,
        7,1,0,0,427,428,7,2,0,0,428,429,7,11,0,0,429,430,7,12,0,0,430,431,
        7,18,0,0,431,70,1,0,0,0,432,433,7,18,0,0,433,434,7,4,0,0,434,435,
        7,3,0,0,435,436,7,8,0,0,436,72,1,0,0,0,437,438,7,18,0,0,438,439,
        7,2,0,0,439,440,7,11,0,0,440,441,7,1,0,0,441,442,7,24,0,0,442,74,
        1,0,0,0,443,444,7,25,0,0,444,445,7,10,0,0,445,446,7,13,0,0,446,447,
        7,18,0,0,447,76,1,0,0,0,448,449,7,9,0,0,449,450,7,8,0,0,450,451,
        7,22,0,0,451,452,7,18,0,0,452,78,1,0,0,0,453,454,7,7,0,0,454,455,
        7,13,0,0,455,456,7,19,0,0,456,457,7,24,0,0,457,458,7,18,0,0,458,
        80,1,0,0,0,459,460,7,6,0,0,460,461,7,8,0,0,461,462,7,22,0,0,462,
        463,7,2,0,0,463,464,7,7,0,0,464,465,7,8,0,0,465,82,1,0,0,0,466,467,
        7,10,0,0,467,468,7,22,0,0,468,469,7,18,0,0,469,470,7,8,0,0,470,471,
        7,7,0,0,471,84,1,0,0,0,472,473,7,7,0,0,473,474,7,10,0,0,474,475,
        7,12,0,0,475,476,7,14,0,0,476,86,1,0,0,0,477,478,7,15,0,0,478,479,
        7,10,0,0,479,480,7,16,0,0,480,481,7,9,0,0,481,482,7,8,0,0,482,483,
        7,12,0,0,483,88,1,0,0,0,484,485,7,17,0,0,485,486,7,8,0,0,486,487,
        7,18,0,0,487,90,1,0,0,0,488,489,7,19,0,0,489,490,7,8,0,0,490,491,
        7,18,0,0,491,92,1,0,0,0,492,493,7,13,0,0,493,494,7,12,0,0,494,495,
        7,1,0,0,495,496,7,7,0,0,496,94,1,0,0,0,497,498,7,13,0,0,498,499,
        7,12,0,0,499,500,7,1,0,0,500,501,7,7,0,0,501,502,7,6,0,0,502,503,
        7,4,0,0,503,96,1,0,0,0,504,505,7,5,0,0,505,506,7,8,0,0,506,507,7,
        1,0,0,507,508,7,7,0,0,508,98,1,0,0,0,509,510,7,5,0,0,510,511,7,8,
        0,0,511,512,7,1,0,0,512,513,7,7,0,0,513,514,7,6,0,0,514,515,7,4,
        0,0,515,100,1,0,0,0,516,517,7,8,0,0,517,518,7,16,0,0,518,102,1,0,
        0,0,519,520,7,3,0,0,520,521,7,16,0,0,521,104,1,0,0,0,522,523,7,8,
        0,0,523,524,7,16,0,0,524,525,7,10,0,0,525,526,7,18,0,0,526,106,1,
        0,0,0,527,528,7,3,0,0,528,529,7,16,0,0,529,530,7,10,0,0,530,531,
        7,18,0,0,531,108,1,0,0,0,532,533,7,14,0,0,533,534,7,8,0,0,534,535,
        7,8,0,0,535,536,7,3,0,0,536,537,7,18,0,0,537,538,7,18,0,0,538,539,
        7,9,0,0,539,110,1,0,0,0,540,541,7,10,0,0,541,542,7,3,0,0,542,543,
        7,3,0,0,543,544,7,8,0,0,544,545,7,12,0,0,545,546,7,5,0,0,546,112,
        1,0,0,0,547,548,7,19,0,0,548,549,7,8,0,0,549,550,7,18,0,0,550,551,
        7,5,0,0,551,552,7,8,0,0,552,553,7,9,0,0,553,114,1,0,0,0,554,555,
        7,19,0,0,555,556,7,8,0,0,556,557,7,18,0,0,557,558,7,8,0,0,558,559,
        7,16,0,0,559,116,1,0,0,0,560,561,7,19,0,0,561,562,7,8,0,0,562,563,
        7,18,0,0,563,564,7,7,0,0,564,565,7,10,0,0,565,566,7,12,0,0,566,567,
        7,19,0,0,567,568,7,8,0,0,568,118,1,0,0,0,569,570,7,19,0,0,570,571,
        7,8,0,0,571,572,7,18,0,0,572,573,7,17,0,0,573,574,7,8,0,0,574,575,
        7,18,0,0,575,120,1,0,0,0,576,577,7,15,0,0,577,578,7,19,0,0,578,579,
        7,8,0,0,579,580,7,18,0,0,580,122,1,0,0,0,581,582,7,15,0,0,582,583,
        7,17,0,0,583,584,7,8,0,0,584,585,7,18,0,0,585,124,1,0,0,0,586,587,
        7,15,0,0,587,588,7,17,0,0,588,589,7,8,0,0,589,590,7,18,0,0,590,591,
        7,12,0,0,591,592,7,16,0,0,592,126,1,0,0,0,593,594,7,3,0,0,594,595,
        7,17,0,0,595,596,7,8,0,0,596,597,7,18,0,0,597,598,7,8,0,0,598,599,
        7,16,0,0,599,128,1,0,0,0,600,601,7,17,0,0,601,602,7,8,0,0,602,603,
        7,18,0,0,603,604,7,8,0,0,604,605,7,16,0,0,605,130,1,0,0,0,606,607,
        7,17,0,0,607,608,7,8,0,0,608,609,7,18,0,0,609,610,7,12,0,0,610,611,
        7,16,0,0,611,132,1,0,0,0,612,613,7,17,0,0,613,614,7,8,0,0,614,615,
        7,18,0,0,615,616,7,7,0,0,616,617,7,10,0,0,617,618,7,12,0,0,618,619,
        7,19,0,0,619,620,7,8,0,0,620,134,1,0,0,0,621,622,7,17,0,0,622,623,
        7,18,0,0,623,624,7,7,0,0,624,625,7,9,0,0,625,626,7,8,0,0,626,627,
        7,12,0,0,627,136,1,0,0,0,628,629,7,17,0,0,629,630,7,11,0,0,630,631,
        7,6,0,0,631,632,7,17,0,0,632,633,7,18,0,0,633,634,7,7,0,0,634,138,
        1,0,0,0,635,636,7,9,0,0,636,637,7,15,0,0,637,638,7,2,0,0,638,639,
        7,20,0,0,639,640,7,8,0,0,640,140,1,0,0,0,641,642,7,6,0,0,642,643,
        7,9,0,0,643,644,7,15,0,0,644,645,7,2,0,0,645,646,7,20,0,0,646,647,
        7,8,0,0,647,142,1,0,0,0,648,649,7,9,0,0,649,650,7,15,0,0,650,651,
        7,3,0,0,651,652,7,2,0,0,652,653,7,3,0,0,653,144,1,0,0,0,654,655,
        7,6,0,0,655,656,7,9,0,0,656,657,7,15,0,0,657,658,7,3,0,0,658,659,
        7,2,0,0,659,660,7,3,0,0,660,146,1,0,0,0,661,662,7,9,0,0,662,663,
        7,3,0,0,663,664,7,2,0,0,664,665,7,3,0,0,665,148,1,0,0,0,666,667,
        7,6,0,0,667,668,7,9,0,0,668,669,7,3,0,0,669,670,7,2,0,0,670,671,
        7,3,0,0,671,150,1,0,0,0,672,673,7,7,0,0,673,674,7,3,0,0,674,675,
        7,2,0,0,675,676,7,3,0,0,676,152,1,0,0,0,677,678,7,6,0,0,678,679,
        7,7,0,0,679,680,7,3,0,0,680,681,7,2,0,0,681,682,7,3,0,0,682,154,
        1,0,0,0,683,684,7,7,0,0,684,685,7,3,0,0,685,686,7,2,0,0,686,687,
        7,3,0,0,687,688,7,9,0,0,688,689,7,3,0,0,689,690,7,11,0,0,690,691,
        7,17,0,0,691,692,7,24,0,0,692,156,1,0,0,0,693,694,7,6,0,0,694,695,
        7,7,0,0,695,696,7,3,0,0,696,697,7,2,0,0,697,698,7,3,0,0,698,699,
        7,9,0,0,699,700,7,3,0,0,700,701,7,11,0,0,701,702,7,17,0,0,702,703,
        7,24,0,0,703,158,1,0,0,0,704,705,7,9,0,0,705,706,7,13,0,0,706,707,
        7,12,0,0,707,708,7,5,0,0,708,709,7,8,0,0,709,710,7,16,0,0,710,160,
        1,0,0,0,711,712,7,9,0,0,712,713,7,13,0,0,713,714,7,12,0,0,714,715,
        7,17,0,0,715,716,7,8,0,0,716,717,7,7,0,0,717,718,7,18,0,0,718,162,
        1,0,0,0,719,720,7,9,0,0,720,721,7,9,0,0,721,722,7,8,0,0,722,723,
        7,12,0,0,723,164,1,0,0,0,724,725,7,9,0,0,725,726,7,3,0,0,726,727,
        7,2,0,0,727,728,7,17,0,0,728,166,1,0,0,0,729,730,7,9,0,0,730,731,
        7,3,0,0,731,732,7,11,0,0,732,733,7,17,0,0,733,734,7,24,0,0,734,168,
        1,0,0,0,735,736,7,9,0,0,736,737,7,3,0,0,737,738,7,11,0,0,738,739,
        7,17,0,0,739,740,7,24,0,0,740,741,7,16,0,0,741,170,1,0,0,0,742,743,
        7,7,0,0,743,744,7,3,0,0,744,745,7,11,0,0,745,746,7,17,0,0,746,747,
        7,24,0,0,747,172,1,0,0,0,748,749,7,7,0,0,749,750,7,3,0,0,750,751,
        7,11,0,0,751,752,7,17,0,0,752,753,7,24,0,0,753,754,7,16,0,0,754,
        174,1,0,0,0,755,756,7,9,0,0,756,757,7,7,0,0,757,758,7,10,0,0,758,
        759,7,12,0,0,759,760,7,19,0,0,760,761,7,8,0,0,761,176,1,0,0,0,762,
        763,7,9,0,0,763,764,7,7,0,0,764,765,7,8,0,0,765,766,7,15,0,0,766,
        178,1,0,0,0,767,768,7,9,0,0,768,769,7,17,0,0,769,770,7,8,0,0,770,
        771,7,18,0,0,771,180,1,0,0,0,772,773,7,9,0,0,773,774,7,18,0,0,774,
        775,7,7,0,0,775,776,7,13,0,0,776,777,7,15,0,0,777,182,1,0,0,0,778,
        779,5,39,0,0,779,184,1,0,0,0,780,781,5,34,0,0,781,186,1,0,0,0,782,
        783,7,26,0,0,783,188,1,0,0,0,784,786,3,187,93,0,785,784,1,0,0,0,
        786,787,1,0,0,0,787,785,1,0,0,0,787,788,1,0,0,0,788,190,1,0,0,0,
        789,791,7,27,0,0,790,789,1,0,0,0,790,791,1,0,0,0,791,792,1,0,0,0,
        792,793,3,189,94,0,793,192,1,0,0,0,794,800,5,34,0,0,795,796,5,92,
        0,0,796,799,9,0,0,0,797,799,8,28,0,0,798,795,1,0,0,0,798,797,1,0,
        0,0,799,802,1,0,0,0,800,798,1,0,0,0,800,801,1,0,0,0,801,803,1,0,
        0,0,802,800,1,0,0,0,803,804,5,34,0,0,804,194,1,0,0,0,805,811,5,39,
        0,0,806,807,5,92,0,0,807,810,9,0,0,0,808,810,8,29,0,0,809,806,1,
        0,0,0,809,808,1,0,0,0,810,813,1,0,0,0,811,809,1,0,0,0,811,812,1,
        0,0,0,812,814,1,0,0,0,813,811,1,0,0,0,814,815,5,39,0,0,815,196,1,
        0,0,0,816,818,8,30,0,0,817,816,1,0,0,0,818,819,1,0,0,0,819,817,1,
        0,0,0,819,820,1,0,0,0,820,198,1,0,0,0,821,825,3,197,98,0,822,825,
        3,193,96,0,823,825,3,195,97,0,824,821,1,0,0,0,824,822,1,0,0,0,824,
        823,1,0,0,0,825,200,1,0,0,0,12,0,204,210,213,787,790,798,800,809,
        811,819,824,1,0,1,0
    ];

    private static __ATN: antlr.ATN;
    public static get _ATN(): antlr.ATN {
        if (!RedisLexer.__ATN) {
            RedisLexer.__ATN = new antlr.ATNDeserializer().deserialize(RedisLexer._serializedATN);
        }

        return RedisLexer.__ATN;
    }


    private static readonly vocabulary = new antlr.Vocabulary(RedisLexer.literalNames, RedisLexer.symbolicNames, []);

    public override get vocabulary(): antlr.Vocabulary {
        return RedisLexer.vocabulary;
    }

    private static readonly decisionsToDFA = RedisLexer._ATN.decisionToState.map( (ds: antlr.DecisionState, index: number) => new antlr.DFA(ds, index) );
}
