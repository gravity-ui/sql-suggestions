import {KeywordSuggestion} from '../../../../shared';
import {parseRedisQueryWithCursor, parseRedisQueryWithoutCursor} from '../../index';

test('should not report errors on multiple (2) commands', () => {
    const autocompleteResult = parseRedisQueryWithoutCursor('GET test\nSET test test');

    expect(autocompleteResult.errors).toHaveLength(0);
});

test('should not report errors on multiple (3) commands', () => {
    const autocompleteResult = parseRedisQueryWithoutCursor('GET test\nSET test test\nGET test');

    expect(autocompleteResult.errors).toHaveLength(0);
});

test('should suggest all commands', () => {
    const autocompleteResult = parseRedisQueryWithCursor('|');

    const keywordsSuggestion: KeywordSuggestion[] = [
        {value: 'COPY'},
        {value: 'DEL'},
        {value: 'UNLINK'},
        {value: 'DUMP'},
        {value: 'EXISTS'},
        {value: 'EXPIRE'},
        {value: 'EXPIREAT'},
        {value: 'EXPIRETIME'},
        {value: 'PEXPIRE'},
        {value: 'PEXPIREAT'},
        {value: 'PEXPIRETIME'},
        {value: 'KEYS'},
        {value: 'MOVE'},
        {value: 'OBJECT'},
        {value: 'PERSIST'},
        {value: 'TTL'},
        {value: 'PTTL'},
        {value: 'RANDOMKEY'},
        {value: 'RENAME'},
        {value: 'RENAMENX'},
        {value: 'SCAN'},
        {value: 'TOUCH'},
        {value: 'TYPE'},
        {value: 'WAIT'},
        {value: 'SET'},
        {value: 'GET'},
        {value: 'INCR'},
        {value: 'INCRBY'},
        {value: 'DECR'},
        {value: 'DECRBY'},
        {value: 'APPEND'},
        {value: 'GETDEL'},
        {value: 'GETEX'},
        {value: 'GETRANGE'},
        {value: 'GETSET'},
        {value: 'MGET'},
        {value: 'MSET'},
        {value: 'MSETNX'},
        {value: 'PSETEX'},
        {value: 'SETEX'},
        {value: 'SETNX'},
        {value: 'SETRANGE'},
        {value: 'STRLEN'},
        {value: 'SUBSTR'},
        {value: 'LMOVE'},
        {value: 'BLMOVE'},
        {value: 'LMPOP'},
        {value: 'BLMPOP'},
        {value: 'LPOP'},
        {value: 'BLPOP'},
        {value: 'RPOP'},
        {value: 'BRPOP'},
        {value: 'RPOPLPUSH'},
        {value: 'BRPOPLPUSH'},
        {value: 'LINDEX'},
        {value: 'LINSERT'},
        {value: 'LLEN'},
        {value: 'LPOS'},
        {value: 'LPUSH'},
        {value: 'LPUSHX'},
        {value: 'RPUSH'},
        {value: 'RPUSHX'},
        {value: 'LRANGE'},
        {value: 'LREM'},
        {value: 'LSET'},
        {value: 'LTRIM'},
    ];
    expect(autocompleteResult.suggestKeywords).toEqual(keywordsSuggestion);
});

test('should suggest all commands on second line', () => {
    const autocompleteResult = parseRedisQueryWithCursor('GET test\n|');

    const keywordsSuggestion: KeywordSuggestion[] = [
        {value: 'COPY'},
        {value: 'DEL'},
        {value: 'UNLINK'},
        {value: 'DUMP'},
        {value: 'EXISTS'},
        {value: 'EXPIRE'},
        {value: 'EXPIREAT'},
        {value: 'EXPIRETIME'},
        {value: 'PEXPIRE'},
        {value: 'PEXPIREAT'},
        {value: 'PEXPIRETIME'},
        {value: 'KEYS'},
        {value: 'MOVE'},
        {value: 'OBJECT'},
        {value: 'PERSIST'},
        {value: 'TTL'},
        {value: 'PTTL'},
        {value: 'RANDOMKEY'},
        {value: 'RENAME'},
        {value: 'RENAMENX'},
        {value: 'SCAN'},
        {value: 'TOUCH'},
        {value: 'TYPE'},
        {value: 'WAIT'},
        {value: 'SET'},
        {value: 'GET'},
        {value: 'INCR'},
        {value: 'INCRBY'},
        {value: 'DECR'},
        {value: 'DECRBY'},
        {value: 'APPEND'},
        {value: 'GETDEL'},
        {value: 'GETEX'},
        {value: 'GETRANGE'},
        {value: 'GETSET'},
        {value: 'MGET'},
        {value: 'MSET'},
        {value: 'MSETNX'},
        {value: 'PSETEX'},
        {value: 'SETEX'},
        {value: 'SETNX'},
        {value: 'SETRANGE'},
        {value: 'STRLEN'},
        {value: 'SUBSTR'},
        {value: 'LMOVE'},
        {value: 'BLMOVE'},
        {value: 'LMPOP'},
        {value: 'BLMPOP'},
        {value: 'LPOP'},
        {value: 'BLPOP'},
        {value: 'RPOP'},
        {value: 'BRPOP'},
        {value: 'RPOPLPUSH'},
        {value: 'BRPOPLPUSH'},
        {value: 'LINDEX'},
        {value: 'LINSERT'},
        {value: 'LLEN'},
        {value: 'LPOS'},
        {value: 'LPUSH'},
        {value: 'LPUSHX'},
        {value: 'RPUSH'},
        {value: 'RPUSHX'},
        {value: 'LRANGE'},
        {value: 'LREM'},
        {value: 'LSET'},
        {value: 'LTRIM'},
    ];
    expect(autocompleteResult.suggestKeywords).toEqual(keywordsSuggestion);
});

test('should suggest all commands on third line', () => {
    const autocompleteResult = parseRedisQueryWithCursor('GET test\n\n|');

    const keywordsSuggestion: KeywordSuggestion[] = [
        {value: 'COPY'},
        {value: 'DEL'},
        {value: 'UNLINK'},
        {value: 'DUMP'},
        {value: 'EXISTS'},
        {value: 'EXPIRE'},
        {value: 'EXPIREAT'},
        {value: 'EXPIRETIME'},
        {value: 'PEXPIRE'},
        {value: 'PEXPIREAT'},
        {value: 'PEXPIRETIME'},
        {value: 'KEYS'},
        {value: 'MOVE'},
        {value: 'OBJECT'},
        {value: 'PERSIST'},
        {value: 'TTL'},
        {value: 'PTTL'},
        {value: 'RANDOMKEY'},
        {value: 'RENAME'},
        {value: 'RENAMENX'},
        {value: 'SCAN'},
        {value: 'TOUCH'},
        {value: 'TYPE'},
        {value: 'WAIT'},
        {value: 'SET'},
        {value: 'GET'},
        {value: 'INCR'},
        {value: 'INCRBY'},
        {value: 'DECR'},
        {value: 'DECRBY'},
        {value: 'APPEND'},
        {value: 'GETDEL'},
        {value: 'GETEX'},
        {value: 'GETRANGE'},
        {value: 'GETSET'},
        {value: 'MGET'},
        {value: 'MSET'},
        {value: 'MSETNX'},
        {value: 'PSETEX'},
        {value: 'SETEX'},
        {value: 'SETNX'},
        {value: 'SETRANGE'},
        {value: 'STRLEN'},
        {value: 'SUBSTR'},
        {value: 'LMOVE'},
        {value: 'BLMOVE'},
        {value: 'LMPOP'},
        {value: 'BLMPOP'},
        {value: 'LPOP'},
        {value: 'BLPOP'},
        {value: 'RPOP'},
        {value: 'BRPOP'},
        {value: 'RPOPLPUSH'},
        {value: 'BRPOPLPUSH'},
        {value: 'LINDEX'},
        {value: 'LINSERT'},
        {value: 'LLEN'},
        {value: 'LPOS'},
        {value: 'LPUSH'},
        {value: 'LPUSHX'},
        {value: 'RPUSH'},
        {value: 'RPUSHX'},
        {value: 'LRANGE'},
        {value: 'LREM'},
        {value: 'LSET'},
        {value: 'LTRIM'},
    ];
    expect(autocompleteResult.suggestKeywords).toEqual(keywordsSuggestion);
});
